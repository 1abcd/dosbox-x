http://www.vmxray.com/

glActiveTextureARB
glMultiTexCoord4fvARB

export CFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"
export CXXFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"

type contents in autogen.sh 
aclocal
autoheader
automake --include-deps --add-missing --copy
autoconf

export LIBS="-ltbb"
export CXX='/usr/bin/g++ -std=c++11'

./configure --enable-core-inline && make


PATCHELF

========================================================================================================================

Date: Jul. 23. 2013
Written by Taewoong Yoo

This guide will give you how to build DOSBox on 32-bit based system with GCC.

For building debugger-enabled build, refer to http://www.vogons.org/viewtopic.php?t=3944
You may need curses library to support debugging.

SVN-Daum build requires the following libraries:
SDL | physfs | zlib | libpng | fluidsynth | libogg | libvorbis | libpcap | freetype | sdl_net | sdl_sound

Linux
Get the latest version of Ubuntu Desktop (13.04 or higher) from http://www.ubuntu.com/ and install.
Create and logon as your account. Open Terminal.

******* Preparation
To obtain admin previlege, type:
  sudo su

* For downloading source from repository, you need Mercurial, Git, and Subversion.
apt-get install mercurial
apt-get install git
apt-get install subversion

* This step is for setting basic components for building DOSBox.
apt-get install libtool
apt-get install autoconf
apt-get install automake
apt-get install libglew-dev
apt-get install g++
apt-get install cmake
apt-get install cmake-qt-gui

* The following lines are for libpcap installation.
apt-get install flex
apt-get install bison

Now, go to /tmp

******* SDL
Never use SDL 2.0 which is incompatible with DOSBox!
hg clone -u SDL-1.2 http://hg.libsdl.org/SDL

Now you've got SDL. Go to SDL directory.
Get Moe's openglhq patch from my website and apply it to the SDL source.
This patch includes some fixes to get DOSBox working fine and also implements openglhq output.

patch -up1 < openglhq-dosbox-for-sdl-202121117_msvc_gcc.patch
./configure --enable-shared=no && make && make install

******* zlib
Get the latest version of zlib from http://www.zlib.net/ and extract ti to /tmp

./configure --static && make && make install

******* libpng
git clone git://git.code.sf.net/p/libpng/code libpng-code

After git clone, go to libpng-code directory and type:
make -f scripts/makefile.linux
cp libpng.a /usr/local/lib/libpng.a
cp png.h /usr/local/include/png.h
cp pngconf.h /usr/local/include/pngconf.h
cp pnglibconf.h /usr/local/include/pnglibconf.h
cp libpng-config /usr/local/bin/libpng-config

*******  SDL_net
SDL_net is used for networking.
Don't use hg version of SDL_net as it does not support SDL 1.2.
Get SDL_net 1.2.8 and extract it to /tmp. Go to sdl_net directory and type:
./autogen.sh && ./configure --enable-shared=no && make && make install

******** libflac (needed for SDL_sound)
git clone git://git.xiph.org/flac.git

After git clone, go to flac directory and type:
./configure --enable-shared="" --enabled-static && make && make install

******** libvobis (needed for SDL_sound)
svn co http://svn.xiph.org/trunk/vorbis

After svn clone, go to vorbis directory and type:
./configure --enable-shared=no && make &&make install

******** libogg (needed for SDL_sound)
svn co http://svn.xiph.org/trunk/ogg

After svn clone, go to ogg directory and type:
./autogen.sh && ./configure --enable-shared=no && make && make install

******** physfs
This is used for zip/7z mounting.
hg clone http://hg.icculus.org/icculus/physfs/

Go to physfs directory and type:
cmake-gui .

Click configure -> unix makefiles -> use default native compilers.
Uncheck physfs_build_shared
Click configure again
Click generate and close the cmake window.
Type:
make && make install

******* glib (needed for Fluidsynth)
In order to install glib, you need libffi, expat, and python.
Visit http://www.linuxfromscratch.org/blfs/view/svn/general/libffi.html
Get libffi and its patch, extract it to /tmp, and apply patch:
patch -Np1 -i ../libffi-3.0.13-includedir-1.patch
./configure --prefix=/usr/local && make && make install

Get expat from http://www.linuxfromscratch.org/blfs/view/svn/general/expat.html
Extract it to /tmp and type:
./configure --prefix=/usr/local && make && make install

Get python 2.7.5 from http://www.linuxfromscratch.org/blfs/view/svn/general/python2.html
Extract it to /tmp and type:

./configure --prefix=/usr/local --enable-shared=no --with-system-expat --with-system-ffi --enable-unicode=ucs4 && make && make install

Get glib from http://www.linuxfromscratch.org/blfs/view/svn/general/glib2.html
Extract it to /tmp and type:
./configure --prefix=/usr/local --enable-gtk-doc-html=no --enable-debug=no --enable-static=yes --enable-shared=no && make && make install

******** Fluidsynth
This is used for loading soundfonts with MIDI synth.
svn co https://fluidsynth.svn.sourceforge.net/svnroot/fluidsynth/trunk/fluidsynth
Go to fluidsynth directory and type:
cmake-gui .
Click configure -> unix makefiles -> use default native compilers
Uncheck everything including build_shared_libs
Click configure again. Click generate and close cmake window.
If you get any doxygen-related error in cmake-gui, just ignore it. Type:
make
If pthread reference error occurs, add "-lpthread" to both src/CMakeFiles/fluidsynth.dir/link.txt and/or src/CMakeFiles/fluidsynth.dir/relink.txt
make install

******** SDL_sound
hg clone http://hg.icculus.org/icculus/SDL_sound/
Go to SDL_sound directory and type:
./bootstrap && ./configure --enable-shared=no --enable-physfs=no && make && make install

******** libfreetype
This is used for printing.
git version may not work. /*giti clone git://git.sv.gnu.org/freetype/freetype2.git*/
Get freetype-2.5.0.1.tar.gz from http://www.freetype.org/. extract it to /tmp and type:
./configure --enable-shared=no && make && make install

******** libpcap
This is used for computer networking / Internet.
Get libpcap-1.4.0.tar.gz from tcpdump.org. Extract it /tmp and type:
./configure --enable-shared=no && make && make install

******** libtbb
This library will be used by xbrz scaler.
Get the latest version of tbb from the official website http://threadingbuildingblocks.org/
Extract it to /usr/local/
Copy everything from /usr/local/lib/ia32/ to /usr/local/lib

******** MUNT
/*
This library will be used for MT-32 emulation. Don't use older versions of MUNT.
Get munt-master-savestate.diff from my website.

git clone https://github.com/munt/munt.git
After git clone, go to mt32emulib directory and type:
patch -up1 < munt-master-savestate.diff && cmake-gui .
Click configure -> unix makefiles -> use default native compilers
Click configure again and click generate. Close cmake window and type:
make && make install
*/
--------------------

Open /usr/include/GL/gl.h with text editor.
Comment out a block of code as shown below:
/* 
GLAPI void GLAPIENTRY glActiveTextureARB(GLenum texture); 
... 
GLAPI void GLAPIENTRY glMultiTexCoord4svARB(GLenum target, const GLshort *v); 
*/ 

You can revert the above change after compiling DOSBox SVN-Daum.

If everything is fine, delete everything in the working directory (/tmp).

---------------------------------
Compiling DOSBox

Grab DOSBox source from my website and extract to /tmp/dosbox.

The following lines can be achieved by typing autogen.sh
aclocal
autoheader
automake --include-deps --add-missing --copy
autoconf

This will add some missing libs, support for c++11, and several optimizations to dosbox.
export LIBS='-ltbb -lglib-2.0 -lgthread-2.0 -lFLAC'
export CXX='/usr/bin/g++ -std=c++11'

Optional:
export CFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"
export CXXFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"
export LDFLAGS="-static-libgcc -static-libstdc++"

./configure --enable-core-inline && make

Your dobsox executable will be placed on /tmp/dosbox/src

--------------------------
Windows
Use MinGW/MSYS, a complete open source programming tool set.
Download both the latest MinGW and MSYS from http://www.mingw.org, and install MinGW first.
Run MSYS installer and you will be asked to specify the location of MinGW installation directory.

After the installation of the tool set, download and install the following:
mercurial (hg) from http://mercurial.selenic.com/
subversion from http://tortoisesvn.net/
git from http://git-scm.com/

These can be readily used on MinGW/MSYS shell commandline.

You can get Direct3D headers for MinGW from http://dim-i.net/2004/06/26/directx-devpak-for-dev-cpp/
Download DX9 Devpack, extract it with 7zip for the use with msys.

pkg-config may be required. You can get it from http://sourceforge.net/projects/gimp-win/files/

libtool, autoconf, automake, and gcc (including c++, core, libstdc++) can be obtained from http://sourceforge.net/projects/mingw/files/
Download them and extract its binary and header files to the appropriate directory (e.g., /usr/local).
As DOSBox may hang with gcc 4.7.2, try using older versions of gcc.

CMake can be obtained from http://www.cmake.org/

If you are prepared, you may follow the above instruction for Linux (except apt-get and gl.h modification part) in order to compile win32 build.

--------------------------

OS X Mountain Lion

To install packages, simply use MacPort command (You must have Xcode installed in advance):
sudo port install [package-name]

For example, "sudo port install gcc48 +universal" will install gcc version 4.8 on your system.
"sudo port install fluidsynth +universal" will install FluidSynth on your system.
Most of the remaining libraries required by DOSBox can be installed by this way. Everything should go to /opt/local/

Obtain dosbox source and extract it to /dosbox. Go to the dosbox source directory. Do "./autogen.sh" or type following:
aclocal
autoheader
automake --include-deps --add-missing --copy 
autoconf



export LIBS='/opt/local/lib/libtbb.dylib -framework CoreAudio -framework CoreMidi -framework AudioToolbox -framework AudioUnit'
export CPPFLAGS="-I/opt/local/include"
export CC='/opt/local/bin/gcc -arch i386'
export CXX='/opt/local/bin/g++ -std=c++11 -arch i386'
export GCOV='/opt/local/bin/gcov -arch i386'
export CFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"

Optional
export CXXFLAGS="-s -O2 -pipe -fomit-frame-pointer -mtune=i686 -march=i686 -msse2 -mno-push-args -ffast-math -funroll-loops --param max-unrolled-insns=60"


export LDFLAGS="-static-libgcc -static-libstdc++"



./configure --enable-core-inline --prefix=/opt/local --host=i386
make



--------------------------------------------------------------------------------------------------------

glew?
