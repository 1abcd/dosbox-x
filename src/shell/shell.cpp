/*
 *  Copyright (C) 2002-2015  The DOSBox Team
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include <assert.h>
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include "dosbox.h"
#include "regs.h"
#include "control.h"
#include "shell.h"
#include "callback.h"
#include "support.h"
#include "builtin.h"

Bitu call_shellstop;
/* Larger scope so shell_del autoexec can use it to
 * remove things from the environment */
Program * first_shell = 0; 

static Bitu shellstop_handler(void) {
	return CBRET_STOP;
}

static void SHELL_ProgramStart(Program * * make) {
	*make = new DOS_Shell;
}

#define AUTOEXEC_SIZE 4096
static char autoexec_data[AUTOEXEC_SIZE] = { 0 };
static std::list<std::string> autoexec_strings;
typedef std::list<std::string>::iterator auto_it;

void VFILE_Remove(const char *name);

void AutoexecObject::Install(const std::string &in) {
	if(GCC_UNLIKELY(installed)) E_Exit("autoexec: already created %s",buf.c_str());
	installed = true;
	buf = in;
	autoexec_strings.push_back(buf);
	this->CreateAutoexec();

	//autoexec.bat is normally created AUTOEXEC_Init.
	//But if we are already running (first_shell)
	//we have to update the envirionment to display changes

	if(first_shell)	{
		//create a copy as the string will be modified
		std::string::size_type n = buf.size();
		char* buf2 = new char[n + 1];
		safe_strncpy(buf2, buf.c_str(), n + 1);
		if((strncasecmp(buf2,"set ",4) == 0) && (strlen(buf2) > 4)){
			char* after_set = buf2 + 4;//move to variable that is being set
			char* test = strpbrk(after_set,"=");
			if(!test) {first_shell->SetEnv(after_set,"");return;}
			*test++ = 0;
			//If the shell is running/exists update the environment
			first_shell->SetEnv(after_set,test);
		}
		delete [] buf2;
	}
}

void AutoexecObject::InstallBefore(const std::string &in) {
	if(GCC_UNLIKELY(installed)) E_Exit("autoexec: already created %s",buf.c_str());
	installed = true;
	buf = in;
	autoexec_strings.push_front(buf);
	this->CreateAutoexec();
}

void AutoexecObject::CreateAutoexec(void) {
	/* Remove old autoexec.bat if the shell exists */
	if(first_shell)	VFILE_Remove("AUTOEXEC.BAT");

	//Create a new autoexec.bat
	autoexec_data[0] = 0;
	size_t auto_len;
	for(auto_it it=  autoexec_strings.begin(); it != autoexec_strings.end(); it++) {
		auto_len = strlen(autoexec_data);
		if ((auto_len+(*it).length()+3)>AUTOEXEC_SIZE) {
			E_Exit("SYSTEM:Autoexec.bat file overflow");
		}
		sprintf((autoexec_data+auto_len),"%s\r\n",(*it).c_str());
	}
	if(first_shell) VFILE_Register("AUTOEXEC.BAT",(Bit8u *)autoexec_data,(Bit32u)strlen(autoexec_data));
}

void AutoexecObject::Uninstall() {
	if(!installed) return;

	// Remove the line from the autoexecbuffer and update environment
	for(auto_it it = autoexec_strings.begin(); it != autoexec_strings.end(); ) {
		if((*it) == buf) {
			it = autoexec_strings.erase(it);
			std::string::size_type n = buf.size();
			char* buf2 = new char[n + 1];
			safe_strncpy(buf2, buf.c_str(), n + 1);
			// If it's a environment variable remove it from there as well
			if((strncasecmp(buf2,"set ",4) == 0) && (strlen(buf2) > 4)){
				char* after_set = buf2 + 4;//move to variable that is being set
				char* test = strpbrk(after_set,"=");
				if(!test) continue;
				*test = 0;
				//If the shell is running/exists update the environment
				if(first_shell) first_shell->SetEnv(after_set,"");
			}
			delete [] buf2;
		} else it++;
	}
	installed=false;
	this->CreateAutoexec();
}

AutoexecObject::~AutoexecObject(){
	Uninstall();
}

DOS_Shell::~DOS_Shell() {
	if (bf != NULL) delete bf; /* free batch file */
}

DOS_Shell::DOS_Shell():Program(){
	input_handle=STDIN;
	echo=true;
	exit=false;
	bf=0;
	call=false;
}

Bitu DOS_Shell::GetRedirection(char *s, char **ifn, char **ofn,bool * append) {

	char * lr=s;
	char * lw=s;
	char ch;
	Bitu num=0;
	bool quote = false;
	char* t;

	while ( (ch=*lr++) ) {
		if(quote && ch != '"') { /* don't parse redirection within quotes. Not perfect yet. Escaped quotes will mess the count up */
			*lw++ = ch;
			continue;
		}

		switch (ch) {
		case '"':
			quote = !quote;
			break;
		case '>':
			*append=((*lr)=='>');
			if (*append) lr++;
			lr=ltrim(lr);
			if (*ofn) free(*ofn);
			*ofn=lr;
			while (*lr && *lr!=' ' && *lr!='<' && *lr!='|') lr++;
			//if it ends on a : => remove it.
			if((*ofn != lr) && (lr[-1] == ':')) lr[-1] = 0;
//			if(*lr && *(lr+1)) 
//				*lr++=0; 
//			else 
//				*lr=0;
			t = (char*)malloc(lr-*ofn+1);
			safe_strncpy(t,*ofn,lr-*ofn+1);
			*ofn=t;
			continue;
		case '<':
			if (*ifn) free(*ifn);
			lr=ltrim(lr);
			*ifn=lr;
			while (*lr && *lr!=' ' && *lr!='>' && *lr != '|') lr++;
			if((*ifn != lr) && (lr[-1] == ':')) lr[-1] = 0;
//			if(*lr && *(lr+1)) 
//				*lr++=0; 
//			else 
//				*lr=0;
			t = (char*)malloc(lr-*ifn+1);
			safe_strncpy(t,*ifn,lr-*ifn+1);
			*ifn=t;
			continue;
		case '|':
			ch=0;
			num++;
		}
		*lw++=ch;
	}
	*lw=0;
	return num;
}	

void DOS_Shell::ParseLine(char * line) {
	LOG(LOG_EXEC,LOG_DEBUG)("Parsing command line: %s",line);
	/* Check for a leading @ */
 	if (line[0] == '@') line[0] = ' ';
	line = trim(line);

	/* Do redirection and pipe checks */
	
	char * in  = 0;
	char * out = 0;

	Bit16u dummy,dummy2;
	Bit32u bigdummy = 0;
	Bitu num = 0;		/* Number of commands in this line */
	bool append;
	bool normalstdin  = false;	/* wether stdin/out are open on start. */
	bool normalstdout = false;	/* Bug: Assumed is they are "con"      */
	
	num = GetRedirection(line,&in, &out,&append);
	if (num>1) LOG_MSG("SHELL:Multiple command on 1 line not supported");
	if (in || out) {
		normalstdin  = (psp->GetFileHandle(0) != 0xff); 
		normalstdout = (psp->GetFileHandle(1) != 0xff); 
	}
	if (in) {
		if(DOS_OpenFile(in,OPEN_READ,&dummy)) {	//Test if file exists
			DOS_CloseFile(dummy);
			LOG_MSG("SHELL:Redirect input from %s",in);
			if(normalstdin) DOS_CloseFile(0);	//Close stdin
			DOS_OpenFile(in,OPEN_READ,&dummy);	//Open new stdin
		}
	}
	if (out){
		LOG_MSG("SHELL:Redirect output to %s",out);
		if(normalstdout) DOS_CloseFile(1);
		if(!normalstdin && !in) DOS_OpenFile("con",OPEN_READWRITE,&dummy);
		bool status = true;
		/* Create if not exist. Open if exist. Both in read/write mode */
		if(append) {
			if( (status = DOS_OpenFile(out,OPEN_READWRITE,&dummy)) ) {
				 DOS_SeekFile(1,&bigdummy,DOS_SEEK_END);
			} else {
				status = DOS_CreateFile(out,DOS_ATTR_ARCHIVE,&dummy);	//Create if not exists.
			}
		} else {
			status = DOS_OpenFileExtended(out,OPEN_READWRITE,DOS_ATTR_ARCHIVE,0x12,&dummy,&dummy2);
		}
		
		if(!status && normalstdout) DOS_OpenFile("con",OPEN_READWRITE,&dummy); //Read only file, open con again
		if(!normalstdin && !in) DOS_CloseFile(0);
	}
	/* Run the actual command */
	DoCommand(line);
	/* Restore handles */
	if(in) {
		DOS_CloseFile(0);
		if(normalstdin) DOS_OpenFile("con",OPEN_READWRITE,&dummy);
		free(in);
	}
	if(out) {
		DOS_CloseFile(1);
		if(!normalstdin) DOS_OpenFile("con",OPEN_READWRITE,&dummy);
		if(normalstdout) DOS_OpenFile("con",OPEN_READWRITE,&dummy);
		if(!normalstdin) DOS_CloseFile(0);
		free(out);
	}
}



void DOS_Shell::RunInternal(void) {
	char input_line[CMD_MAXLINE] = {0};
	while (bf) {
		if (bf->ReadLine(input_line)) {
			if (echo) {
				if (input_line[0] != '@') {
					ShowPrompt();
					WriteOut_NoParsing(input_line);
					WriteOut_NoParsing("\n");
				}
			}
			ParseLine(input_line);
			if (echo) WriteOut_NoParsing("\n");
		}
	}
}

void DOS_Shell::Run(void) {
	char input_line[CMD_MAXLINE] = {0};
	std::string line;
	if (cmd->FindStringRemainBegin("/C",line)) {
		strcpy(input_line,line.c_str());
		char* sep = strpbrk(input_line,"\r\n"); //GTA installer
		if (sep) *sep = 0;
		DOS_Shell temp;
		temp.echo = echo;
		temp.ParseLine(input_line);		//for *.exe *.com  |*.bat creates the bf needed by runinternal;
		temp.RunInternal();				// exits when no bf is found.
		return;
	}
	/* Start a normal shell and check for a first command init */
	WriteOut(MSG_Get("SHELL_STARTUP_BEGIN"),VERSION,UPDATED_STR);
#if C_DEBUG
	WriteOut(MSG_Get("SHELL_STARTUP_DEBUG"));
#endif
	if (machine == MCH_CGA || machine == MCH_AMSTRAD) WriteOut(MSG_Get("SHELL_STARTUP_CGA"));
	if (machine == MCH_HERC) WriteOut(MSG_Get("SHELL_STARTUP_HERC"));
	WriteOut(MSG_Get("SHELL_STARTUP_END"));

	if (cmd->FindString("/INIT",line,true)) {
		strcpy(input_line,line.c_str());
		line.erase();
		ParseLine(input_line);
	}
	do {
		/* Get command once a line */
		if (bf) {
			if (bf->ReadLine(input_line)) {
				if (echo) {
					if (input_line[0]!='@') {
						ShowPrompt();
						WriteOut_NoParsing(input_line);
						WriteOut_NoParsing("\n");
					};
				};
			} else input_line[0]='\0';
		} else {
			if (echo) ShowPrompt();
			InputCommand(input_line);
			if (echo) WriteOut("\n");
		}

		/* do it */
		if(strlen(input_line)!=0) {
			ParseLine(input_line);
			if (echo && !bf) WriteOut_NoParsing("\n");
		}
	} while (!exit);
}

void DOS_Shell::SyntaxError(void) {
	WriteOut(MSG_Get("SHELL_SYNTAXERROR"));
}

class AUTOEXEC:public Module_base {
private:
	AutoexecObject autoexec[17];
	AutoexecObject autoexec_echo;
public:
	AUTOEXEC(Section* configuration):Module_base(configuration) {
		/* Register a virtual AUOEXEC.BAT file */
		std::string line;
		Section_line * section=static_cast<Section_line *>(configuration);

		/* Check -securemode switch to disable mount/imgmount/boot after running autoexec.bat */
		bool secure = control->opt_securemode;

		/* add stuff from the configfile unless -noautexec or -securemode is specified. */
		char * extra = const_cast<char*>(section->data.c_str());
		if (extra && !secure && !control->opt_noautoexec) {
			/* detect if "echo off" is the first line */
			bool echo_off  = !strncasecmp(extra,"echo off",8);
			if (!echo_off) echo_off = !strncasecmp(extra,"@echo off",9);

			/* if "echo off" add it to the front of autoexec.bat */
			if(echo_off) autoexec_echo.InstallBefore("@echo off");

			/* Install the stuff from the configfile */
			autoexec[0].Install(section->data);
		}

		/* Check to see for extra command line options to be added (before the command specified on commandline) */
		/* Maximum of extra commands: 10 */
		Bitu i = 1;
		for (auto it=control->opt_c.begin();i <= 11 && it!=control->opt_c.end();it++) /* -c switches */
			autoexec[i++].Install(*it);

		/* Check for the -exit switch which causes dosbox to when the command on the commandline has finished */
		bool addexit = control->opt_exit;

#if 0/*FIXME: This is ugly. I don't care to follow through on this nonsense for now. When needed, port to new command line switching. */
		/* Check for first command being a directory or file */
		char buffer[CROSS_LEN];
		char orig[CROSS_LEN];
		char cross_filesplit[2] = {CROSS_FILESPLIT , 0};
		/* Combining -securemode and no parameter leaves you with a lovely Z:\. */ 
		if ( !control->cmdline->FindCommand(1,line) ) { 
			if ( secure ) autoexec[12].Install("z:\\config.com -securemode");
		} else {
			if (line.find(':',((line[0]|0x20) >= 'a' && (line[0]|0x20) <= 'z')?2:0) != std::string::npos) {
				/* a physfs source */
				autoexec[12].Install(std::string("MOUNT C \"") + line + std::string("\""));
				autoexec[13].Install("C:");
				if(secure) autoexec[14].Install("z:\\config.com -securemode");
				goto nomount;
			}

			struct stat test;
			strcpy(buffer,line.c_str());
			if (stat(buffer,&test)){
				getcwd(buffer,CROSS_LEN);
				strcat(buffer,cross_filesplit);
				strcat(buffer,line.c_str());
				if (stat(buffer,&test)) goto nomount;
			}
			if (test.st_mode & S_IFDIR) { 
				autoexec[12].Install(std::string("MOUNT C \"") + buffer + "\"");
				autoexec[13].Install("C:");
				if(secure) autoexec[14].Install("z:\\config.com -securemode");
			} else {
				char* name = strrchr(buffer,CROSS_FILESPLIT);
				if (!name) { //Only a filename 
					line = buffer;
					getcwd(buffer,CROSS_LEN);
					strcat(buffer,cross_filesplit);
					strcat(buffer,line.c_str());
					if(stat(buffer,&test)) goto nomount;
					name = strrchr(buffer,CROSS_FILESPLIT);
					if(!name) goto nomount;
				}
				*name++ = 0;
				if (access(buffer,F_OK)) goto nomount;
				upcase(name);
				autoexec[12].Install(std::string("MOUNT C \"") + buffer + "\"");
				autoexec[13].Install("C:");
				/* Save the non-modified filename (so boot and imgmount can use it (long filenames, case sensivitive)) */
				strcpy(orig,name);
				if(strstr(name,".BAT") != 0) {
					if(secure) autoexec[14].Install("z:\\config.com -securemode");
					/* BATch files are called else exit will not work */
					autoexec[15].Install(std::string("CALL ") + name);
					if(addexit) autoexec[16].Install("exit");
				} else if((strstr(name,".IMG") != 0) || (strstr(name,".IMA") !=0 )) {
					//No secure mode here as boot is destructive and enabling securemode disables boot
					/* Boot image files */
					autoexec[15].Install(std::string("BOOT ") + orig);
				} else if((strstr(name,".ISO") != 0) || (strstr(name,".CUE") !=0 )) {
					/* imgmount CD image files */
					/* securemode gets a different number from the previous branches! */
					autoexec[14].Install(std::string("IMGMOUNT D \"") + orig + std::string("\" -t iso"));
					//autoexec[16].Install("D:");
					if(secure) autoexec[15].Install("z:\\config.com -securemode");
					/* Makes no sense to exit here */
				} else {
					if(secure) autoexec[14].Install("z:\\config.com -securemode");
					autoexec[15].Install(name);
					if(addexit) autoexec[16].Install("exit");
				}
			}
		}
nomount:
#endif

		if (addexit) autoexec[i++].Install("exit");

		assert(i <= 17); /* FIXME: autoexec[] should not be fixed size */

		VFILE_Register("AUTOEXEC.BAT",(Bit8u *)autoexec_data,(Bit32u)strlen(autoexec_data));
	}
};

static AUTOEXEC* test = NULL;
	
static void AUTOEXEC_ShutDown(Section * sec) {
	if (test != NULL) {
		delete test;
		test = NULL;
	}
}

void AUTOEXEC_OnReset(Section *sec) {
	if (test == NULL) {
		LOG(LOG_MISC,LOG_DEBUG)("Allocating AUTOEXEC.BAT emulation");
		test = new AUTOEXEC(control->GetSection("autoexec"));
	}
}

void AUTOEXEC_Init() {
	LOG(LOG_MISC,LOG_DEBUG)("Initializing AUTOEXEC.BAT emulation");

	AddExitFunction(AddExitFunctionFuncPair(AUTOEXEC_ShutDown));
	AddVMEventFunction(VM_EVENT_POWERON,AddVMEventFunctionFuncPair(AUTOEXEC_OnReset));
	AddVMEventFunction(VM_EVENT_RESET,AddVMEventFunctionFuncPair(AUTOEXEC_OnReset));
}

static char const * const path_string="PATH=Z:\\";
static char const * const comspec_string="COMSPEC=Z:\\COMMAND.COM";
static char const * const prompt_string="PROMPT=$P$G";
static char const * const full_name="Z:\\COMMAND.COM";
static char const * const init_line="/INIT AUTOEXEC.BAT";

extern unsigned int dosbox_shell_env_size;

/* TODO: Why is all this DOS kernel and VFILE registration here in SHELL_Init()?
 *       That's like claiming that DOS memory and device initialization happens from COMMAND.COM!
 *       We need to move the DOS kernel initialization into another function, and the VFILE
 *       registration to another function, and then message initialization to another function,
 *       and then those functions need to be called before SHELL_Init() -J.C. */
void SHELL_Init() {
	LOG(LOG_MISC,LOG_DEBUG)("Initializing DOS shell");

	/* Add messages */
	MSG_Add("SHELL_CMD_VOL_DRIVE","\n Volume in drive %c ");
	MSG_Add("SHELL_CMD_VOL_DRIVEERROR","Cannot find the drive specified\n");
	MSG_Add("SHELL_CMD_VOL_SERIAL"," Volume Serial Number is ");
	MSG_Add("SHELL_CMD_VOL_SERIAL_NOLABEL","has no label\n");
	MSG_Add("SHELL_CMD_VOL_SERIAL_LABEL","is %s\n");
	MSG_Add("SHELL_ILLEGAL_PATH","Illegal Path.\n");
	MSG_Add("SHELL_CMD_HELP","If you want a list of all supported commands type \033[33;1mhelp /all\033[0m .\nA short list of the most often used commands:\n");
	MSG_Add("SHELL_CMD_ECHO_ON","ECHO is on.\n");
	MSG_Add("SHELL_CMD_ECHO_OFF","ECHO is off.\n");
	MSG_Add("SHELL_ILLEGAL_SWITCH","Illegal switch: %s.\n");
	MSG_Add("SHELL_MISSING_PARAMETER","Required parameter missing.\n");
	MSG_Add("SHELL_CMD_CHDIR_ERROR","Unable to change to: %s.\n");
	MSG_Add("SHELL_CMD_CHDIR_HINT","Hint: To change to different drive type \033[31m%c:\033[0m\n");
	MSG_Add("SHELL_CMD_CHDIR_HINT_2","directoryname is longer than 8 characters and/or contains spaces.\nTry \033[31mcd %s\033[0m\n");
	MSG_Add("SHELL_CMD_CHDIR_HINT_3","You are still on drive Z:, change to a mounted drive with \033[31mC:\033[0m.\n");
	MSG_Add("SHELL_CMD_DATE_HELP","Displays or changes the internal date.\n");
	MSG_Add("SHELL_CMD_DATE_ERROR","The specified date is not correct.\n");
	MSG_Add("SHELL_CMD_DATE_DAYS","3SunMonTueWedThuFriSat"); // "2SoMoDiMiDoFrSa"
	MSG_Add("SHELL_CMD_DATE_NOW","Current date: ");
	MSG_Add("SHELL_CMD_DATE_SETHLP","Type 'date MM-DD-YYYY' to change.\n");
	MSG_Add("SHELL_CMD_DATE_FORMAT","M/D/Y");
	MSG_Add("SHELL_CMD_DATE_HELP_LONG","DATE [[/T] [/H] [/S] | MM-DD-YYYY]\n"\
									"  MM-DD-YYYY: new date to set\n"\
									"  /S:         Permanently use host time and date as DOS time\n"\
                                    "  /F:         Switch back to DOSBox internal time (opposite of /S)\n"\
									"  /T:         Only display date\n"\
									"  /H:         Synchronize with host\n");
	MSG_Add("SHELL_CMD_TIME_HELP","Displays the internal time.\n");
	MSG_Add("SHELL_CMD_TIME_NOW","Current time: ");
	MSG_Add("SHELL_CMD_TIME_HELP_LONG","TIME [/T] [/H]\n"\
									"  /T:         Display simple time\n"\
									"  /H:         Synchronize with host\n");
	MSG_Add("SHELL_CMD_MKDIR_ERROR","Unable to make: %s.\n");
	MSG_Add("SHELL_CMD_RMDIR_ERROR","Unable to remove: %s.\n");
	MSG_Add("SHELL_CMD_DEL_ERROR","Unable to delete: %s.\n");
	MSG_Add("SHELL_CMD_DEL_SURE","Are you sure[Y,N]?");
	MSG_Add("SHELL_SYNTAXERROR","The syntax of the command is incorrect.\n");
	MSG_Add("SHELL_CMD_SET_NOT_SET","Environment variable %s not defined.\n");
	MSG_Add("SHELL_CMD_SET_OUT_OF_SPACE","Not enough environment space left.\n");
	MSG_Add("SHELL_CMD_IF_EXIST_MISSING_FILENAME","IF EXIST: Missing filename.\n");
	MSG_Add("SHELL_CMD_IF_ERRORLEVEL_MISSING_NUMBER","IF ERRORLEVEL: Missing number.\n");
	MSG_Add("SHELL_CMD_IF_ERRORLEVEL_INVALID_NUMBER","IF ERRORLEVEL: Invalid number.\n");
	MSG_Add("SHELL_CMD_GOTO_MISSING_LABEL","No label supplied to GOTO command.\n");
	MSG_Add("SHELL_CMD_GOTO_LABEL_NOT_FOUND","GOTO: Label %s not found.\n");
	MSG_Add("SHELL_CMD_FILE_NOT_FOUND","File %s not found.\n");
	MSG_Add("SHELL_CMD_FILE_EXISTS","File %s already exists.\n");
	MSG_Add("SHELL_CMD_DIR_INTRO"," Directory of %s.\n\n");
	MSG_Add("SHELL_CMD_DIR_BYTES_USED","%5d File(s) %17s Bytes.\n");
	MSG_Add("SHELL_CMD_DIR_BYTES_FREE","%5d Dir(s)  %17s Bytes free.\n");
	MSG_Add("SHELL_EXECUTE_DRIVE_NOT_FOUND","Drive %c does not exist!\nYou must \033[31mmount\033[0m it first. Type \033[1;33mintro\033[0m or \033[1;33mintro mount\033[0m for more information.\n");
	MSG_Add("SHELL_EXECUTE_DRIVE_ACCESS_CDROM","Do you want to give DOSBox access to your real CD-ROM drive %c [Y/N]?");
	MSG_Add("SHELL_EXECUTE_DRIVE_ACCESS_FLOPPY","Do you want to give DOSBox access to your real floppy drive %c [Y/N]?");
	MSG_Add("SHELL_EXECUTE_DRIVE_ACCESS_FIXED","Do you really want to give DOSBox access to everything\non your real drive %c [Y/N]?");
	MSG_Add("SHELL_EXECUTE_DRIVE_ACCESS_WARNING_WIN","Mounting c:\\ is NOT recommended.\n");
	MSG_Add("SHELL_EXECUTE_ILLEGAL_COMMAND","Illegal command: %s.\n");
	MSG_Add("SHELL_CMD_PAUSE","Press any key to continue.\n");
	MSG_Add("SHELL_CMD_PAUSE_HELP","Waits for 1 keystroke to continue.\n");
	MSG_Add("SHELL_CMD_COPY_FAILURE","Copy failure : %s.\n");
	MSG_Add("SHELL_CMD_COPY_SUCCESS","   %d File(s) copied.\n");
	MSG_Add("SHELL_CMD_SUBST_NO_REMOVE","Unable to remove, drive not in use.\n");
	MSG_Add("SHELL_CMD_SUBST_FAILURE","SUBST failed. You either made an error in your commandline or the target drive is already used.\nIt's only possible to use SUBST on Local drives\n");

	MSG_Add("SHELL_STARTUP_BEGIN",
		"\033[44;1m\xC9\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD"
		"\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD"
		"\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xBB\n"
		"\xBA \033[32mWelcome to DOSBox-X %-8s %-25s\033[37m             \xBA\n"
		"\xBA                                                                    \xBA\n"
		"\xBA For a short introduction for new users type: \033[33mINTRO\033[37m                 \xBA\n"
		"\xBA For supported shell commands type: \033[33mHELP\033[37m                            \xBA\n"
		"\xBA                                                                    \xBA\n"
		"\xBA To adjust the emulated CPU speed, use \033[31mctrl-F11\033[37m and \033[31mctrl-F12\033[37m.       \xBA\n"
		"\xBA To activate the keymapper \033[31mctrl-F1\033[37m.                                 \xBA\n"
		"\xBA For more information read the \033[36mREADME\033[37m file in the DOSBox directory. \xBA\n"
		"\xBA                                                                    \xBA\n"
	);
	if (!mono_cga) {
		MSG_Add("SHELL_STARTUP_CGA","\xBA DOSBox supports Composite CGA mode.                                \xBA\n"
		        "\xBA Use \033[31mF12\033[37m to set composite output ON, OFF, or AUTO (default).        \xBA\n"
		        "\xBA \033[31m(Alt-)F11\033[37m changes hue; \033[31mctrl-alt-F11\033[37m selects early/late CGA model.  \xBA\n"
		        "\xBA                                                                    \xBA\n"
		);
	} else {
		MSG_Add("SHELL_STARTUP_CGA","\xBA Use \033[31mF11\033[37m to cycle through green, amber, and white monochrome color, \xBA\n"
		        "\xBA and \033[31mAlt-F11\033[37m to change contrast/brightness settings.                \xBA\n"
		);
	}
	MSG_Add("SHELL_STARTUP_HERC","\xBA Use F11 to cycle through white, amber, and green monochrome color. \xBA\n"
		"\xBA Use alt-F11 to toggle horizontal blending (only in graphics mode). \xBA\n"
	        "\xBA                                                                    \xBA\n"
	);
	MSG_Add("SHELL_STARTUP_DEBUG",
	        "\xBA Debugger is available, use \033[31malt-Pause\033[37m to enter.                     \xBA\n"
	        "\xBA                                                                    \xBA\n"
	);
	MSG_Add("SHELL_STARTUP_END",
	        "\xBA \033[32mDOSBox-X project \033[33mhttp://dosbox-x.software\033[37m                          \xBA\n"
	        "\xBA \033[32mDerived from DOSBox \033[33mhttp://www.dosbox.com\033[37m                          \xBA\n"
	        "\xC8\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD"
	        "\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD"
	        "\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xCD\xBC\033[0m\n"
	        "\033[1m\033[32mHAVE FUN!\033[0m\n"
	);
	MSG_Add("SHELL_CMD_CHDIR_HELP","Displays/changes the current directory.\n");
	MSG_Add("SHELL_CMD_CHDIR_HELP_LONG","CHDIR [drive:][path]\n"
	        "CHDIR [..]\n"
	        "CD [drive:][path]\n"
	        "CD [..]\n\n"
	        "  ..   Specifies that you want to change to the parent directory.\n\n"
	        "Type CD drive: to display the current directory in the specified drive.\n"
	        "Type CD without parameters to display the current drive and directory.\n");
	MSG_Add("SHELL_CMD_CLS_HELP","Clear screen.\n");
	MSG_Add("SHELL_CMD_DIR_HELP","Directory View.\n");
	MSG_Add("SHELL_CMD_DIR_HELP_LONG","DIR [drive:][path][filename] [/W] [/S] [/P] [/AD]\n\n"
		   "   [drive:][path][filename]\n"
		   "       Specifies drive, directory, and/or files to list.\n\n"
		   "   /W\tUses wide list format.\n"
		   "   /S\tDisplays files in specified directory and all subdirectories.\n\t(not supported)\n"
		   "   /P\tPauses after each screenful of information.\n"
		   "   /AD\tDisplays directories.\n");
	MSG_Add("SHELL_CMD_ECHO_HELP","Display messages and enable/disable command echoing.\n");
	MSG_Add("SHELL_CMD_EXIT_HELP","Exit from the shell.\n");
	MSG_Add("SHELL_CMD_HELP_HELP","Show help.\n");
//	MSG_Add("SHELL_CMD_HELP_HELP_LONG","HELP [command]\n");
	MSG_Add("SHELL_CMD_MKDIR_HELP","Make Directory.\n");
	MSG_Add("SHELL_CMD_MKDIR_HELP_LONG","MKDIR [drive:][path]\n"
	        "MD [drive:][path]\n");
	MSG_Add("SHELL_CMD_RMDIR_HELP","Remove Directory.\n");
	MSG_Add("SHELL_CMD_RMDIR_HELP_LONG","RMDIR [drive:][path]\n"
	        "RD [drive:][path]\n");
	MSG_Add("SHELL_CMD_SET_HELP","Change environment variables.\n");
	MSG_Add("SHELL_CMD_SET_HELP_LONG","SET [variable=[string]]\n\n"
		   "   variable\tSpecifies the environment-variable name.\n"
		   "   string\tSpecifies a series of characters to assign to the variable.\n\n"
		   "* If no string is specified, the variable is removed from the environment.\n\n"
		   "Type SET without parameters to display the current environment variables.\n");
	MSG_Add("SHELL_CMD_IF_HELP","Performs conditional processing in batch programs.\n");
	MSG_Add("SHELL_CMD_IF_HELP_LONG","IF [NOT] ERRORLEVEL number command\n"
		   "IF [NOT] string1==string2 command\n"
		   "IF [NOT] EXIST filename command\n\n"
		   "  NOT               Specifies that DOS should carry out\n"
		   "                    the command only if the condition is false.\n\n"
		   "  ERRORLEVEL number Specifies a true condition if the last program run\n"
		   "                    returned an exit code equal to or greater than the number\n"
		   "                    specified.\n\n"
		   "  string1==string2  Specifies a true condition if the specified text strings\n"
		   "                    match.\n\n"
		   "  EXIST filename    Specifies a true condition if the specified filename\n"
		   "                    exists.\n\n"
		   "  command           Specifies the command to carry out if the condition is\n"
		   "                    met.  Command can be followed by ELSE command which\n"
		   "                    will execute the command after the ELSE keyword if the\n"
		   "                    specified condition is FALSE\n");
	MSG_Add("SHELL_CMD_GOTO_HELP","Jump to a labeled line in a batch script.\n");
	MSG_Add("SHELL_CMD_GOTO_HELP_LONG","GOTO label\n\n"
		   "   label   Specifies a text string used in the batch program as a label.\n\n"
		   "You type a label on a line by itself, beginning with a colon.\n");
	MSG_Add("SHELL_CMD_SHIFT_HELP","Leftshift commandline parameters in a batch script.\n");
	MSG_Add("SHELL_CMD_FOR_HELP","Does nothing. Provided for compatibility.\n");
	MSG_Add("SHELL_CMD_TYPE_HELP","Display the contents of a text-file.\n");
	MSG_Add("SHELL_CMD_TYPE_HELP_LONG","TYPE [drive:][path][filename]\n");
	MSG_Add("SHELL_CMD_REM_HELP","Add comments in a batch file.\n");
	MSG_Add("SHELL_CMD_REM_HELP_LONG","REM [comment]\n");
	MSG_Add("SHELL_CMD_NO_WILD","This is a simple version of the command, no wildcards allowed!\n");
	MSG_Add("SHELL_CMD_RENAME_HELP","Renames one or more files.\n");
	MSG_Add("SHELL_CMD_RENAME_HELP_LONG","RENAME [drive:][path]filename1 filename2.\n"
	        "REN [drive:][path]filename1 filename2.\n\n"
	        "Note that you can not specify a new drive or path for your destination file.\n");
	MSG_Add("SHELL_CMD_DELETE_HELP","Removes one or more files.\n");
	MSG_Add("SHELL_CMD_COPY_HELP","Copy files.\n");
	MSG_Add("SHELL_CMD_DELETE_HELP_LONG","DEL [/P] [/Q] names\n"
		   "ERASE [/P] [/Q] names\n\n"
		   "  names\t\tSpecifies a list of one or more files or directories.\n"
		   "\t\tWildcards may be used to delete multiple files. If a\n"
		   "\t\tdirectory is specified, all files within the directory\n"
		   "\t\twill be deleted.\n"
		   "  /P\t\tPrompts for confirmation before deleting one or more files.\n"
		   "  /Q\t\tQuiet mode, do not ask if ok to delete on global wildcard\n");
	MSG_Add("SHELL_CMD_CALL_HELP","Start a batch file from within another batch file.\n");
	MSG_Add("SHELL_CMD_CALL_HELP_LONG","CALL [drive:][path]filename [batch-parameters]\n\n"
		   "batch-parameters   Specifies any command-line information required by\n"
		   "                   the batch program.\n");
	MSG_Add("SHELL_CMD_SUBST_HELP","Assign an internal directory to a drive.\n");
	MSG_Add("SHELL_CMD_LOADHIGH_HELP","Loads a program into upper memory (requires xms=true,umb=true).\n");
	MSG_Add("SHELL_CMD_CHOICE_HELP","Waits for a keypress and sets ERRORLEVEL.\n");
	MSG_Add("SHELL_CMD_CHOICE_HELP_LONG","CHOICE [/C:choices] [/N] [/S] text\n"
	        "  /C[:]choices  -  Specifies allowable keys.  Default is: yn.\n"
	        "  /N  -  Do not display the choices at end of prompt.\n"
	        "  /S  -  Enables case-sensitive choices to be selected.\n"
	        "  text  -  The text to display as a prompt.\n");
	MSG_Add("SHELL_CMD_ATTRIB_HELP","Does nothing. Provided for compatibility.\n");
	MSG_Add("SHELL_CMD_PATH_HELP","Displays/Sets a search path for executable files.\n");
	MSG_Add("SHELL_CMD_PATH_HELP_LONG","PATH [[drive:]path[;...][;%PATH%]\n"
		   "PATH ;\n\n"
		   "Type PATH ; to clear all search path settings.\n"
		   "Type PATH without parameters to display the current path.\n");
	MSG_Add("SHELL_CMD_VER_HELP","View and set the reported DOS version.\n");
	MSG_Add("SHELL_CMD_VER_HELP_LONG","VER\n" 
		   "VER SET [major minor]\n\n" 
		   "  major minor   Set the reported DOS version. (e.g. VER SET 5 1)\n\n" 
		   "Type VER without parameters to display the current DOS version.\n");
	MSG_Add("SHELL_CMD_VER_VER","DOSBox version %s. Reported DOS version %d.%02d.\n");
	MSG_Add("SHELL_CMD_ADDKEY_HELP","Generates artificial keypresses.\n");
	MSG_Add("SHELL_CMD_VOL_HELP","Displays the disk volume label and serial number, if they exist.\n");
	MSG_Add("SHELL_CMD_VOL_HELP_LONG","VOL [drive]\n");
	MSG_Add("SHELL_CMD_PROMPT_HELP","Change the command prompt.\n");
	MSG_Add("SHELL_CMD_PROMPT_HELP_LONG","PROMPT [text]\n"
		   "  text    Specifies a new command prompt.\n\n"
		   "Prompt can be made up of normal characters and the following special codes:\n"
		   "  $A   & (Ampersand)\n"
		   "  $B   | (pipe)\n"
		   "  $C   ( (Left parenthesis)\n"
		   "  $D   Current date\n"
		   "  $E   Escape code (ASCII code 27)\n"
		   "  $F   ) (Right parenthesis)\n"
		   "  $G   > (greater-than sign)\n"
		   "  $H   Backspace (erases previous character)\n"
		   "  $L   < (less-than sign)\n"
		   "  $N   Current drive\n"
		   "  $P   Current drive and path\n"
		   "  $Q   = (equal sign)\n"
		   "  $S     (space)\n"
		   "  $T   Current time\n"
		   "  $V   DOS version number\n"
		   "  $_   Carriage return and linefeed\n"
		   "  $$   $ (dollar sign)\n");
	MSG_Add("SHELL_CMD_LABEL_HELP","Creates or changes the volume label of a disk.\n");
	MSG_Add("SHELL_CMD_LABEL_HELP_LONG","LABEL [volume]\n\n\tvolume\t\tSpecifies the drive letter.\n");
	MSG_Add("SHELL_CMD_MORE_HELP","Displays output one screen at a time.\n");
	MSG_Add("SHELL_CMD_MORE_HELP_LONG","MORE [filename]\n");

	/* Regular startup */
	call_shellstop=CALLBACK_Allocate();
	/* Setup the startup CS:IP to kill the last running machine when exitted */
	RealPt newcsip=CALLBACK_RealPointer(call_shellstop);
	SegSet16(cs,RealSeg(newcsip));
	reg_ip=RealOff(newcsip);

	CALLBACK_Setup(call_shellstop,shellstop_handler,CB_IRET,"shell stop");
	PROGRAMS_MakeFile("COMMAND.COM",SHELL_ProgramStart);

	/* Now call up the shell for the first time */
	Bit16u psp_seg=DOS_FIRST_SHELL;
	Bit16u env_seg=DOS_FIRST_SHELL+19; //DOS_GetMemory(1+(4096/16))+1;
	Bit16u stack_seg=DOS_GetMemory(2048/16,"COMMAND.COM stack");
	SegSet16(ss,stack_seg);
	reg_sp=2046;

	/* Set up int 24 and psp (Telarium games) */
	real_writeb(psp_seg+16+1,0,0xea);		/* far jmp */
	real_writed(psp_seg+16+1,1,real_readd(0,0x24*4));
	real_writed(0,0x24*4,((Bit32u)psp_seg<<16) | ((16+1)<<4));

	/* Set up int 23 to "int 20" in the psp. Fixes what.exe */
	real_writed(0,0x23*4,((Bit32u)psp_seg<<16));

	/* sanity check */
	if (DOS_FIRST_SHELL_END < 0xA000) { assert(DOS_FIRST_SHELL_END <= DOS_MEM_START); };
	assert(DOS_FIRST_SHELL_END > env_seg);

	if ((env_seg+(dosbox_shell_env_size>>4)) > DOS_FIRST_SHELL_END)
		E_Exit("env_seg + env_size > SHELL_END programming mistake");

	/* Setup MCBs */
	DOS_MCB pspmcb((Bit16u)(psp_seg-1));
	pspmcb.SetPSPSeg(psp_seg);	// MCB of the command shell psp
	pspmcb.SetSize(0x10+2);
	pspmcb.SetType(0x4d);
	DOS_MCB envmcb((Bit16u)(env_seg-1));
	envmcb.SetPSPSeg(psp_seg);	// MCB of the command shell environment
	envmcb.SetSize(DOS_FIRST_SHELL_END-env_seg);
	envmcb.SetType(0x4d);

	LOG_MSG("SHELL: psp_seg 0x%04x\n",psp_seg);
	LOG_MSG("SHELL: env_seg 0x%04x\n",env_seg);
	
	/* Setup environment */
	PhysPt env_write=PhysMake(env_seg,0);
	MEM_BlockWrite(env_write,path_string,(Bitu)(strlen(path_string)+1));
	env_write += (PhysPt)(strlen(path_string)+1);
	MEM_BlockWrite(env_write,comspec_string,(Bitu)(strlen(comspec_string)+1));
	env_write += (PhysPt)(strlen(comspec_string)+1);
	MEM_BlockWrite(env_write,prompt_string,(Bitu)(strlen(prompt_string)+1));
	env_write +=(PhysPt)(strlen(prompt_string)+1);
	mem_writeb(env_write++,0);
	mem_writew(env_write,1);
	env_write+=2;
	MEM_BlockWrite(env_write,full_name,(Bitu)(strlen(full_name)+1));

	extern bool Mouse_Drv;
	Mouse_Drv = true;

	static Bit8u some_data_28[8] = { 0xB8, 0x11, 0x11, 0x30, 0xDB, 0xCD, 0x10, 0xC3 };
	static Bit8u some_data_50[8] = { 0xB8, 0x12, 0x11, 0x30, 0xDB, 0xCD, 0x10, 0xC3 };

static Bit8u some_data_copy[12693] = {
0x4d,0x5a,0x95,0x01,0x19,0x00,0x01,0x00,0x02,0x00,0xdd,0x01,0xff,0xff,0xce,0x04,
0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x0c,0x00,0x16,0x03,
0xb9,0x8f,0x18,0xbe,0x1c,0x31,0x89,0xf7,0x1e,0xa9,0xb5,0x80,0x8c,0xc8,0x05,0x05,
0x00,0x8e,0xd8,0x05,0xc2,0x01,0x8e,0xc0,0xfd,0xf3,0xa5,0xfc,0x2e,0x80,0x6c,0x12,
0x10,0x73,0xe7,0x92,0xaf,0xad,0x0e,0x0e,0x0e,0x06,0x1f,0x07,0x16,0xbd,0x0c,0x00,
0xbb,0xbf,0x80,0x55,0xcb,0x55,0x50,0x58,0x21,0x0d,0x03,0x03,0x09,0xc1,0xc6,0x65,
0x89,0xad,0xec,0xc5,0x4e,0xc9,0x4c,0x00,0x7b,0x30,0x00,0xbe,0x4e,0x00,0x00,0x31,
0xff,0xba,0xf4,0x03,0x2e,0x89,0x16,0x8d,0x02,0xff,0xb4,0x30,0xcd,0x21,0x8b,0x2e,
0x02,0x00,0xff,0x8b,0x1e,0x2c,0x00,0x8e,0xda,0xa3,0x92,0xff,0x00,0x8c,0x06,0x90,
0x00,0x89,0x1e,0x8c,0x6f,0x03,0x2e,0xa8,0x00,0xfd,0xe8,0x81,0x01,0xc4,0x3e,0x8a,
0xbf,0x1b,0xc7,0x8b,0xd8,0xb9,0xff,0xff,0x7f,0xfc,0xf2,0xae,0xe3,0x61,0x43,0x26,
0xff,0x38,0x05,0x75,0xf6,0x80,0xcd,0x80,0xf7,0xed,0xd9,0x89,0x0e,0x1a,0xff,0xb9,
0x01,0x00,0xd3,0xe3,0x83,0xc3,0x08,0xed,0x83,0xe3,0xf8,0x34,0xb7,0x8e,0x3c,0xda,
0x2b,0xff,0xea,0x8b,0x3e,0x94,0x0c,0x81,0xff,0x00,0xf6,0x02,0x73,0x07,0xbf,0x04,
0xdf,0x89,0x0c,0xc7,0xff,0x66,0x0f,0x72,0x28,0x03,0x3e,0x2c,0x0c,0xff,0x72,0x22,
0xb1,0x04,0xd3,0xef,0x47,0x3b,0xf7,0xef,0x72,0x19,0x83,0x18,0x76,0x00,0x74,0x07,
0x06,0xcb,0x2c,0x75,0xb6,0x0e,0x29,0x10,0xdf,0x14,0x77,0x07,0x8b,0xfd,0xff,0xeb,
0x03,0xe9,0xdc,0x01,0x8b,0xdf,0x03,0xb6,0xda,0x4d,0xa0,0xee,0x86,0xa4,0x00,0xa1,
0xdf,0x8d,0x2b,0xd8,0x8e,0xc0,0xed,0xb4,0x4a,0x57,0xa7,0xff,0x5f,0xd3,0xe7,0xfa,
0x8e,0xd2,0x8b,0xe7,0xfd,0xfb,0x33,0xc0,0x2e,0x8e,0x06,0xbe,0xbb,0xbf,0x80,0x0d,
0xb9,0xdf,0x5a,0x2b,0xcf,0xfc,0xf3,0xb7,0xaa,0x47,0xfe,0x0b,0xfb,0x14,0x76,0x47,
0x80,0x3e,0xc0,0x7b,0x03,0x72,0x40,0x49,0x5b,0x08,0x93,0xff,0x00,0x1e,0x72,0x37,
0xb8,0x01,0x58,0xbb,0x6b,0xdb,0xe1,0x7c,0x72,0x2a,0xb4,0x67,0xad,0x22,0x77,0x09,
0x20,0xb4,0x48,0xdf,0xbb,0x01,0x12,0x17,0xdb,0x40,0xa3,0xe1,0x48,0x75,0x5a,0x49,
0xd7,0x0c,0x0a,0x29,0xcd,0x00,0x73,0x6f,0x80,0x5b,0x01,0xb4,0x6c,0x08,0x1a,0x2d,
0x1c,0x96,0xbf,0x80,0x0e,0x98,0x00,0x0a,0xc0,0xfb,0x74,0x0c,0xb8,0x40,0x00,0x27,
0x7f,0xbb,0x70,0x00,0x26,0xc6,0x07,0xec,0x01,0x33,0xed,0x7b,0x7b,0xbe,0x6e,0x0d,
0x7e,0xbf,0xe8,0xd0,0x00,0xff,0x36,0x88,0x74,0x03,0x86,0xd0,0x84,0xbf,0x2f,0x39,
0x01,0x50,0xe8,0x00,0xb1,0x14,0x20,0xf6,0x56,0x57,0xbe,0x80,0x22,0x3f,0xad,0x00,
0x5f,0x5e,0xc3,0x6b,0x0d,0x14,0x16,0xb8,0xfb,0x8b,0xf0,0xb9,0x2f,0x47,0x7f,0x02,
0x04,0x80,0xd4,0x00,0x46,0xff,0xe2,0xf7,0x2d,0x5c,0x0d,0x74,0x09,0xb9,0xed,0x19,
0x00,0xba,0x13,0xdf,0xe8,0xdc,0x27,0x8b,0xfd,0xec,0xb4,0x4c,0x8a,0x46,0x02,0xbb,
0x87,0xb9,0x0e,0x14,0x7d,0x48,0x00,0xe9,0xd5,0xbd,0xc5,0xb8,0x00,0x35,0xa1,0x0e,
0x0a,0x61,0x74,0x99,0xbd,0x76,0x00,0xb8,0x04,0x8c,0x0c,0x78,0xd2,0x7a,0xc8,0x05,
0xcd,0x7c,0x7e,0x2c,0x06,0x8c,0x80,0xd2,0x82,0xf8,0x00,0x25,0x8c,0xca,0x5e,0xce,
0xba,0xa0,0x01,0xdd,0x13,0x1f,0xc3,0xdd,0x42,0x25,0xc5,0x16,0xae,0x40,0x0b,0x6c,
0x0a,0x04,0xd2,0x78,0x73,0x05,0x49,0x7c,0xcd,0x06,0x80,0x3f,0xc3,0x81,0xfe,0x6f,
0xd9,0x74,0x04,0x32,0xc6,0xe4,0xeb,0x1a,0xff,0xff,0x8b,0xd7,0x8b,0xde,0x3b,0xdf,
0xff,0x74,0x23,0x26,0x80,0x3f,0xff,0x74,0x18,0x63,0x19,0x06,0xfc,0x26,0x3a,0x67,
0x01,0xeb,0x04,0x6b,0x05,0x05,0x6d,0x77,0x0b,0x97,0x8a,0x8b,0xd3,0x0b,0xfe,0x06,
0xff,0xeb,0xd9,0x3b,0xd7,0x74,0x1b,0x8b,0xda,0x70,0x28,0x7c,0x24,0xff,0x06,0x2f,
0xd9,0x26,0xff,0x5f,0xf6,0x02,0x07,0xeb,0xb1,0x06,0xcd,0x57,0xaa,0xe1,0xc3,0xb4,
0x40,0x88,0x1e,0xc3,0xb9,0x1e,0xdc,0xd7,0x56,0x00,0x2c,0x0c,0x1e,0xbf,0xe8,0xea,
0xff,0xb8,0x03,0x85,0x00,0x30,0xc2,0xde,0x12,0x78,0x85,0x91,0xb7,0x55,0xfa,0x83,
0xec,0x85,0x10,0x27,0xed,0xc7,0x46,0xf0,0x0e,0xf6,0xb8,0x0f,0x0f,0x50,0x93,0xbb,
0x03,0xc4,0x0e,0x2c,0xc1,0xbf,0x8b,0x5e,0x06,0xff,0x37,0xfd,0xe8,0xf2,0x2a,0x83,
0xc4,0x0a,0xff,0x16,0xe8,0x47,0x11,0x59,0xa3,0xff,0xbf,0x0e,0x83,0x7e,0x04,0x01,
0x75,0x09,0xe1,0xe8,0x0f,0x07,0xbc,0x42,0x29,0xf6,0x7f,0x03,0xbe,0x05,0xfb,0xeb,
0x4b,0xb8,0xc2,0x51,0x7d,0x8b,0xc6,0xd1,0xe0,0xdb,0x31,0x03,0xd8,0x33,0xbe,0x0d,
0x3a,0x59,0x59,0x0b,0x17,0xc2,0x30,0xb8,0xb0,0xc5,0x17,0xbc,0xf5,0x39,0x8f,0x18,
0xb8,0xc8,0x21,0x72,0xdd,0x3f,0x75,0x02,0xeb,0xa8,0x46,0xff,0x3b,0x76,0x04,0x7c,
0xb0,0x33,0xf6,0xeb,0x85,0x15,0x04,0xfd,0xd1,0xe3,0xc7,0x87,0xb1,0x0d,0xac,0x97,
0x09,0xe6,0xab,0xfd,0x46,0x83,0xfe,0x03,0x7c,0xe6,0xdd,0x72,0xe9,0x49,0x01,0x93,
0x3f,0x8b,0xf8,0x3f,0x80,0x3d,0x2f,0x74,0xdd,0x41,0xb0,0x00,0x8f,0xc5,0x57,0xe8,
0xcf,0x6d,0x4d,0x3d,0xae,0xf6,0x11,0xfd,0x89,0x00,0x8a,0x45,0x01,0x98,0xbf,0xb8,
0x41,0x15,0x59,0x88,0x46,0xdb,0xff,0x8a,0x02,0x98,0xdb,0x2d,0x41,0x4d,0xd8,0xfb,
0x83,0xfb,0x19,0x77,0x5b,0x52,0x7e,0x2e,0xff,0xa7,0x58,0x06,0x35,0x9f,0xac,0x36,
0x67,0xdd,0xc7,0x58,0x61,0x0d,0xcf,0xab,0x4a,0xc6,0xc7,0x06,0x92,0xba,0x07,0x42,
0x59,0xb6,0xe5,0x3a,0x9e,0xb8,0x32,0x59,0xba,0xe5,0x2a,0x9e,0xbc,0x22,0x59,0xbe,
0xe5,0x1a,0x9f,0xc0,0x12,0x57,0xc3,0xb8,0xce,0x60,0x6d,0x72,0x31,0xd3,0x0c,0x22,
0xde,0x08,0xbf,0x02,0x59,0xf9,0x13,0xe7,0xa4,0x5e,0x39,0xab,0x74,0xe9,0x85,0xad,
0x66,0x6d,0x0d,0x0d,0x07,0xb7,0x3d,0x11,0x74,0x1c,0xdb,0xeb,0x65,0xb8,0xe6,0xd9,
0x0f,0x59,0x81,0xf8,0x89,0x87,0xc9,0x0d,0x56,0xce,0xd0,0x2e,0x50,0x85,0x5d,0x72,
0x6e,0xd7,0x74,0x35,0x35,0xeb,0xbc,0x14,0xe8,0x18,0x10,0x3d,0x28,0x09,0xb8,0x2b,
0xf7,0x0f,0x7d,0x49,0x20,0xa1,0xbd,0x13,0x89,0x46,0xf4,0xdf,0x97,0x50,0x57,0xff,
0x76,0xf4,0xe1,0xe8,0x53,0x0f,0xac,0x77,0x06,0xa3,0x3c,0x3b,0x0b,0xe3,0x1f,0x6d,
0x77,0x0e,0x83,0x4f,0xbf,0x26,0xd6,0x87,0x7d,0xcb,0x01,0xd7,0xb3,0x30,0x99,0x9a,
0x25,0x00,0x1e,0x71,0x7d,0x17,0x2b,0xaf,0xfe,0x5b,0x1c,0xb1,0x91,0x0d,0xcc,0xab,
0x0d,0xd9,0x0d,0xb3,0xad,0x17,0x06,0x9b,0xad,0x10,0xb8,0xba,0x20,0x36,0xa0,0x41,
0xed,0xee,0x01,0x59,0x24,0x99,0xb5,0xd6,0x2b,0xaf,0x1d,0x33,0x3e,0x48,0x82,0x33,
0xd0,0xe5,0xb0,0x00,0x6c,0x16,0x78,0xd2,0x6b,0x0a,0xd6,0xb3,0x07,0xcb,0x50,0xb8,
0xc2,0x1f,0x0e,0x06,0xe6,0x04,0x2e,0x6b,0x08,0x0c,0x72,0xcf,0x0d,0xe6,0x8d,0x37,
0x7e,0x08,0x18,0x38,0xd8,0xfd,0xf0,0x6c,0xe0,0x7e,0x15,0x2c,0x48,0xac,0xfd,0x06,
0xc6,0x84,0xbe,0x17,0x00,0x4e,0x80,0xbc,0xde,0x05,0x5c,0x75,0xf3,0xc4,0x39,0x68,
0x99,0xde,0x82,0xcd,0x0d,0xa1,0xde,0x1e,0xa3,0xae,0x00,0xf9,0x65,0x01,0x42,0x31,
0x73,0xc7,0x35,0x20,0xe1,0xe3,0x26,0x65,0xcb,0xdb,0xda,0x06,0x27,0xc1,0xf6,0x0d,
0xb8,0xbd,0x0d,0x63,0xca,0xbf,0xd9,0x12,0xc1,0x70,0xa8,0x0c,0xfb,0x1a,0xb9,0x0d,
0x9c,0x65,0xbc,0xff,0x74,0x0e,0xe8,0x55,0x10,0xa3,0xb2,0x00,0x63,0x9a,0x53,0x0a,
0x53,0x16,0x68,0xf2,0xde,0x14,0xe9,0xa1,0x00,0x11,0x63,0xb4,0x5f,0x64,0x2e,0x53,
0xfc,0x8b,0xd6,0x02,0x05,0xc2,0xf8,0x48,0xeb,0xfc,0xe8,0x34,0x5d,0x0f,0xfa,0x7e,
0x09,0x83,0x06,0xe9,0x19,0xf6,0x7b,0xf6,0xa3,0xc7,0x5c,0x66,0xc3,0x9e,0xc5,0xc7,
0x59,0x4b,0x1c,0xbb,0x0d,0x6b,0xb8,0x5e,0x66,0xba,0x4b,0x16,0x06,0xf7,0x00,0x56,
0xb8,0x80,0x1d,0x6d,0x76,0xf6,0xd8,0xb8,0x27,0x1c,0x34,0xb5,0x15,0x2b,0x6c,0x4e,
0x79,0xf2,0xe8,0xf3,0x5f,0x19,0xe8,0xc3,0x34,0x27,0xc1,0xdf,0xed,0x21,0x38,0xdb,
0x1e,0x59,0x46,0xc5,0x2d,0x30,0xf2,0x07,0xc3,0xca,0x28,0xdb,0x64,0xfa,0x84,0x9c,
0x20,0x17,0x9a,0x7a,0xff,0x6f,0x23,0xf8,0xe8,0x14,0x33,0xa5,0x46,0x0a,0xe1,0xf2,
0x02,0xad,0xb5,0x56,0xff,0xad,0xd4,0x41,0xb5,0x65,0x49,0x6f,0xbd,0x8b,0xe5,0x5d,
0xff,0xc3,0x92,0x03,0xa0,0x03,0xae,0x03,0xe6,0x61,0x01,0x36,0xb6,0x0d,0x13,0xbe,
0xd8,0x03,0xc6,0x07,0xf2,0xce,0x03,0xd6,0x3a,0xde,0x03,0x6c,0xfa,0x56,0x8b,0x2f,
0xfa,0xeb,0x01,0x46,0xdb,0x80,0x3c,0xb0,0x05,0x6f,0x04,0x2b,0x75,0xf5,0x3f,0x0a,
0xc6,0x04,0x1a,0x13,0x94,0x5c,0x2a,0x7d,0xd6,0x6f,0x63,0xf6,0xeb,0xf8,0x5e,0x5d,
0xb0,0x29,0x5b,0xd9,0xb2,0x6e,0xbf,0x7e,0x08,0xdf,0xa8,0xb2,0x00,0xe8,0x20,0x9a,
0x0f,0xaa,0x16,0x3e,0x94,0x18,0xe1,0x1a,0xb3,0x9a,0xbc,0xf6,0xdd,0x41,0xb8,0xa8,
0x6f,0xa2,0x03,0xb8,0xac,0x74,0x11,0x77,0xbb,0xb8,0xae,0x07,0xa5,0x6f,0xe1,0x56,
0xe8,0x66,0x4d,0x5e,0x43,0xbe,0x68,0x42,0x5e,0xb8,0xc6,0x01,0x16,0x35,0x9e,0x79,
0xc5,0x67,0xa5,0xf0,0x8b,0xf8,0xf7,0x06,0xa9,0x95,0x02,0xad,0x2c,0x13,0x0a,0xaf,
0xff,0x1b,0xe8,0x5a,0x0b,0x59,0x0d,0x67,0xfe,0xe1,0xb8,0xc7,0x01,0x3f,0xad,0xfe,
0x2a,0x96,0xbf,0x7a,0x46,0xf0,0xee,0x0e,0xe8,0x0b,0x1d,0x36,0xb5,0x0a,0x11,0xd2,
0xc7,0xb6,0x0c,0x31,0x25,0x0a,0xdd,0xc8,0x0c,0x66,0xc3,0x8e,0x0c,0x76,0x0b,0x80,
0x04,0xb4,0x75,0x87,0x70,0x3a,0x19,0xf3,0xb0,0x40,0xee,0xb6,0x2c,0xee,0x56,0xd8,
0x1d,0x5e,0x30,0x15,0xeb,0x59,0x78,0x5d,0x96,0xd8,0xa4,0x2d,0x85,0x1e,0x25,0xff,
0x59,0xb8,0xcd,0x6d,0xa9,0x20,0xad,0x97,0x73,0xac,0x35,0x82,0x53,0xa8,0x5d,0xff,
0x22,0xb5,0x21,0xcb,0x02,0xe9,0xdd,0x04,0x02,0x1f,0x3a,0x26,0x17,0x7a,0xf6,0x01,
0x6c,0x67,0xb9,0x84,0xdb,0xec,0x44,0xec,0x2d,0x31,0x2e,0x38,0xb6,0x00,0x45,0x2a,
0x8d,0x45,0x1a,0x6a,0x14,0x60,0xd6,0x2b,0x38,0x44,0x7d,0x8d,0x46,0xbe,0x50,0xb8,
0xa0,0x12,0x25,0xcd,0x05,0x86,0x37,0xcc,0x3b,0x3b,0xd0,0x26,0x6c,0x06,0xa9,0x43,
0x6f,0xc2,0x27,0xf7,0xfe,0xd6,0x3b,0x06,0x98,0x0d,0x76,0xc6,0x26,0x19,0xc1,0x0d,
0x6b,0x55,0x08,0x65,0xd4,0xec,0x96,0x0d,0x72,0x75,0xbb,0xf0,0x68,0x10,0x6b,0x26,
0x7c,0x1b,0x1d,0x46,0xf6,0x75,0x17,0xbc,0xe5,0x1c,0x02,0xca,0xf8,0x2c,0x36,0x7c,
0x31,0xe9,0x09,0xee,0xa0,0xe9,0x57,0x02,0x99,0x86,0x08,0x58,0x46,0xba,0x23,0x53,
0x69,0xd4,0x19,0x68,0xa7,0xca,0xd8,0x21,0x01,0x46,0xc2,0x22,0x2b,0x7b,0x75,0x1a,
0x31,0x65,0xaa,0xed,0x7e,0x13,0x56,0x2c,0x9b,0x85,0xa7,0x2c,0x72,0xba,0x5b,0x22,
0xfa,0x7a,0xae,0x11,0x12,0x9a,0x99,0x94,0x41,0x6b,0x25,0x38,0x1a,0x07,0xcd,0x3c,
0x97,0x9d,0xf8,0xad,0xa1,0x3e,0x4c,0x2a,0xd9,0x21,0xf4,0x82,0x0a,0x36,0x13,0xe9,
0x37,0x0d,0x11,0x37,0x23,0xb8,0xab,0x74,0x78,0x51,0xad,0x1e,0xcd,0xfc,0x59,0xb4,
0x0c,0x30,0x1a,0x02,0xf4,0x5e,0x2b,0xb8,0xcd,0xe9,0x19,0x37,0x78,0xe8,0xfc,0x18,
0xea,0x59,0x0f,0x70,0x88,0x6d,0xae,0x03,0xb2,0x12,0x24,0x85,0xfb,0x6c,0x0a,0x05,
0xd8,0xf7,0x32,0x31,0x44,0xa4,0xd5,0xa0,0x70,0xea,0xb9,0xbf,0xbf,0xbb,0xcc,0x09,
0x2e,0x8b,0xda,0x07,0x3b,0x0b,0xbb,0xbc,0xc3,0x02,0xf0,0xe2,0xf3,0xeb,0x54,0x2f,
0xda,0x67,0x08,0xb8,0xbb,0x0a,0x2b,0xed,0x2b,0x0d,0xe1,0xee,0x2d,0x11,0x8d,0xa5,
0x0b,0xad,0x05,0xb0,0x09,0x80,0x23,0x83,0xa9,0xc0,0x90,0x93,0xd8,0x69,0xf6,0x56,
0x60,0x82,0xe2,0xdb,0xa9,0x8a,0xc4,0x5c,0x42,0xdd,0xf9,0xeb,0x13,0xbb,0xe7,0xb8,
0x16,0x3e,0xa5,0xae,0x4f,0x67,0xfd,0x81,0xfc,0x27,0x86,0x67,0xe6,0x92,0x1a,0xd2,
0x8d,0x1a,0x73,0x0a,0xee,0x99,0x00,0x53,0x00,0xdf,0xbe,0x6c,0x09,0xa9,0x09,0xda,
0xab,0x09,0x05,0x31,0xe1,0xfc,0x2e,0x56,0x8d,0x46,0xd2,0x16,0xbf,0x3a,0x03,0x1e,
0x50,0xb9,0xa5,0x2e,0x27,0xae,0xb6,0x11,0xf1,0xeb,0x3f,0xb8,0x25,0xa0,0x04,0xf7,
0xc4,0x1b,0x03,0xee,0x1c,0x35,0x32,0x66,0x6b,0xdb,0x13,0x46,0x14,0x2e,0x42,0xd0,
0x6b,0x68,0xf4,0xeb,0xeb,0x0e,0x15,0x09,0x96,0x2c,0x59,0xc9,0x3a,0xdb,0x83,0x3f,
0xbd,0xb3,0x62,0x7c,0xef,0x6c,0x81,0xec,0x16,0x20,0x13,0xb8,0xcd,0xfa,0xc0,0xa6,
0x07,0x28,0x85,0x04,0xd4,0xa4,0x24,0x37,0x5b,0xe5,0xfe,0x2d,0x14,0xcb,0x10,0xa2,
0x63,0x07,0xca,0x72,0xea,0x2a,0x0e,0x37,0xfc,0x19,0x0b,0x0c,0xfe,0x97,0xa8,0xd6,
0x07,0x35,0xda,0xfc,0x33,0x08,0xe8,0xa0,0xc9,0x82,0x77,0x0b,0xff,0x30,0xf3,0x08,
0xb8,0xdd,0x48,0xb9,0x72,0x06,0x0f,0x1f,0xb8,0x02,0x6b,0x0d,0x09,0x60,0x0a,0x5d,
0x6c,0x08,0xba,0x6d,0x8a,0xb8,0xab,0x02,0x19,0xa1,0xd2,0x17,0x60,0x52,0xd0,0x72,
0xa3,0xa5,0xd4,0xa9,0x08,0x94,0x86,0x89,0xef,0x20,0x50,0x33,0xf6,0x8d,0x86,0xfa,
0xdf,0x38,0xde,0x3e,0x15,0x19,0xb9,0xb2,0x33,0x06,0xc3,0x1b,0x01,0x76,0x0f,0x80,
0xba,0x17,0xc6,0x1a,0x25,0x8c,0x43,0xe0,0x06,0xef,0x72,0xfc,0x72,0xec,0x89,0x6b,
0x04,0x5e,0x65,0x0e,0xbb,0x14,0x20,0x0b,0x8a,0x97,0x82,0x24,0x7f,0xb9,0x88,0x05,
0x8d,0x1c,0xf0,0xbf,0x19,0xfc,0x00,0x76,0x2c,0x57,0x0e,0xf3,0xcb,0x56,0x9a,0x26,
0x3b,0x5b,0x74,0xaa,0x19,0xf0,0xa4,0x0e,0x3c,0x5b,0xfb,0xd2,0xfc,0xc2,0x19,0xe1,
0x37,0x13,0x78,0x09,0xff,0xfb,0x65,0xff,0x81,0x14,0xa9,0x20,0xb4,0xb6,0x5b,0xff,
0xbf,0x3b,0x32,0xc6,0x48,0xb7,0x1a,0x57,0x32,0xb2,0xad,0xe7,0xe7,0x13,0x83,0xb1,
0x56,0xcb,0x02,0x08,0xb7,0x90,0x29,0x67,0x04,0x96,0x10,0x4a,0xde,0xe9,0xd6,0x20,
0x59,0xde,0x3c,0xeb,0xdf,0x57,0xdc,0x04,0xea,0xdf,0x5b,0x43,0x5e,0xff,0xfe,0x8a,
0x47,0x04,0x98,0x89,0x86,0xec,0xdc,0xdf,0x8d,0x0f,0xe9,0x48,0xea,0xbb,0x17,0x17,
0x59,0x23,0x2e,0x01,0x2d,0x7a,0x65,0x20,0x39,0xf6,0x16,0x57,0xc1,0xe3,0x15,0x20,
0xc0,0xc2,0xa1,0x37,0x14,0x6e,0x48,0x48,0x7d,0x95,0xfa,0x59,0xbb,0x68,0xf8,0x1f,
0x1c,0x07,0x08,0xb8,0x9a,0x26,0x2b,0x43,0xc6,0x78,0xfa,0x78,0x60,0x4e,0x4a,0x1a,
0x5a,0x8b,0xd1,0xba,0xb3,0x6c,0xe6,0x66,0x38,0x08,0x97,0x18,0x49,0x0b,0x1b,0x0d,
0xfe,0x2c,0xeb,0x2b,0x36,0x9f,0x87,0x6d,0xc8,0xe6,0xe4,0x80,0x30,0x6c,0x13,0x14,
0x27,0x7b,0x07,0x4b,0xf4,0xac,0xda,0x04,0xff,0x2f,0xcb,0x15,0x1f,0x5d,0xc5,0xe1,
0xb8,0x83,0x08,0xd6,0xb6,0xca,0x2f,0x32,0x34,0x2f,0xa2,0x9a,0x56,0x69,0x14,0xf2,
0x14,0xb8,0x89,0xad,0x08,0x89,0x08,0xbc,0x3d,0xf0,0x06,0x30,0xf9,0xba,0x48,0x8f,
0xe9,0x13,0x8a,0x06,0xdc,0x47,0xae,0xb8,0xbe,0x90,0x3c,0x8d,0x4e,0x2d,0x47,0x74,
0x16,0xdd,0xb8,0x97,0x28,0x93,0x36,0xcf,0x0d,0x59,0xb3,0x1c,0x85,0xeb,0x5b,0x1b,
0x98,0x76,0xdb,0x4f,0x28,0xcf,0xda,0x9d,0xf9,0xa3,0x59,0x93,0xf7,0xb8,0xd1,0x3e,
0xee,0x2b,0x30,0x22,0x74,0x3f,0x31,0x9a,0x37,0x2b,0xd5,0x08,0x2e,0xc7,0x05,0xf7,
0x1f,0x41,0xcf,0x71,0x8b,0x9a,0xf0,0xd6,0x69,0x0d,0x06,0x5b,0x5c,0xeb,0x3c,0x73,
0xa6,0x43,0x73,0x0f,0x09,0x64,0xe7,0x2f,0xfb,0x22,0xb8,0x12,0x0e,0x59,0xc4,0xdc,
0x07,0x43,0xd1,0x1f,0xad,0xf7,0x06,0xb3,0x40,0xb3,0x91,0x28,0xb7,0x05,0x2c,0x70,
0x06,0x07,0x45,0x23,0xfb,0x23,0x4b,0xe8,0xfa,0xa3,0x1f,0xf7,0x93,0x4d,0x5a,0xf7,
0x02,0x3a,0x01,0x08,0xff,0x14,0xe8,0xe9,0x03,0x59,0x0d,0x2f,0x83,0xfb,0xe3,0x1c,
0xd1,0xfb,0x8b,0x16,0x6d,0x25,0x93,0x85,0x0b,0x35,0x5a,0x4a,0x8d,0x4f,0x02,0xae,
0x8d,0x62,0xd1,0x3e,0x03,0x8e,0x52,0x42,0x11,0xe6,0x5d,0xec,0xe6,0x6f,0x0e,0x13,
0x18,0x33,0xc4,0x06,0x77,0xec,0x13,0x09,0x13,0xe6,0x01,0xb1,0x56,0x09,0x83,0xf7,
0x62,0xdf,0x08,0xdf,0x87,0x03,0xf0,0x6c,0x22,0x15,0x83,0xde,0x70,0x18,0x36,0x73,
0x03,0xc9,0x46,0x90,0x6c,0x19,0x1a,0x07,0xba,0x2d,0x21,0xdf,0xb0,0x2d,0xd6,0xed,
0x02,0x80,0x3e,0xb8,0x83,0x5c,0x0c,0x59,0x34,0x32,0x37,0x03,0x1c,0x20,0xca,0x85,
0x16,0x25,0x17,0x76,0x26,0x4e,0xf5,0x2e,0x1b,0x04,0xc6,0x06,0xa5,0x71,0x86,0x67,
0x94,0x62,0x3f,0x1e,0x09,0xe9,0xd9,0x9e,0x01,0x50,0x1e,0xe6,0x2d,0x4b,0x90,0x22,
0x64,0x34,0xae,0xa4,0x48,0x6c,0x11,0xe5,0x3c,0xf9,0x02,0x9c,0x24,0x98,0x3d,0xa4,
0xb2,0xb7,0x1e,0x53,0x7f,0x60,0x66,0x32,0x29,0x0e,0xcd,0x2c,0x4a,0x64,0x3d,0x9c,
0xe9,0xf7,0x5c,0x20,0x8d,0x12,0x63,0x3c,0x42,0x23,0xae,0x23,0x2b,0x20,0xee,0x90,
0x2c,0xd1,0x97,0x2d,0xcc,0x00,0x64,0x26,0xc8,0x1b,0x0c,0x31,0x83,0x69,0x38,0x77,
0xff,0x0c,0xcf,0x5c,0x0f,0x20,0xce,0x4f,0xf9,0xc1,0x37,0x06,0x33,0x41,0x9f,0x36,
0x5c,0x01,0x64,0x56,0xe4,0xc4,0x2c,0xb9,0x38,0x06,0x12,0x40,0xe4,0x05,0xd5,0xac,
0x50,0xf4,0x50,0xa1,0x68,0x21,0x3d,0x8d,0x2c,0x2b,0xb0,0x43,0x26,0x80,0x40,0x64,
0x3a,0x1c,0xce,0x2b,0xc3,0x96,0xdf,0x0c,0xc1,0x3d,0x3c,0xbd,0x19,0xe9,0x01,0xfe,
0x84,0x45,0xcb,0x47,0x46,0x24,0xc8,0x3a,0x0c,0x40,0x83,0x88,0x20,0x7b,0x7b,0x2b,
0xed,0x01,0xc8,0x6e,0x2b,0x0e,0x61,0x2b,0x41,0xc9,0x49,0x01,0xd8,0x42,0x3f,0x33,
0x48,0x6c,0xeb,0x6f,0x73,0x27,0xd3,0x2b,0x20,0x39,0xc6,0x2b,0x2e,0x47,0x41,0x90,
0x14,0x39,0x07,0x03,0xc8,0xfa,0x2a,0x0d,0xed,0xdb,0x0c,0xeb,0x14,0x53,0x75,0x49,
0x09,0xb9,0xee,0x3c,0x24,0x07,0x89,0xf5,0x13,0x73,0x25,0x85,0xd8,0x1e,0x13,0x8e,
0xf5,0xe9,0x4d,0xfb,0x9f,0xfc,0xe5,0x0d,0x2c,0xff,0x0e,0x5a,0x0e,0x1c,0x11,0xab,
0x0e,0x12,0xed,0x0f,0x56,0x0f,0x07,0xfc,0x7d,0x0f,0xd4,0x0f,0x07,0x10,0xbe,0x4d,
0x10,0xc1,0x10,0x8c,0x63,0xd1,0xe8,0xaa,0x78,0x71,0x8a,0x14,0x7e,0x32,0x16,0xde,
0xe6,0x05,0xc0,0xff,0xdc,0x07,0x1c,0x04,0x09,0x03,0xb9,0x18,0x2e,0xde,0x69,0x09,
0x6d,0x29,0x02,0x3d,0xfe,0x14,0x6b,0xc8,0x77,0x66,0x6b,0xc8,0xc4,0x23,0x32,0x11,
0x81,0x65,0x0d,0xec,0x49,0x45,0x65,0x01,0x5b,0x82,0x1e,0x6e,0xe8,0x8a,0x07,0xea,
0x0c,0xf4,0xdf,0x2e,0x5a,0x3b,0xd0,0x74,0xbc,0x27,0xf9,0x6c,0xae,0x12,0x5d,0x12,
0x86,0xab,0xff,0x94,0xd8,0x0f,0xdb,0x54,0xe4,0x3d,0x5b,0x15,0x76,0x16,0x62,0x1a,
0xb9,0xa5,0x18,0xfb,0x78,0x2c,0x56,0x34,0xe6,0x5a,0x53,0x8f,0x0c,0x89,0xd4,0xab,
0x1d,0x03,0x1b,0x67,0xa2,0x09,0xf8,0xf6,0x46,0xe9,0x10,0x74,0x26,0x46,0x53,0x73,
0x40,0x00,0x97,0xe0,0x56,0x36,0x76,0x06,0x05,0xe3,0x96,0x08,0xf8,0xeb,0x34,0xef,
0x03,0xae,0xad,0x3c,0x91,0xaa,0xd6,0x5e,0x1b,0x9b,0x60,0x5b,0x45,0x09,0x17,0x27,
0xe8,0x57,0xba,0x01,0x51,0x89,0x0d,0x52,0xbd,0x99,0x13,0x8b,0x33,0x13,0x64,0x43,
0x6b,0x05,0xac,0x9b,0x5b,0x5f,0x65,0x5c,0xce,0x10,0x25,0xc4,0xad,0xff,0xfe,0xd1,
0xc6,0x43,0xbf,0x13,0x47,0x83,0xff,0x0d,0x7c,0xb4,0xf6,0x0d,0x12,0x4d,0xb9,0xe1,
0xc8,0x56,0x7c,0x53,0x8b,0x13,0x8f,0xfe,0x74,0x08,0x23,0xe9,0xd0,0x8d,0x00,0xe1,
0x54,0x0e,0x80,0x7c,0xb1,0x2e,0x2d,0xe6,0x02,0xa0,0x3c,0xd0,0x3e,0xb6,0x41,0x09,
0x12,0xdb,0x88,0x43,0x46,0xfd,0x47,0xeb,0xf2,0xe9,0x8b,0x00,0x95,0x1e,0xc8,0x2b,
0x2a,0xde,0x59,0x2e,0x74,0x0a,0xac,0x68,0x5f,0x6c,0xea,0x73,0x1a,0x6d,0xb6,0x80,
0x3f,0x14,0xde,0x08,0x07,0x0e,0x79,0xc1,0xed,0xeb,0x6b,0x47,0x3f,0x39,0x08,0x3d,
0x0b,0x46,0xdb,0x9c,0x2e,0x47,0x45,0xea,0x0d,0xe9,0xa3,0x2e,0xdb,0x27,0xf5,0x37,
0x23,0xeb,0x21,0x61,0x69,0x2d,0x01,0xda,0x03,0x46,0x16,0xc5,0xbe,0xce,0x6c,0x30,
0xbd,0x47,0x0d,0xee,0x56,0xbd,0x68,0x6e,0x05,0x2f,0xc2,0x23,0xff,0x0e,0xc0,0xf0,
0xc8,0x01,0x50,0xaf,0x86,0x07,0x36,0xa8,0x2a,0xdb,0xd1,0x00,0x21,0x7f,0x48,0x13,
0xe0,0x12,0x20,0x13,0xc3,0xc1,0x12,0x17,0xab,0x0b,0xc1,0xb1,0x57,0x9a,0xd8,0x0e,
0xb5,0x21,0xcf,0x0d,0x03,0xf3,0x8c,0x59,0x0a,0xc4,0xe0,0x6d,0xd8,0x2a,0x75,0x94,
0x8c,0x37,0x7f,0x06,0xe8,0x6d,0x6f,0x07,0x5a,0x03,0xd0,0xa1,0x52,0x3f,0xec,0x62,
0x0a,0x70,0x42,0x52,0xb0,0x6a,0x11,0x70,0x46,0xd9,0x0c,0xb6,0x6d,0x57,0x05,0xc4,
0xb8,0x28,0xf6,0xe9,0x06,0x08,0xc8,0x11,0xcb,0x08,0x08,0x30,0x76,0xe1,0x7d,0xb3,
0x50,0x0f,0xc6,0xb4,0xb1,0x28,0x32,0x94,0x83,0x22,0xfb,0xcb,0x69,0xda,0x8b,0xf7,
0xfd,0x31,0x79,0x8d,0x87,0xb7,0xef,0x88,0x04,0x46,0xf7,0x83,0xf0,0xb8,0x59,0x3c,
0x72,0x8b,0x80,0x61,0xaa,0x86,0x66,0xcb,0x3b,0x73,0x18,0x4f,0x74,0xcf,0x28,0x26,
0xd1,0xaf,0x4f,0xfd,0x0f,0x8b,0xdf,0x80,0x78,0xff,0x96,0x2a,0xc9,0x43,0x53,0x75,
0x6c,0x09,0x20,0x16,0xe3,0x13,0xdb,0x5a,0x0b,0x0d,0xbc,0x1b,0x24,0x04,0xf5,0x89,
0x87,0x14,0x0f,0x2b,0x00,0x0c,0x5a,0x27,0xc7,0x23,0xb4,0x43,0xf8,0x32,0xc0,0x8b,
0x56,0x04,0xa5,0xa9,0x86,0x09,0x4e,0x52,0x8d,0xba,0x3e,0x04,0x06,0x2a,0xb0,0x01,
0x1c,0x73,0xb0,0x01,0x77,0x8b,0x4e,0x06,0x1f,0x59,0x04,0x1a,0xec,0x4e,0x01,0x9f,
0x9d,0xb4,0x19,0xaa,0x16,0x58,0xd7,0x40,0xd6,0x8f,0xb2,0x48,0x56,0x9d,0x2d,0xfb,
0xfe,0xca,0xb4,0x0e,0x17,0xd8,0x16,0xb0,0x17,0x7f,0x08,0x0b,0xf6,0x75,0x1e,0xeb,
0x52,0x78,0xda,0x0e,0x77,0xcf,0x88,0xff,0x97,0x6b,0x85,0x9e,0xdb,0xf4,0xeb,0x12,
0xa5,0xe2,0xec,0xff,0xdf,0x41,0x0a,0xe8,0xb1,0xec,0xe8,0xe8,0x31,0xec,0x59,0xdb,
0x06,0x9d,0x2d,0x08,0x6e,0x13,0xba,0x0a,0xdc,0x03,0xbc,0x0a,0x3e,0x44,0x41,0xec,
0x03,0x5f,0x6d,0xc2,0x19,0x72,0x4c,0x99,0xab,0x23,0x1e,0xa6,0xb1,0xff,0x73,0x0e,
0xc1,0xe7,0x12,0x11,0xcc,0x94,0xe6,0x0a,0x11,0x63,0x07,0xb7,0xff,0xc3,0x0a,0xb1,
0x0b,0xd8,0x79,0xff,0x87,0xf7,0xb4,0x47,0x8a,0xcc,0x48,0x76,0x0d,0x48,0x24,0xbb,
0xc6,0x02,0x3c,0xc0,0xfe,0x7a,0x2d,0x68,0x47,0x48,0xf6,0x3c,0x15,0x58,0x6b,0x34,
0x40,0x1a,0x65,0x1d,0x7b,0x1b,0x1a,0xd4,0xbb,0x09,0x54,0x99,0x43,0x61,0x98,0x21,
0x1e,0x2e,0x8a,0x46,0x18,0x3c,0x24,0x12,0xb7,0xb9,0x7c,0x15,0xf4,0x83,0xfe,0x58,
0x7e,0xb0,0xec,0x57,0xbf,0x00,0x36,0x2e,0x0c,0x8a,0x84,0xe2,0x30,0x0c,0x98,0xee,
0xca,0x0d,0xf7,0xde,0xdf,0x16,0x23,0x7f,0xe9,0xc7,0xb5,0x06,0x13,0x4a,0x5c,0xdd,
0x19,0x94,0x00,0x4c,0x63,0xe9,0xd3,0x02,0xe1,0x56,0xd2,0x1a,0xbc,0x5b,0x9c,0xc6,
0x11,0x0d,0xb0,0x61,0x44,0xae,0x8d,0x57,0xf6,0x92,0x25,0x80,0x00,0x8a,0x0c,0x22,
0x2a,0xf9,0xee,0x2a,0x0a,0x1e,0x07,0xd1,0x18,0xbf,0xf0,0xfb,0x24,0x77,0x58,0x80,
0xf6,0xfb,0x02,0x72,0x53,0x91,0xc2,0x0c,0x9d,0xfe,0x0e,0x0b,0xc9,0x7d,0x11,0x80,
0xa7,0x0f,0xff,0x0b,0xc6,0x05,0x2d,0x47,0xf7,0xd9,0xf7,0x16,0xb2,0xff,0xd9,0x00,
0x8d,0x76,0xde,0xe3,0x0f,0xfd,0x91,0x2b,0xd2,0xf7,0xf3,0x91,0xbf,0x02,0x88,0x14,
0x46,0xe3,0x09,0xde,0xeb,0xf1,0x0d,0xe5,0x0a,0xde,0x93,0xf5,0x8d,0x4e,0xde,0xdf,
0x28,0x03,0xce,0xfc,0x4e,0x1b,0x84,0x2c,0xfa,0x0a,0x73,0x04,0x04,0x3a,0x5b,0x60,
0x02,0xca,0x7f,0xaa,0xe2,0xef,0xb0,0x00,0xaa,0x6e,0x63,0x46,0x0a,0x9c,0x42,0x2c,
0x73,0x0c,0x9a,0x74,0x11,0x7c,0xca,0x0a,0x2d,0x50,0xb0,0xd0,0x02,0x61,0xbb,0x0e,
0x6a,0xff,0x1c,0x67,0x04,0x70,0xa7,0x5e,0xce,0x81,0xa7,0x00,0xdf,0xd6,0xfd,0xb4,
0x42,0x8a,0x6b,0x37,0x0f,0x9a,0x91,0x96,0xf1,0x56,0x1d,0x65,0x73,0x20,0x29,0x78,
0xe4,0xfe,0x99,0x43,0x1e,0x78,0x16,0x60,0xdb,0xb1,0x1c,0x54,0xa1,0x82,0x2b,0xa3,
0xd2,0xb2,0xb2,0x8a,0x0c,0xe0,0x8b,0xc2,0x6c,0xac,0x27,0x07,0x28,0x5f,0x99,0xca,
0x5b,0x7b,0x8e,0xbb,0x0c,0x0d,0xbd,0x24,0x4e,0x4a,0x13,0xf4,0x03,0x2a,0xc8,0x02,
0x21,0x27,0x5d,0x8c,0x83,0xdc,0x3d,0xff,0x39,0x87,0xe9,0x0d,0xe1,0x01,0x5a,0xf9,
0xe8,0x64,0x9e,0x58,0x3c,0xf0,0x76,0xab,0x39,0xe0,0x2a,0xfd,0x3e,0x3a,0xd7,0xd7,
0x3d,0xc1,0xbf,0xa4,0x56,0x96,0xdb,0x92,0x85,0x10,0x02,0xf0,0xf7,0xe3,0xe3,0x05,
0xaa,0x09,0x5d,0x04,0xc1,0x96,0xbd,0x09,0x03,0xd6,0x5e,0x27,0x4c,0x1e,0xb6,0xc5,
0x87,0xc4,0x05,0x80,0xff,0xfc,0xd1,0xe9,0xf3,0xa5,0x13,0xc9,0xf3,0xda,0xa4,0x1f,
0x34,0xd9,0xd7,0x08,0x27,0xf7,0x87,0x28,0xad,0x66,0xed,0x06,0xb8,0x05,0xf5,0x06,
0x46,0xec,0xb4,0x3f,0xdc,0x2c,0x76,0x40,0x07,0xfe,0x12,0xfa,0x6d,0x8c,0x01,0xf6,
0x4c,0x02,0x8c,0x54,0x05,0xe3,0x5c,0x06,0x54,0xad,0xba,0x31,0xff,0x3b,0x16,0xfe,
0x0b,0x73,0x2b,0x8b,0xda,0x15,0xd9,0xe3,0x00,0x0c,0x68,0xda,0x97,0xa4,0xe3,0xc6,
0xc6,0x87,0xc2,0xd3,0xb7,0xf1,0xd3,0xe0,0xed,0x05,0xbe,0x0a,0x11,0x6a,0x0f,0x5e,
0x8f,0xcc,0x0a,0x42,0xfe,0x2a,0x72,0xd5,0xa0,0xd5,0x19,0xc1,0x0f,0x47,0x41,0xfe,
0xc6,0x06,0x81,0x26,0xc0,0xd8,0x27,0xfd,0xdf,0x08,0x02,0x50,0xf7,0x06,0x6b,0x09,
0x06,0x41,0x21,0x78,0x8f,0xd1,0xb5,0xb8,0x3b,0x5b,0xd4,0xb1,0x9b,0x20,0xa0,0xd2,
0x7c,0x33,0xcb,0x87,0xd0,0x24,0xc9,0xd0,0xc9,0x02,0x73,0xce,0x4e,0x7d,0x92,0x38,
0xd2,0x4b,0x7b,0x38,0xfe,0x14,0x98,0xc7,0xa6,0xec,0xc3,0x83,0xfa,0x5c,0x80,0xdf,
0x00,0x1a,0x8a,0xc2,0xb4,0x40,0xbf,0x49,0xf6,0x87,0xb7,0x09,0x08,0xdf,0x74,0x09,
0x0c,0x05,0xb6,0xe0,0x15,0x04,0x75,0x9d,0x1c,0x41,0xc9,0x2d,0x4a,0x2f,0xfd,0xfc,
0x6f,0x15,0x8a,0xc6,0xe8,0x6b,0x6f,0x20,0x7d,0xd4,0x10,0x86,0xe0,0xcd,0x08,0x04,
0xfe,0x04,0x90,0x27,0x14,0x40,0x27,0xaa,0x03,0xca,0x1c,0x96,0x00,0xd0,0xee,0xad,
0x07,0x04,0xcd,0xec,0x50,0xea,0x57,0xc6,0x76,0x46,0x57,0xb9,0x69,0xad,0x80,0xff,
0xf2,0xae,0xf7,0xd1,0x49,0x5f,0xc3,0x36,0xfd,0x88,0x05,0x47,0xfe,0x4e,0xec,0x5b,
0x93,0x53,0xf8,0x51,0x52,0x06,0x8d,0x86,0xdd,0x62,0x2b,0xf8,0xe2,0x05,0xb9,0xf6,
0x6e,0x0e,0x56,0x0a,0x21,0x58,0x9d,0x36,0x01,0x67,0x40,0x01,0xf6,0x7e,0xee,0x8d,
0xbe,0x1c,0xff,0x07,0x5a,0x59,0x5b,0xc3,0x06,0xfc,0x7f,0x0a,0x89,0x7e,0xfc,0xb8,
0x8b,0x02,0x6d,0x26,0xac,0x16,0x5a,0xfd,0x12,0x3c,0x25,0x74,0x11,0x83,0x50,0x7f,
0xed,0xee,0xe8,0xac,0xb9,0xff,0xe9,0xe9,0xd5,0x03,0x89,0x76,0xf0,0xac,0x75,0x18,
0xe7,0xdf,0x2a,0x33,0xc9,0x89,0x4e,0xf2,0x6f,0x02,0xfe,0x88,0x4e,0xb6,0xf5,0x4f,
0xf8,0xd6,0x85,0x04,0xdd,0xf6,0xf4,0x01,0xfb,0xac,0x32,0xe4,0x8b,0xd0,0xf5,0x7a,
0x80,0xeb,0x20,0x5f,0x5f,0x60,0x73,0x13,0x8a,0xea,0x9f,0x9d,0x0c,0x59,0xfb,0x17,
0xa4,0x88,0xfa,0x92,0x1d,0xe9,0x5f,0xdc,0x80,0xfd,0x00,0x77,0xdb,0xf8,0x83,0x3b,
0x01,0xdf,0xeb,0xd0,0x0a,0xed,0x37,0x02,0xeb,0xc5,0x3d,0xe2,0x2e,0x86,0xf5,0x2b,
0x25,0xea,0xc1,0x88,0x56,0xbf,0xc3,0xb5,0x83,0x66,0xfe,0xdf,0x0a,0x19,0xef,0x1b,
0x20,0xb5,0x05,0xeb,0xbf,0xa7,0x28,0x4d,0xf7,0x95,0x46,0x6d,0xdf,0x29,0xdb,0x13,
0x08,0xb5,0x3c,0x7c,0x93,0xe9,0x33,0x03,0x74,0xd2,0x36,0x6d,0xc0,0x83,0x2d,0x79,
0x02,0xbd,0x20,0x02,0x73,0x12,0xba,0xe3,0x79,0x06,0x67,0xbd,0x4f,0x08,0x5b,0x5f,
0xb5,0x75,0x76,0x6f,0xff,0x16,0xf6,0x04,0x75,0xd7,0x0c,0xfc,0xf6,0xfe,0xc5,0xe9,
0x62,0xfc,0x73,0xca,0xb5,0x02,0xd3,0xff,0xf6,0xe9,0x55,0xff,0x92,0x2c,0x30,0xbb,
0x98,0x34,0x77,0x19,0xed,0xb5,0x02,0x87,0x2c,0x6e,0x39,0x7c,0xd1,0x89,0x2d,0x6d,
0xd0,0x03,0x6f,0x01,0x03,0xc2,0x01,0x6b,0x10,0x5c,0x58,0x3b,0xdb,0x9b,0x1b,0xf6,
0x2e,0x74,0xb5,0x40,0xdb,0x3d,0x17,0xba,0xff,0x63,0x10,0x09,0x3d,0x9a,0x06,0x15,
0x4a,0xd8,0xa9,0xef,0xe9,0x37,0xc3,0xb7,0x08,0xf7,0xeb,0x0a,0xb7,0x0a,0x03,0x7f,
0x10,0xb3,0xe9,0x02,0xda,0xc6,0x46,0xdb,0xf5,0x00,0xc7,0xfb,0xdb,0x33,0xd2,0x04,
0xfa,0x67,0xa5,0xeb,0xb5,0x10,0x1d,0xb9,0x15,0xfa,0x01,0x99,0x10,0xf0,0x99,0x47,
0x47,0xb0,0x51,0x06,0x08,0x3d,0xdb,0x05,0x0f,0x15,0x70,0x0e,0x0d,0xb0,0xc3,0x7e,
0xbb,0xa9,0x53,0x0d,0xdd,0x40,0x09,0xb0,0xcd,0xf6,0x0b,0x95,0xe9,0xdd,0x68,0xfe,
0x6c,0x04,0x05,0xb8,0x4b,0x8a,0xc7,0xdb,0xab,0x8a,0x40,0x7f,0x50,0x53,0xe8,0x2b,
0xfb,0x16,0x5b,0x64,0x56,0x6c,0x98,0xd2,0x4d,0xb8,0xf2,0x52,0xe0,0xde,0xfd,0x69,
0xe6,0x4a,0x3b,0xd3,0xba,0x62,0x7e,0x36,0xff,0x37,0x43,0x43,0x89,0xd7,0x07,0x58,
0x4b,0x20,0x10,0x2d,0x17,0x8b,0x0e,0x31,0x7f,0xe8,0x9d,0xfd,0xb0,0x3a,0xaa,0x6c,
0x07,0x5a,0x0b,0xec,0xfd,0xad,0x36,0xea,0xba,0x00,0x8c,0x00,0xea,0xbb,0xfb,0xdf,
0xcb,0xba,0x2b,0xf9,0x87,0xbb,0xcf,0x50,0x3b,0xd1,0xad,0x7f,0x4e,0x4b,0xcc,0x9f,
0xb9,0x00,0x4c,0x92,0xa6,0x1d,0x5d,0xae,0x34,0x97,0x0b,0xdb,0x36,0x42,0x28,0xaa,
0x5d,0x59,0xe9,0xc2,0x96,0x1f,0xc5,0x64,0xad,0xae,0x26,0x9c,0x3d,0x0b,0x5e,0x0b,
0x1b,0x04,0x0b,0xde,0x36,0xc4,0x0c,0x97,0xc9,0xc0,0x0b,0x8d,0xc7,0x72,0x6f,0x12,
0xbf,0x96,0x0c,0xfc,0xe8,0x55,0xfd,0x3b,0x4e,0xf6,0x6a,0x06,0x50,0xfd,0xb6,0x3b,
0x85,0x3c,0x5b,0x0e,0x80,0xda,0x7b,0x03,0xb9,0xdf,0xa5,0x57,0x51,0x8d,0x5e,0xe9,
0xbb,0x53,0x52,0x56,0xa0,0x23,0xc7,0x32,0xfe,0xa9,0x0a,0x56,0x96,0x35,0xb8,0xb5,
0x4a,0xc1,0x48,0x52,0x6e,0x07,0x05,0x8a,0x08,0xee,0x27,0xe8,0xbb,0x0a,0xc5,0x89,
0xd0,0x75,0x08,0x1a,0xf8,0x16,0x02,0xf8,0x5f,0x7e,0x11,0xe8,0xf7,0xff,0xfc,0x26,
0x80,0x3d,0x2d,0x75,0x01,0x49,0xc6,0x2b,0xd1,0x5d,0xf7,0x89,0x56,0xf2,0x0d,0x81,
0xcc,0x42,0x2a,0xc7,0xf5,0xc9,0x71,0x14,0x4f,0x26,0xa2,0xc6,0x98,0x58,0x0a,0xfc,
0xc1,0x6e,0x8d,0xff,0xb8,0xc6,0xe8,0xc5,0xe8,0xc7,0xf7,0xed,0xeb,0x5e,0xf8,0x9b,
0x9d,0x72,0x3d,0x89,0x05,0x37,0xbf,0x8a,0x66,0xfb,0x80,0xfc,0x6f,0x6b,0xcc,0x2d,
0xe9,0x7f,0x2b,0xab,0xf2,0x31,0xad,0x1b,0x11,0xa1,0x78,0x56,0xbc,0xfc,0x58,0x75,
0x11,0x37,0x85,0x40,0x4b,0x4b,0xd0,0x83,0x6e,0x6b,0x5e,0x1c,0xd2,0x7f,0xda,0x03,
0x48,0x33,0x91,0x02,0x84,0xfb,0x06,0xb0,0x20,0xe8,0x4e,0x7e,0x4b,0x3b,0xd9,0x7f,
0xf6,0xe8,0x12,0x40,0x3b,0x4a,0xb0,0x30,0x42,0x03,0xdb,0xfc,0x82,0xfb,0xed,0xe8,
0x67,0xfc,0xa6,0x9b,0xf2,0x27,0x2b,0xf0,0xca,0x2b,0xda,0x26,0x6d,0x2e,0x3c,0xbf,
0x9a,0x08,0x3c,0x20,0x74,0x04,0x17,0x9d,0x71,0x07,0x26,0xac,0x2f,0x43,0xfc,0x49,
0x4b,0xf7,0x87,0xca,0xe3,0x07,0x2f,0x7b,0x3d,0xfc,0xe2,0xf9,0x0a,0xbb,0x12,0x2b,
0xd9,0x17,0x52,0x7b,0x1f,0x03,0xe8,0x30,0x6f,0x15,0xf0,0x0b,0xdb,0x89,0x7e,0xf9,
0x6e,0xcb,0x63,0xbb,0x1a,0x22,0xe9,0x5a,0x86,0xfc,0x41,0x09,0x7b,0x32,0x0b,0x48,
0x50,0x27,0x82,0x79,0x8b,0x46,0x69,0x2a,0xe4,0x6b,0x03,0x2d,0x61,0x26,0xaf,0x46,
0x5e,0x71,0x07,0xbb,0x5b,0x26,0xc7,0xe3,0x42,0xba,0xd3,0x1b,0xe1,0x5d,0xf0,0xf9,
0xb0,0xf4,0x25,0xe8,0xce,0xfb,0xda,0xe9,0x75,0xf8,0x55,0x72,0xb6,0x0e,0x7d,0x66,
0xf6,0xc9,0xfb,0x07,0xf7,0xc7,0xea,0x88,0x2f,0xbc,0x0a,0xa8,0xd0,0x3b,0x26,0xff,
0x17,0x66,0xfa,0x19,0xff,0xe4,0x19,0x2f,0x1a,0xef,0x19,0x5d,0x1a,0xff,0x6a,0x1a,
0xa8,0x1a,0xaf,0x1a,0xb4,0x1a,0xff,0x18,0x1a,0xdd,0x1a,0xbb,0x1a,0xbf,0x1a,0xff,
0xc3,0x1a,0x37,0x1b,0xe4,0x1b,0x87,0x1b,0xfb,0xa7,0x1b,0x26,0x1d,0x62,0x01,0x1f,
0x0a,0x1a,0x10,0x1a,0x5d,0xad,0xa0,0xd7,0x08,0x0d,0xfb,0x2d,0xde,0xff,0x4a,0xf7,
0xea,0x50,0xa1,0x0b,0x0d,0x5a,0x4a,0x34,0x06,0xf3,0xb5,0x4a,0x05,0x37,0x44,0x16,
0x0d,0x0d,0x06,0x95,0xc9,0x04,0x3b,0xa0,0x0a,0x29,0x94,0xd0,0x4f,0x1e,0xbe,0x9b,
0x04,0xe3,0x5a,0xc4,0x16,0xa3,0xc5,0xdf,0xd9,0xfc,0x3b,0xf7,0x73,0x0b,0xab,0xc1,
0xa6,0x48,0x6c,0xf1,0xf0,0x03,0xf8,0xfd,0x4f,0xab,0x04,0x06,0x5f,0xfc,0xeb,0x3b,
0xba,0xda,0x03,0x6f,0x53,0x8c,0xdb,0x3b,0xad,0xc3,0x9a,0xfd,0xfa,0xec,0xd0,0xc8,
0x72,0xfb,0xdf,0x04,0x73,0xfb,0xa5,0xfb,0xe2,0xec,0xf1,0xeb,0x1f,0x10,0x06,0xad,
0x36,0x5a,0xd8,0xcb,0x0d,0xed,0x8b,0xc3,0xab,0x20,0xec,0xe1,0xfc,0x1f,0xce,0xc0,
0xa8,0xd5,0xc3,0x40,0x47,0xa4,0xe8,0xc8,0x1e,0xe8,0x5d,0x40,0x9d,0x9d,0x1b,0xb8,
0x02,0xab,0x15,0x07,0x91,0xb9,0x41,0x03,0xc6,0x04,0x5d,0xb6,0x8b,0xc2,0xd4,0x81,
0x10,0xff,0x02,0x3b,0xc2,0x73,0x07,0xa3,0x9c,0x81,0x00,0xa6,0xa2,0x09,0xd1,0x7e,
0x6c,0x78,0x08,0x5e,0x7a,0xc9,0x21,0x6e,0xd6,0x03,0x06,0xdd,0x1b,0x83,0xd2,0xb4,
0xed,0xc8,0xdd,0xb1,0x10,0x81,0xc1,0xbf,0x2f,0x72,0x0a,0x3b,0xcc,0x73,0xdc,0x06,
0x87,0x16,0xc8,0x30,0xc1,0xf4,0x2c,0xa4,0x2b,0x07,0x3c,0x0f,0x99,0x52,0x14,0xad,
0x47,0x0e,0x78,0x0f,0x9e,0xa3,0x08,0x79,0x08,0x69,0x06,0x96,0x7e,0xfb,0x00,0xe8,
0x12,0x0c,0x11,0x17,0xfe,0xe8,0x0a,0x0c,0xb1,0x08,0xd3,0xe8,0xfe,0x0b,0xfc,0xe9,
0xd8,0xa5,0xc0,0xcc,0xde,0x46,0xd6,0x1f,0x0f,0xea,0x2d,0x07,0x9f,0xa6,0x06,0x77,
0x9f,0x2e,0x1a,0x20,0x46,0x35,0xd2,0xb0,0xe0,0xc0,0x36,0xbc,0x15,0x76,0xa0,0x00,
0x34,0x52,0x3b,0xb8,0x7d,0x6c,0xd5,0xe8,0x6d,0xd3,0x67,0xef,0x0e,0x49,0xed,0xeb,
0x5d,0xff,0x42,0xf7,0xeb,0x58,0xa0,0x09,0x0e,0x2e,0x60,0xa3,0x2e,0x3e,0x68,0x0f,
0x37,0x8e,0x27,0x8a,0xe3,0x26,0x04,0x0d,0xa5,0x80,0xc9,0x2e,0x74,0xa8,0x40,0x69,
0xac,0xfc,0xb6,0x3b,0xfe,0x9a,0xc0,0x16,0x32,0x21,0x91,0xe1,0xb6,0x52,0x3b,0x1e,
0x85,0xf9,0xfe,0xfe,0x8a,0x76,0xfc,0xb4,0x02,0xb7,0xd6,0x99,0xeb,0xec,0x8a,0x1e,
0x33,0x51,0xad,0x7e,0x0d,0x5d,0x0d,0xe8,0x68,0xf3,0xa5,0x24,0xd8,0xa0,0x02,0x75,
0x36,0x0e,0x70,0x1f,0xa1,0xfe,0x0c,0xb7,0x01,0x4d,0xa0,0x03,0x63,0x17,0xfc,0xfb,
0x7d,0x1c,0xb0,0x06,0x50,0x1a,0x9b,0x03,0x01,0x34,0x02,0xd2,0x03,0xa9,0x1e,0x44,
0x2d,0xa7,0x08,0xa3,0xa6,0x93,0x75,0xc7,0x4f,0x0f,0xc7,0x1e,0xb0,0xff,0x68,0x19,
0x69,0x5e,0xe9,0x13,0xb8,0x4b,0xfc,0x39,0xfd,0x1f,0x42,0x1f,0x60,0x1f,0x5b,0xcd,
0x03,0x01,0xd1,0x51,0x1f,0xf9,0xbc,0xf5,0x1e,0x05,0xb1,0xaa,0x06,0x6e,0x4b,0xd8,
0xf8,0x49,0xe0,0xeb,0x14,0xc4,0x05,0x98,0x6a,0x14,0x58,0x6d,0x07,0x6d,0x31,0x3a,
0x07,0x17,0x37,0xd5,0x08,0xf7,0x23,0xe7,0xd1,0x21,0x16,0x1f,0xb4,0x12,0xb3,0x10,
0x16,0x7e,0xb7,0x61,0xc3,0x04,0xb5,0xf0,0x62,0xbc,0x37,0x1e,0x51,0xb9,0x04,0xbd,
0x4b,0xd9,0x59,0x80,0x02,0x21,0xdb,0x09,0x04,0x0f,0xff,0x74,0x56,0xcd,0x10,0xeb,
0x6a,0x3c,0x03,0xc5,0x75,0x1a,0xb6,0x0e,0x1a,0x0a,0xeb,0x3c,0x1a,0x03,0xa2,0x26,
0xdf,0x86,0xfe,0xb4,0x01,0xb9,0xda,0x07,0x06,0x0f,0x29,0x8b,0x7f,0xeb,0xde,0x3c,
0x40,0x75,0xda,0x6b,0x44,0x48,0x5a,0x0e,0x0d,0xeb,0xff,0x10,0x74,0x3d,0xb8,0x12,
0x11,0x32,0xdb,0x75,0x1a,0x00,0xb7,0x59,0x20,0x06,0xb3,0x36,0xe5,0x26,0x80,0x0e,
0x9a,0x01,0x00,0x6d,0xeb,0x18,0xcd,0x13,0x53,0x88,0x12,0x5a,0xc4,0xff,0x5b,0x7a,
0x58,0x69,0xbd,0x3e,0x84,0x00,0x18,0x0b,0x5b,0xb0,0xdb,0x40,0x1f,0xbb,0xb4,0xe0,
0x0f,0xe8,0x77,0x97,0x87,0x14,0x00,0xee,0x59,0xb4,0x08,0xfd,0x83,0x6b,0x7e,0x7f,
0xe4,0x7f,0x88,0x26,0x05,0x0d,0x86,0x88,0xa1,0x1f,0x31,0x8a,0x2f,0xa2,0x06,0x0d,
0x76,0x25,0x51,0xff,0xd4,0x12,0xbb,0x60,0x3a,0x06,0x0c,0x7b,0x74,0x2d,0xa0,0x11,
0x9b,0x2b,0x3f,0xbb,0xff,0x16,0x3a,0xff,0x73,0x1e,0x19,0xf2,0x80,0x3e,0xb8,0x64,
0x05,0xf6,0x1c,0x26,0x61,0x3d,0x7e,0x05,0xc6,0xd6,0x2d,0x40,0x18,0x3b,0x76,0x13,
0x06,0xf9,0x40,0x73,0x0c,0xe8,0x07,0x49,0x16,0x8d,0xa2,0x17,0x62,0x17,0x17,0x2a,
0xb0,0x19,0x02,0xc1,0xb3,0x3b,0xb6,0xa0,0x3a,0xfe,0xdd,0x18,0x07,0x0d,0x9d,0x29,
0x1f,0xbd,0xd2,0xf0,0xba,0xea,0xa0,0xa1,0x58,0xa4,0x11,0xad,0x64,0xc7,0x94,0xfe,
0x44,0x46,0x0c,0xbf,0xbd,0x06,0x93,0x43,0x0a,0x66,0x2a,0x8e,0x5d,0xcc,0x00,0xb0,
0x36,0xf8,0xa3,0x95,0xed,0x2a,0x02,0xdb,0x00,0x00,0x0e,0x70,0x00,0xa2,0xb0,0xf7,
0xa2,0xab,0xfe,0x19,0xad,0x04,0xa7,0xb6,0x02,0x07,0x07,0x71,0xa8,0x02,0x6d,0xe9,
0x18,0x0d,0xbe,0x2a,0xba,0x1d,0x0d,0xb9,0xb4,0x9d,0x04,0x9f,0x8b,0xb9,0x27,0x00,
0xdb,0xba,0x22,0xd6,0x40,0x68,0x09,0x36,0xfa,0xe0,0xd8,0x50,0x4a,0xeb,0xa6,0x0a,
0xbf,0x5d,0x06,0xa0,0xb5,0x4b,0x2a,0xd0,0x5a,0x07,0x0d,0x1e,0xc3,0xb3,0x56,0x19,
0x1b,0xf3,0xdc,0x47,0xbb,0x09,0x74,0x77,0xe8,0xd5,0x06,0x08,0x5a,0xc3,0x04,0x3c,
0xf7,0x3b,0x2e,0x1e,0x35,0x8d,0xcd,0x0b,0xf4,0x3d,0x01,0xd6,0x71,0xa2,0x40,0xab,
0x99,0x0c,0x06,0x44,0x29,0xf8,0xa8,0x56,0x7b,0x1d,0x76,0x3f,0x77,0xcd,0x05,0xc9,
0x0f,0x27,0xb7,0x2d,0x28,0x08,0x2b,0xd3,0xc7,0x40,0x32,0xed,0x1a,0x1e,0x19,0xb4,
0x0c,0x21,0x4c,0x6e,0x95,0x0f,0x07,0x95,0x41,0x6d,0x72,0x26,0xd1,0x96,0xb4,0xd6,
0x0c,0x4b,0x82,0x0a,0xdc,0x7e,0xe1,0xf7,0x3d,0x9d,0x81,0x53,0xde,0x0c,0x3d,0xd7,
0x69,0x3e,0xbb,0x5d,0xeb,0x19,0x1c,0x9d,0xdc,0x3f,0xeb,0xfa,0xbb,0x1e,0x57,0x41,
0xe4,0x2b,0xd6,0xd6,0xb1,0x40,0x90,0xe2,0xb0,0x5f,0xc8,0xe8,0xef,0xee,0xf4,0x59,
0x07,0x56,0x32,0x63,0xa2,0x97,0x96,0xb3,0x21,0x53,0x6f,0x5d,0x8b,0xac,0x34,0xa9,
0xff,0x51,0x47,0xe4,0x5b,0x8b,0x01,0x5c,0x12,0xac,0xdb,0x4c,0x05,0x54,0x6c,0x0d,
0x7c,0x0a,0x2f,0x0d,0x54,0xe0,0x1f,0x07,0x55,0x17,0x4a,0x9c,0x9c,0xfd,0x56,0x1e,
0x06,0x8e,0x5e,0xfa,0xde,0x29,0x8f,0x04,0x8f,0x44,0x6b,0x06,0x05,0x6d,0x08,0x02,
0x95,0x0e,0x0b,0x8a,0x64,0x4b,0x92,0x89,0x6d,0x2b,0x89,0xb6,0x31,0x89,0x37,0xdb,
0x89,0x3d,0x89,0xdb,0x04,0x1f,0x4a,0x50,0x14,0xba,0x53,0xf2,0x58,0xc3,0xf5,0xf1,
0x56,0x08,0xb4,0x44,0xb5,0x69,0x06,0x23,0xa9,0x0a,0x47,0x9e,0x40,0x0c,0x7b,0x52,
0x0c,0x60,0xc2,0xd4,0xe2,0x7e,0xa6,0x56,0xf2,0x50,0x86,0x59,0x1b,0xf4,0x05,0xb4,
0x80,0x0b,0x75,0xc9,0x7c,0x63,0x04,0x82,0x03,0x72,0x83,0x54,0x81,0x52,0x74,0x7a,
0x04,0xd0,0xd4,0x23,0xcd,0x42,0x02,0x84,0x0e,0x16,0xdb,0x5e,0x0c,0x05,0xa9,0x14,
0xed,0x76,0x2b,0xc6,0x09,0xcd,0x0e,0xe8,0xc2,0x57,0x04,0x75,0x0f,0x53,0x8b,0xd6,
0x16,0xfc,0xd4,0xfe,0x6b,0xed,0x55,0x6d,0x3b,0x2d,0xb5,0x7d,0xcf,0x0b,0xb4,0x76,
0x78,0x0e,0x5f,0xbe,0x8b,0xfa,0xeb,0x29,0x73,0x43,0x34,0x01,0xc3,0x9c,0xf9,0x8e,
0x82,0xdb,0x6c,0x93,0x08,0x99,0x58,0xae,0xb4,0xe2,0xd0,0x03,0x03,0x60,0xd0,0xb6,
0x5d,0x03,0x34,0xc5,0x3b,0xb0,0x77,0xcd,0x92,0x5a,0xe8,0x96,0xf4,0x5d,0x29,0x06,
0x83,0xbf,0xbe,0x72,0x0e,0x3b,0x1e,0x4e,0xb7,0x0d,0xb9,0xe8,0x42,0x57,0xfb,0x60,
0xe8,0x03,0x8e,0xd7,0xed,0x39,0x1e,0x4c,0x10,0xfc,0x23,0x8b,0x77,0x02,0xf6,0x04,
0x5a,0x6f,0x16,0x15,0x36,0xd4,0x1e,0x6e,0xb9,0x3b,0x36,0xea,0x13,0x0d,0xdc,0x38,
0xe8,0x54,0x0b,0x62,0x47,0xdc,0x02,0xa3,0x12,0xe1,0x0c,0x1a,0xa9,0xd7,0x15,0x0b,
0x74,0xa3,0x50,0x0d,0x2e,0x7e,0xdf,0xf9,0xa5,0x34,0xef,0xff,0x0f,0x3b,0x3b,0x98,
0x18,0x2f,0x89,0xa8,0x01,0x75,0xf6,0x0f,0x03,0x07,0x89,0xdf,0xe0,0x3f,0x03,0x5b,
0x4a,0x75,0x10,0x6e,0xde,0x5f,0xde,0x32,0x00,0x0d,0x85,0x3e,0x6f,0x1b,0x74,0x01,
0xc3,0xad,0x01,0x88,0x83,0xf7,0xcd,0x43,0x72,0x7c,0x8b,0xdf,0x8b,0x7f,0x06,0x11,
0xbd,0xbb,0x0e,0x89,0x3e,0xad,0x49,0x3b,0x0a,0x85,0xd0,0xfd,0xba,0x91,0x06,0xc3,
0x59,0x25,0x50,0xbb,0xc3,0x8b,0x36,0x06,0x40,0x1b,0x28,0x10,0xb5,0x8b,0x12,0xad,
0x2b,0x02,0xb5,0x5d,0x1b,0xbf,0x2c,0x89,0x77,0x04,0xc3,0x89,0x97,0x1e,0x89,0x5f,
0x2e,0x5f,0x06,0xcc,0xce,0x28,0xd6,0x6d,0x59,0x52,0x05,0x2f,0x32,0x72,0x36,0x25,
0xe0,0xfe,0xff,0x3d,0xdd,0x62,0x73,0x03,0x0c,0x2b,0x05,0xd2,0x9b,0x4c,0x1f,0x8b,
0x70,0x2c,0xb5,0x30,0xdf,0xc1,0xd3,0x39,0x07,0x73,0x1a,0xb7,0x8b,0x33,0x3b,0xda,
0xf6,0x75,0xf5,0xe8,0x66,0xf3,0xf6,0x21,0xe8,0x8a,0x04,0xf2,0x1c,0xe8,0x1c,0xc3,
0x17,0x71,0x40,0x13,0x5b,0x4a,0xc6,0xfa,0x08,0x39,0x37,0x73,0xe9,0xeb,0x6b,0xff,
0x9f,0x78,0xc3,0x05,0x04,0x75,0x11,0x63,0xd6,0xe8,0xb7,0x1f,0xe1,0x5b,0x25,0x81,
0x01,0x0b,0x91,0xb6,0xbf,0x52,0x0d,0xcd,0x11,0x58,0x6e,0x18,0xdb,0x53,0xd9,0x0a,
0x06,0xad,0x3d,0x2e,0x42,0x56,0x83,0x7d,0x5b,0x94,0x4c,0x28,0x68,0x50,0x58,0xd5,
0xec,0x5a,0x55,0xde,0xfb,0xc3,0xc3,0x5b,0xdb,0x3b,0xc3,0x26,0x3c,0xdf,0xf8,0x9c,
0x16,0xb6,0xa1,0x21,0xc2,0x89,0x46,0xb0,0x28,0xb9,0x58,0xad,0x29,0x72,0xf0,0xf3,
0x03,0x37,0x8b,0xb6,0xaf,0xf8,0x16,0x8f,0x8c,0x0c,0x37,0xd6,0x8f,0x1c,0xc1,0xc6,
0x5a,0x6b,0xdb,0x40,0x51,0x42,0x7b,0x15,0xff,0x5b,0x3c,0x5d,0xe6,0x1f,0x16,0xd8,
0x85,0xd6,0x8d,0xf8,0x5a,0x4b,0x4f,0x0c,0x77,0x1f,0x56,0x83,0xe9,0x80,0x05,0xe1,
0x6d,0x3f,0x1b,0x24,0xfe,0x5b,0x45,0xc9,0x6b,0x1f,0x5b,0x32,0xc2,0x8b,0x83,0xa9,
0x51,0xb9,0xbc,0x77,0x35,0x43,0xe2,0x85,0x8c,0x6b,0x68,0xd1,0x77,0x03,0xc3,0x88,
0x4d,0x34,0xeb,0x4b,0x36,0xfb,0x68,0x65,0x5f,0x4d,0x02,0x2b,0xd0,0x29,0x86,0x17,
0x87,0x85,0xf2,0x71,0xf4,0x02,0x42,0x89,0x15,0x28,0x50,0x5d,0x8c,0xe8,0x37,0xb7,
0x56,0xd9,0x93,0x06,0x56,0x01,0xf0,0xb4,0x08,0x4a,0xba,0xe8,0x73,0x37,0x68,0x3f,
0x2d,0xee,0x31,0x8b,0x0f,0x49,0xa5,0xf6,0x6a,0x5a,0x36,0x3f,0xe2,0xdc,0x66,0xfa,
0x08,0x2c,0x64,0xba,0xba,0x3b,0xca,0x5d,0x13,0x77,0x05,0xc0,0x32,0xde,0x50,0xe8,
0x87,0xff,0x1b,0xe7,0x4f,0xff,0x6c,0xd0,0xeb,0x0d,0x11,0x65,0x5b,0x2f,0x06,0x1b,
0x1a,0x90,0xb7,0xfd,0xda,0x5b,0x5d,0xac,0x5f,0x82,0x52,0xc6,0xc4,0x04,0x21,0x4f,
0xc1,0x1b,0xde,0x9d,0xff,0x26,0x66,0x0d,0xb3,0x29,0x5d,0x8b,0xd1,0x8b,0xe8,0x32,
0x50,0x88,0x27,0xd8,0xc1,0xc1,0x5f,0x64,0x5b,0xf7,0xf3,0x8a,0xb7,0xd8,0x0b,0x8a,
0x16,0x6e,0x11,0xb6,0x00,0x85,0x35,0xfa,0x8a,0xd1,0x2a,0xd0,0x88,0x5f,0x44,0x8a,
0xe3,0x8a,0x46,0x8b,0xff,0xb6,0xe4,0x04,0x14,0x23,0xf6,0x8b,0xf1,0x14,0x3b,0x15,
0x74,0x30,0x7b,0x97,0x24,0xe8,0x46,0xb7,0xf9,0xc6,0xfe,0xc2,0xbb,0x3a,0x35,0x72,
0x04,0xe2,0xfe,0xc6,0xb2,0x5a,0x76,0x14,0x67,0xc7,0x2d,0xaf,0xe3,0x91,0x0c,0x16,
0xe4,0xc4,0x03,0xc0,0xdc,0x85,0x9d,0x05,0xb0,0xeb,0x3b,0x2c,0x9c,0x0d,0x04,0x96,
0x95,0xaf,0xd8,0xad,0x0c,0xfe,0x9f,0x0c,0x66,0xff,0x6c,0x22,0xfe,0xb2,0x08,0x43,
0xf4,0x35,0x5f,0x32,0xcc,0x1e,0x2d,0x43,0xe1,0x22,0x6c,0x41,0x51,0x01,0xe2,0x85,
0xea,0x1d,0xfc,0x05,0x3f,0xba,0xfa,0xf6,0xff,0xe0,0x89,0xb8,0x0a,0xbc,0xf8,0x1c,
0x85,0x4d,0x76,0x26,0xeb,0x8b,0x37,0x83,0x3f,0x6d,0x02,0x25,0x96,0xf6,0x1b,0x59,
0xfe,0x38,0x3f,0x85,0x9d,0xc5,0x8a,0xdc,0xce,0x2d,0x2c,0xf7,0x09,0xe8,0x8f,0xf8,
0x2a,0xf3,0x0a,0x26,0x89,0x62,0x0a,0x02,0x47,0xfc,0x75,0xa8,0x53,0xcc,0x31,0xd3,
0xd0,0x72,0xf8,0x80,0xaa,0xa3,0x44,0x85,0x87,0xb1,0x19,0x27,0x12,0x66,0xb0,0xcd,
0x93,0x6f,0x0b,0xb5,0xf5,0xeb,0xb0,0x10,0x11,0xbd,0x02,0xff,0x09,0xe6,0x6d,0x63,
0x42,0x52,0x61,0x68,0x10,0xd7,0x6f,0x07,0x06,0xd4,0xd0,0xbf,0xa5,0x77,0x1b,0x3b,
0xf9,0x77,0xa5,0x17,0x86,0xfe,0x7f,0x13,0x3b,0xf2,0x77,0x0f,0x39,0xdc,0x64,0x77,
0x0a,0x14,0xb6,0xe3,0x7f,0xf7,0x18,0x2c,0xc5,0x31,0x09,0x74,0xe2,0x8a,0x2e,0x5c,
0x82,0xb1,0x20,0x2c,0xde,0x89,0x70,0x81,0xdb,0x39,0x3b,0x2e,0x71,0x7e,0xf5,0x62,
0x44,0x09,0x98,0xc5,0xac,0xd4,0xa1,0xc5,0xfb,0xbf,0x2a,0x01,0xa4,0x10,0x02,0x4e,
0xf1,0x20,0x01,0x80,0x06,0x05,0xbb,0x12,0x17,0x01,0x85,0xfe,0x78,0x6c,0x02,0x0a,
0xb2,0x08,0xdb,0x06,0x14,0x0e,0x9a,0x06,0x88,0x2e,0xda,0x86,0x0a,0xfa,0x6c,0x05,
0x0c,0x8c,0x06,0x8c,0x08,0xef,0x17,0xb0,0x40,0x18,0x78,0xe8,0xa5,0xfa,0xdf,0xdd,
0x0c,0x8d,0x86,0x60,0xbd,0xff,0x23,0x94,0x2f,0xb1,0x22,0xcb,0x2f,0xf9,0x0a,0x20,
0xd9,0x0c,0x46,0x3d,0xe8,0x41,0xff,0x84,0x36,0xc9,0x08,0x1c,0x4c,0xfb,0xe9,0x93,
0x87,0x3b,0x40,0x58,0x03,0xb0,0x48,0x89,0x36,0x88,0x1c,0x1c,0x80,0xc8,0x0a,0x0c,
0x0a,0x97,0xa6,0x90,0xf8,0x27,0xb8,0xfe,0x65,0x36,0xb2,0x59,0xf1,0xe9,0x74,0xb4,
0xdc,0x3e,0x76,0x45,0x66,0x0e,0x2e,0xd6,0xfe,0x8a,0x6e,0x0a,0x8a,0x4e,0x0c,0x8a,
0x2b,0xfe,0x86,0x48,0xe2,0x73,0xf6,0x91,0x38,0x6f,0x00,0x8f,0x06,0x56,0xb6,0x0d,
0x03,0x58,0x6f,0x5a,0x0d,0x2e,0x8c,0xe0,0x1e,0x09,0x2a,0x5a,0x9e,0x5c,0xdf,0x4a,
0x3e,0x5e,0x0d,0xfc,0x8a,0x8e,0x37,0x0b,0xbe,0x80,0xff,0x00,0x32,0xe4,0x26,0xac,
0x40,0x8c,0xc5,0xe0,0x87,0xd6,0x93,0x55,0x37,0xb8,0xd9,0x46,0x46,0xe1,0x5e,0x42,
0x68,0x36,0x11,0x20,0xc2,0x8c,0xe7,0xf1,0xfe,0xb1,0x7f,0x0d,0x1b,0xe3,0xf4,0x6e,
0x80,0xf1,0x7f,0xcb,0x64,0x0e,0x60,0x40,0x6f,0x2b,0x8b,0xfc,0x2b,0xf8,0xff,0x72,
0x5c,0x8b,0xe7,0x06,0x1f,0x16,0x07,0xf6,0x51,0x49,0xf3,0xa4,0x21,0xff,0xaa,0x8e,
0xdd,0x87,0xf2,0x87,0xd9,0x4a,0xc4,0x37,0x18,0x43,0xe8,0xfd,0x19,0x00,0x77,0x07,
0x72,0x40,0x4a,0x7d,0xde,0x06,0xf9,0x3c,0x20,0x01,0xa7,0x65,0x0d,0xed,0x09,0x75,
0xe8,0x25,0xd1,0xeb,0xe4,0x36,0x4c,0x42,0xaa,0x01,0x31,0x7d,0x01,0x43,0x86,0xe0,
0xbf,0x10,0xf9,0xe3,0x15,0xac,0x49,0xff,0x2c,0x22,0x74,0x0f,0x04,0x22,0x3c,0x5c,
0xfe,0x75,0x07,0x80,0x3c,0x22,0x75,0x02,0x50,0x2f,0xbc,0xc3,0xe9,0xb3,0xfd,0xd7,
0x59,0x03,0xca,0x2e,0x8e,0xff,0xb0,0x1e,0x52,0x0d,0x43,0x03,0x81,0xdb,0xb0,0xbe,
0xec,0x2b,0xeb,0x72,0xe6,0xdf,0xd8,0x89,0x2e,0x54,0x0d,0x81,0xe3,0xfa,0x60,0x76,
0x5e,0xaa,0xc5,0x02,0x36,0x01,0x7d,0x7d,0xe0,0xfa,0x74,0xf0,0x3d,0x66,0x00,0x8d,
0x2e,0x8b,0xd3,0xdf,0x8b,0x77,0xff,0x36,0x5a,0x03,0x36,0xf8,0xa1,0xda,0x3d,0xa3,
0x16,0x82,0xa1,0xd8,0x32,0xa3,0xa1,0xc6,0x61,0x26,0x0c,0x74,0xb4,0x03,0x76,0x17,
0x53,0xf5,0xb7,0xec,0xc3,0xe8,0xd7,0xf3,0xff,0x2c,0xcd,0x00,0x2b,0xdb,0xc2,0x40,
0x0e,0xe4,0xab,0xff,0x25,0xdf,0x12,0x01,0x20,0x89,0xcb,0xe5,0x4e,0x9c,0x43,0x47,
0x67,0xe2,0x03,0x91,0x7c,0xbf,0x96,0xea,0x46,0xa8,0x08,0xa7,0x33,0x82,0x09,0x75,
0x54,0x6e,0xe5,0xeb,0x0f,0x29,0x67,0x26,0x52,0x26,0x19,0x56,0x93,0x7a,0xb4,0x3e,
0x07,0x45,0x5a,0xef,0xc3,0x1a,0x6b,0xaa,0x43,0xe4,0x52,0xc4,0xcb,0xf1,0x2f,0x5b,
0x46,0x06,0x34,0x06,0xf8,0xeb,0x5b,0xa4,0xf3,0x31,0x48,0x6e,0x34,0x4c,0x08,0x88,
0x3f,0x72,0x3e,0xf6,0xc2,0x80,0xdb,0x75,0x35,0x13,0x42,0xc0,0x33,0xc9,0xae,0xa2,
0x0f,0x83,0x2e,0x55,0x76,0xb8,0x02,0x0c,0x0a,0xea,0x55,0x89,0x97,0xf5,0x5a,0x59,
0xdb,0x72,0x19,0x2e,0x42,0x76,0x1b,0x12,0x3b,0xd6,0x0d,0x99,0x81,0x63,0x55,0xc2,
0x35,0xb6,0x25,0xb7,0xcf,0x74,0xdd,0xe9,0x42,0x04,0x4a,0xe8,0xd4,0xbe,0x36,0x5a,
0x39,0xad,0x69,0xf4,0x75,0x5f,0x83,0x7d,0x0b,0xb5,0x1c,0xf1,0x83,0x3d,0x00,0x7d,
0x12,0xef,0xda,0x56,0xb6,0xbb,0x26,0x4b,0xf7,0xe8,0x45,0x02,0x04,0xee,0x17,0xff,
0x75,0x08,0xda,0xc8,0xf8,0x96,0xd0,0x7d,0xdc,0x0c,0x7c,0x0b,0x05,0xca,0x69,0xb5,
0x5d,0x06,0x9e,0xed,0xf0,0xc7,0x1e,0x6b,0xc8,0x04,0x66,0x06,0x04,0xb6,0x0f,0xc6,
0x18,0xda,0xff,0x44,0x08,0x58,0xc1,0x14,0xa7,0xcd,0x47,0xd1,0x6d,0x93,0xea,0x28,
0xed,0x5f,0xec,0x59,0x21,0x72,0xef,0x06,0x04,0x65,0x74,0xa2,0xd1,0x2f,0x6c,0x3a,
0xce,0xb7,0x66,0x7a,0x23,0x58,0x3b,0x5e,0x79,0xb7,0x7c,0x29,0x70,0x2d,0x2c,0xad,
0x75,0x69,0x6b,0x4f,0x50,0x7e,0x39,0x45,0x0a,0x75,0x46,0xf6,0x58,0x0d,0x4f,0x38,
0x8b,0x45,0xdb,0x08,0x89,0x07,0xeb,0xed,0x30,0xeb,0x2e,0x09,0xf6,0x06,0x03,0x05,
0x40,0x82,0xf6,0x29,0x35,0x50,0x14,0x76,0x50,0x97,0x78,0xbe,0x10,0x3b,0xc3,0x3b,
0xc6,0x12,0xb1,0xb8,0x49,0x28,0x3a,0x29,0xe7,0x75,0x4d,0x02,0x6d,0x2a,0x9f,0x62,
0x86,0xfe,0x7c,0x1e,0xb4,0x2f,0x14,0x15,0x1b,0x5a,0xb4,0xa0,0x1a,0x7c,0x38,0xb4,
0x4e,0x30,0xd7,0x47,0xd2,0x9c,0x59,0xb7,0x93,0x13,0x5a,0x1f,0x6f,0x08,0x51,0x9d,
0x1f,0x15,0x88,0x46,0x37,0x7e,0xb6,0xe8,0x64,0x32,0x73,0x04,0x58,0x4f,0x2c,0x17,
0x89,0xa3,0xe8,0xb9,0x2c,0x10,0xe3,0x17,0x7c,0x42,0xcc,0xed,0xbe,0xbe,0xab,0xfa,
0x12,0xf7,0x44,0x02,0x03,0x8d,0x19,0x88,0x56,0x18,0xdc,0x02,0xdc,0xad,0xf5,0x81,
0x10,0xa4,0x3a,0xe7,0x19,0x5f,0x19,0xb0,0x20,0x40,0x76,0xd1,0xfa,0xaa,0xba,0x0c,
0xe6,0x00,0x51,0x58,0x19,0x3a,0xe0,0x54,0x3f,0xb3,0x0f,0x8a,0xe0,0xc1,0x3c,0x72,
0xa5,0x1b,0x1b,0x13,0xbf,0x68,0x02,0xad,0x1b,0x02,0x7c,0x85,0x4a,0xb4,0xba,0x62,
0x4a,0x42,0xde,0x09,0x61,0x75,0x0d,0x5b,0x09,0x29,0xad,0x80,0x1b,0x95,0x02,0xfa,
0x9a,0x69,0x8a,0x95,0x5f,0xb4,0x18,0x2b,0xaa,0x5a,0x1a,0xc1,0x1f,0xd8,0x09,0x74,
0x05,0x7c,0xf7,0xf9,0x62,0x75,0x15,0x13,0x25,0x63,0x68,0x1b,0x97,0x8c,0xfc,0x83,
0xdf,0xca,0x04,0x31,0x01,0xb5,0xbf,0xa5,0xc8,0x1e,0x16,0xb9,0xca,0xb7,0xc3,0xeb,
0x1d,0x7b,0x24,0x0a,0xe3,0x80,0xce,0x7f,0xa1,0x28,0x0c,0x25,0x00,0xc0,0xd2,0x0b,
0xd0,0x2b,0xda,0xa9,0x0e,0x05,0x70,0xe2,0x83,0xcf,0x40,0x8d,0x92,0xea,0x0a,0xf2,
0x3e,0x1a,0xa4,0x17,0x39,0x92,0xc2,0xc7,0xd6,0x22,0xd3,0x80,0xc1,0x5b,0x46,0xc0,
0x0d,0x8b,0xf0,0xce,0x06,0x67,0xb4,0xfc,0x17,0x3b,0x03,0xf0,0x42,0x07,0xa6,0xf6,
0x6c,0xaf,0x7c,0x6e,0x44,0x7d,0x27,0xd4,0x1a,0x7c,0x5e,0x0b,0x4c,0xd4,0xa3,0xd5,
0xb0,0x1c,0x05,0xdd,0xb4,0x88,0x44,0x04,0x2f,0xc4,0x7d,0x0d,0xc6,0x6e,0x06,0xff,
0xc7,0xd4,0x2a,0x8f,0x20,0x41,0x8a,0x44,0x0f,0xd3,0x78,0xa2,0xe7,0x6e,0x46,0x05,
0x81,0x4c,0x19,0xd1,0x07,0x51,0xb9,0x1e,0x06,0x84,0x12,0x17,0x5c,0x2f,0x0a,0x41,
0xab,0x38,0x56,0xdb,0x0a,0x25,0xf6,0xfd,0x59,0xeb,0xc2,0x42,0x8c,0x73,0x44,0x27,
0x77,0x56,0x0c,0x89,0xfe,0x78,0x7c,0x13,0xa1,0xd4,0x74,0x1a,0xfa,0x83,0xf1,0xe1,
0xd6,0x8a,0xbd,0x3b,0xc2,0x77,0xe7,0x88,0x18,0x7a,0x2b,0x02,0xb0,0xee,0x75,0xe8,
0xcf,0xb5,0xda,0xd0,0x20,0x4b,0xe1,0x0d,0x52,0x8e,0x9c,0xc8,0x2f,0x77,0xc6,0x24,
0xff,0xc0,0x0e,0xe9,0xb9,0xb5,0x43,0x49,0xd7,0xc6,0x47,0x6b,0xb6,0x08,0x76,0xae,
0x88,0x52,0xd1,0xb0,0x0f,0x50,0xc2,0x5e,0xb5,0x2e,0x0a,0xa4,0x23,0xb7,0x7a,0x61,
0x83,0x7f,0x6b,0x52,0x5b,0x24,0x3c,0x73,0x53,0x11,0xdd,0xf1,0x4e,0xff,0x4e,0xa3,
0x4a,0xec,0x6e,0x0c,0x23,0xb5,0x03,0x1c,0xd6,0x19,0x29,0x47,0x07,0xe9,0x41,0xc0,
0x5e,0xa6,0xea,0xab,0x50,0xab,0x67,0xe8,0xc0,0xd0,0x01,0xa8,0xc5,0x05,0x75,0xa9,
0x4b,0xb0,0x90,0x2b,0x2b,0x29,0xf8,0x83,0x4f,0x02,0x95,0x3c,0x77,0x08,0x08,0x88,
0x17,0x6d,0x82,0x08,0xce,0x4d,0x7a,0x77,0xf6,0x24,0x4f,0x74,0xb9,0x21,0x1d,0x4b,
0x48,0x7c,0x6c,0x5a,0x77,0x2c,0x78,0x47,0x1b,0x04,0x04,0x5b,0xc1,0xeb,0x8f,0x07,
0x4a,0xed,0x40,0x02,0x59,0x47,0x47,0x3f,0x68,0x75,0xca,0x97,0x4f,0x74,0xbc,0x05,
0x67,0xac,0x3e,0xb9,0xff,0x38,0x30,0x14,0x40,0xb0,0xea,0x06,0x6a,0x2e,0x36,0x9a,
0x9e,0xc9,0x2e,0xbb,0x42,0x46,0xf5,0xe8,0x51,0xe7,0xcb,0x4a,0x50,0x9b,0x36,0x01,
0x8e,0x77,0xe7,0x6c,0x65,0x73,0x03,0x81,0x0b,0xe3,0x67,0xfc,0xd5,0xf6,0xfe,0xb9,
0x40,0xfc,0x2b,0x5b,0x27,0x58,0xc3,0xf7,0xf6,0x86,0x8c,0xc9,0x35,0x5f,0x15,0x83,
0xd5,0x3c,0x00,0xd4,0x76,0x54,0xba,0xa2,0x14,0x42,0xba,0x72,0x0b,0xa5,0xd4,0xed,
0x99,0x33,0xc2,0xc1,0x41,0xb0,0xcd,0xf8,0xc1,0xbb,0x19,0x7e,0x75,0x2c,0x8b,0x4c,
0x0a,0xfe,0x23,0x1d,0xeb,0x09,0x8d,0x14,0xe9,0xd9,0x80,0x3f,0xda,0x71,0x01,0x47,
0xb0,0x5e,0x4a,0xc0,0x73,0xa5,0x6a,0x6d,0x10,0x41,0x84,0x11,0x8f,0x5a,0x51,0x98,
0x8c,0x06,0x16,0x94,0x04,0x2e,0xe4,0xb5,0xfb,0x31,0x13,0x5e,0x39,0x00,0xd1,0x50,
0x52,0x98,0xbb,0x4e,0x7e,0x0b,0x6f,0x17,0x7c,0xff,0x99,0x0d,0x52,0x19,0x0b,0x36,
0x81,0xea,0x64,0x02,0x5f,0xd8,0xf4,0x04,0xea,0x04,0x44,0xde,0x1e,0x44,0x0a,0x57,
0x93,0x5b,0x19,0x50,0xe3,0xd2,0xe5,0x2c,0x91,0x74,0x5d,0x0a,0x3b,0x17,0x44,0x1a,
0x02,0xc9,0x22,0x09,0x0b,0xc6,0x04,0x7a,0x72,0x5f,0x84,0x04,0x37,0x28,0x29,0x85,
0xef,0x1d,0xb7,0xb6,0x0d,0x68,0x13,0x51,0x0b,0x92,0x11,0x6d,0x1c,0xeb,0xd3,0x75,
0x06,0xca,0xfc,0x19,0x14,0x0d,0xf8,0xfc,0x0e,0x0b,0x01,0xc8,0x09,0x55,0xcd,0x75,
0xb8,0xad,0xc7,0xb9,0x08,0x5e,0xc3,0xc7,0x5d,0x64,0xf3,0xe5,0xb9,0x18,0x19,0x12,
0x2f,0x08,0x05,0x68,0x21,0x4c,0x56,0x02,0x77,0x0f,0xbf,0x14,0x00,0x5f,0x4d,0x13,
0x95,0x8b,0x2e,0x8c,0x03,0x3d,0xd6,0x02,0x8d,0xb7,0x76,0xb0,0xfa,0xac,0x59,0x4e,
0x9a,0xe6,0x93,0x27,0x7a,0xba,0x4d,0x1f,0x4b,0x4d,0xc8,0x75,0xae,0x06,0x9d,0xfe,
0x50,0x9c,0xce,0x41,0x15,0xd7,0x85,0x89,0x6c,0x36,0x90,0x83,0x16,0x1f,0xdf,0x21,
0xc9,0x72,0x1e,0x83,0xdf,0x0e,0x55,0x7f,0xf4,0xfe,0x0d,0x20,0x00,0xcb,0xa4,0x48,
0x43,0x35,0xd2,0x83,0x6c,0xd5,0x10,0x61,0x17,0x70,0xff,0x4a,0x7d,0xd8,0x19,0x59,
0x03,0x14,0x25,0xd7,0xd3,0x06,0x23,0x70,0xe9,0x97,0x00,0xe2,0x7c,0x51,0x66,0xb2,
0x7a,0x5c,0xcb,0x44,0x07,0xdf,0xe9,0x83,0x11,0x7c,0xba,0x54,0x88,0x10,0x16,0x9a,
0x4d,0xe5,0x06,0x75,0xfe,0x46,0x35,0xbf,0x80,0xb1,0x17,0x7c,0xd6,0x7e,0x0c,0x48,
0xe1,0x53,0xff,0xbe,0xb6,0xcd,0xeb,0x80,0xd8,0xc9,0xad,0x78,0x1a,0xff,0x89,0x28,
0xf6,0x62,0x0f,0xab,0x0d,0x95,0x7b,0x14,0xd8,0xac,0x23,0x0e,0xe0,0xd8,0xd1,0x7f,
0x13,0x35,0x01,0xd0,0x66,0x4c,0xb0,0x89,0xb0,0x31,0x56,0xb1,0x8b,0xaa,0x5a,0x36,
0xa5,0x6a,0x8c,0x07,0x5c,0x77,0x74,0xae,0xda,0xda,0xa0,0x10,0x95,0x00,0xca,0xaa,
0x3d,0x9e,0x2c,0x75,0x59,0x27,0x8e,0x44,0x18,0x40,0x2a,0x5f,0x80,0x94,0xe2,0x04,
0x41,0xfe,0x88,0x46,0xbc,0xc6,0x46,0xbd,0x3a,0xdd,0x03,0xbe,0x5c,0x6d,0xa3,0xbf,
0x58,0x5a,0xf8,0x62,0xe2,0x59,0x59,0xf4,0x13,0xf6,0xfa,0x37,0x14,0xc4,0xbc,0x1b,
0x80,0x09,0xf8,0x59,0x3b,0xc7,0x72,0x08,0xae,0x7d,0xa5,0x22,0x51,0xba,0xe8,0xf3,
0x13,0x25,0x1e,0xc1,0xc5,0xf1,0xce,0xfd,0x9b,0x63,0x16,0x08,0x2d,0xd1,0xed,0x2a,
0xd4,0xb6,0x30,0x2b,0x59,0x0f,0xe7,0x05,0x93,0x63,0x07,0x10,0x88,0x19,0x3b,0x66,
0xd1,0xe9,0xfc,0xfc,0xf3,0xa5,0x73,0x01,0xa4,0x4c,0xe7,0x0b,0x1f,0x06,0x4e,0x96,
0xa3,0x3c,0xa9,0xc0,0x2f,0x46,0xe2,0x55,0x93,0xc7,0x2b,0xe2,0xc9,0x2b,0xd2,0x18,
0xb5,0x38,0x7e,0xc2,0x48,0xfb,0xf7,0xc6,0x00,0x77,0x80,0x82,0x93,0x2e,0xf0,0x14,
0x3e,0x8a,0x5c,0xf7,0x77,0x1b,0x29,0x26,0x7c,0x78,0x23,0x3e,0x2a,0x12,0xe1,0xc0,
0xa9,0xa1,0xd1,0x10,0x50,0x48,0x40,0xd0,0xe1,0x2b,0xf6,0xd2,0x6a,0x23,0x5c,0x4e,
0x2e,0x0c,0x28,0x68,0xab,0xcb,0x5b,0x06,0xe8,0xff,0xda,0xe1,0xe9,0xed,0x00,0xf7,
0xc7,0x80,0x15,0x7a,0x06,0xaf,0xbc,0x10,0xd7,0xa3,0x0c,0x40,0x74,0x04,0x74,0x37,
0x13,0x39,0x6d,0xeb,0xdc,0x0b,0x15,0x2a,0xbf,0x77,0xf1,0x63,0x00,0x65,0x98,0x0a,
0xd6,0xa1,0x21,0x62,0xb5,0x8d,0x99,0xb6,0x2f,0x6d,0xeb,0x3c,0xac,0x43,0x84,0x59,
0x36,0x18,0xf0,0x6c,0xe9,0x9c,0x2b,0x64,0x89,0xf0,0x9d,0x00,0xca,0x02,0x3a,0x01,
0x5a,0xe4,0x36,0x16,0x37,0xdf,0xee,0x98,0xfc,0xbb,0xa9,0x68,0x1e,0x81,0x12,0xef,
0xdd,0x20,0x60,0x80,0x6f,0x09,0x25,0xff,0x00,0x0c,0xba,0x01,0xcf,0xdb,0x22,0xd4,
0x82,0xee,0x9a,0x1a,0x0a,0xe6,0x19,0x9c,0x82,0xd8,0x87,0xfe,0x89,0x02,0x83,0xe8,
0x58,0x1a,0xcc,0xd8,0x14,0x85,0xde,0x0e,0x29,0xf4,0xe8,0x70,0xd1,0xfe,0x14,0xff,
0x7c,0x2f,0xed,0x1d,0x03,0x74,0x2e,0xb9,0x00,0x10,0x70,0x2f,0xca,0x81,0xe2,0xff,
0x6a,0x74,0xd6,0x8d,0x3a,0x6c,0xd2,0xdb,0x3d,0x5a,0x07,0xb3,0x50,0xdf,0x5a,0x8e,
0x34,0x9f,0x30,0x0f,0x8c,0x5c,0x04,0x05,0xa0,0x4a,0x5e,0x38,0xf7,0xc1,0x02,0x2e,
0x69,0xdb,0xb0,0x02,0x07,0x04,0x2b,0x12,0x51,0x37,0x63,0xb1,0xf0,0x22,0x6f,0x17,
0x0a,0xc1,0xb4,0x86,0x3d,0x92,0x80,0x1a,0x7b,0xc3,0x06,0xaa,0x76,0xb8,0x0d,0xb2,
0x82,0x57,0x1a,0x47,0x4c,0x87,0xd0,0x14,0xfb,0xaa,0x9b,0xe0,0x4c,0x07,0xb8,0xc4,
0xaa,0x36,0xf4,0xcd,0x08,0x38,0x38,0x9f,0xe3,0x0b,0x7f,0x0d,0x2d,0x0e,0x56,0x4c,
0x8f,0x87,0x2a,0x0c,0x12,0x2c,0xfa,0xb8,0x06,0xae,0x7b,0xc0,0x64,0x0f,0x1b,0x38,
0x7d,0xc1,0x3a,0xff,0xb0,0x38,0x5d,0xa2,0x8f,0xdc,0xbb,0x88,0x07,0x59,0xf7,0x85,
0x5e,0xa9,0xf5,0x75,0x9b,0x1c,0x0a,0x0a,0xa5,0xf5,0x06,0x28,0x30,0x59,0x6f,0xe4,
0xb4,0xc9,0xf6,0x07,0x0b,0xa0,0xd4,0xb3,0xff,0x6d,0xd7,0x00,0xe9,0xcf,0x00,0x74,
0x2f,0x90,0xaf,0x36,0x70,0xc4,0xb3,0xe4,0xda,0xe3,0x81,0x05,0xd4,0xf3,0x23,0xc5,
0x45,0x28,0x2d,0x6e,0x6c,0x38,0x90,0x8d,0xca,0x0d,0x2b,0xf7,0xd8,0xd8,0x89,0x6b,
0x36,0xa0,0x57,0xb2,0x6e,0xe4,0x86,0x19,0x07,0x1d,0x75,0x78,0xb3,0x32,0x5d,0xfe,
0x74,0x6f,0xeb,0x95,0xeb,0x6b,0x87,0x50,0x45,0xb4,0x65,0xd8,0x63,0x85,0x08,0xc4,
0x74,0x13,0x4c,0x12,0x87,0xd9,0x78,0x17,0x17,0x43,0x8e,0xe0,0x33,0x3d,0x11,0x6b,
0x56,0x4e,0xa5,0x40,0xa4,0x18,0xbf,0x76,0x60,0x0d,0x20,0x0e,0x38,0x08,0x19,0xaa,
0x33,0xb2,0x17,0x07,0x64,0x0f,0x20,0xc8,0x20,0x2d,0xe3,0x42,0xa2,0x6d,0x85,0xdc,
0x3f,0xff,0x94,0x83,0x9c,0x82,0x52,0x61,0x4e,0x34,0x6c,0x1d,0xfe,0x28,0x36,0xac,
0x61,0x24,0x28,0x60,0xf7,0xe3,0xba,0xfc,0x74,0x29,0xeb,0x1a,0x57,0x4c,0x04,0x26,
0x02,0x10,0x3e,0x25,0xa2,0xfe,0x93,0xb6,0x97,0x05,0xe9,0x55,0xb8,0x01,0x28,0x4c,
0x18,0xea,0xf9,0xdc,0x03,0x8d,0x5e,0x9b,0xfc,0xea,0xdf,0x00,0x3b,0x1a,0x08,0xb0,
0x98,0x00,0xc2,0x0f,0x78,0x90,0x4f,0x41,0x25,0xcf,0x6a,0xf5,0xc5,0x64,0xee,0x5e,
0x9f,0xdf,0x64,0x23,0x9c,0x08,0x67,0xc6,0x59,0x99,0x07,0xd6,0x46,0x72,0x51,0xd6,
0xe0,0x00,0xf6,0x87,0xe9,0xdb,0x56,0xed,0x05,0x03,0x55,0xcc,0x7c,0x1b,0x34,0x56,
0x35,0xa8,0x2b,0xa1,0x65,0x73,0x52,0x52,0xb6,0x5f,0x0a,0x70,0xdb,0xca,0x62,0xff,
0x3f,0x30,0x77,0x76,0xe8,0xe0,0xfb,0x73,0x3d,0x30,0x10,0xdc,0x97,0x46,0x06,0x01,
0xbd,0xe9,0x9a,0x00,0x91,0x81,0x72,0x1d,0x47,0xd7,0x93,0x06,0xe2,0x73,0x61,0xe9,
0x5c,0xe8,0xeb,0x5c,0x23,0xf9,0x3d,0xc6,0xeb,0x2f,0x54,0xe1,0x7d,0x14,0xea,0x34,
0x70,0x35,0x78,0x20,0x04,0x51,0xef,0x74,0x0b,0x0f,0x24,0x2f,0x85,0x2e,0xc9,0x5c,
0xfd,0xb4,0x93,0x28,0x64,0x49,0x2c,0x06,0x9c,0xd8,0x19,0x5d,0x1e,0x75,0x05,0x41,
0x6c,0x24,0xa9,0xd4,0xfe,0x24,0xde,0x35,0x57,0x61,0xaf,0xd5,0x0a,0x8d,0xf6,0x8a,
0x5b,0x53,0xa7,0x8b,0x00,0x36,0xaa,0x40,0x05,0x0a,0xd5,0x72,0x0d,0x84,0xbc,0x86,
0x92,0xd1,0x8c,0x00,0x97,0xd9,0x2e,0x70,0xc6,0x76,0xc7,0x29,0x47,0x40,0x6a,0x70,
0x7a,0x5c,0x62,0x54,0x99,0x0c,0xec,0x06,0x38,0x6f,0x06,0xde,0xfc,0xac,0x44,0xb0,
0xf5,0x2d,0x1b,0x38,0x05,0xfe,0xaa,0xe2,0xf4,0xeb,0x1c,0xe2,0xf0,0xa5,0x86,0x40,
0x3f,0x48,0x46,0xfd,0x50,0x7e,0x4a,0xe3,0xde,0x6d,0x5b,0x07,0x56,0x19,0xfa,0xfd,
0xaa,0x3b,0xfb,0x81,0xcf,0x6a,0x99,0x56,0x0e,0x20,0x3c,0xf7,0xd9,0x1b,0x2d,0x36,
0x51,0xea,0x22,0xd0,0xeb,0xcc,0x34,0x8e,0x73,0x81,0x8f,0xfa,0x5b,0x2b,0xfb,0x97,
0xc9,0x09,0x16,0x4d,0x1d,0x39,0x6d,0x60,0x75,0x02,0x9b,0xe8,0x08,0x02,0x58,0x91,
0x81,0x5b,0x15,0x7f,0x7d,0x53,0x66,0xc5,0xa4,0x6d,0x02,0x64,0x15,0xd8,0x9a,0x81,
0xfe,0xd0,0x90,0x3b,0xe8,0x0c,0x41,0x5c,0xbc,0xd9,0x14,0x62,0xa5,0x0c,0x96,0xbe,
0x06,0x59,0x62,0x81,0xca,0xea,0x51,0x5e,0x19,0x9b,0x83,0x04,0xb7,0x57,0xf7,0x72,
0x03,0x89,0x80,0x3a,0x38,0x97,0xf7,0xe8,0xca,0xc1,0xea,0x59,0xd4,0x90,0xf3,0x6d,
0x90,0x06,0x5d,0xc9,0xc6,0x34,0x89,0x48,0x91,0xbf,0x6f,0x74,0x3e,0xb5,0x0b,0xa4,
0x40,0xdd,0xe8,0x0a,0x18,0x3f,0x07,0x1b,0xc7,0x18,0x8d,0x40,0xeb,0xd4,0x30,0x06,
0x8e,0xef,0x77,0xff,0x0e,0xec,0xd0,0x04,0xeb,0xb3,0xac,0x6e,0xb9,0x33,0xf9,0x39,
0x7c,0x06,0x80,0xb7,0xda,0x04,0x1a,0x45,0x08,0x92,0xb3,0xa3,0xee,0x34,0x3d,0xc0,
0x24,0xb8,0x42,0x3d,0x03,0x34,0xb2,0x2e,0x9d,0x72,0x13,0x81,0xd7,0x9b,0x8f,0x80,
0x85,0x03,0x02,0x98,0x06,0x0a,0x30,0x8e,0x10,0x76,0x0f,0x8b,0x02,0x15,0xfc,0x08,
0xf8,0x0c,0x02,0x40,0xe8,0xde,0x5a,0x36,0x2e,0x17,0x70,0x4e,0x4e,0x0a,0x72,0x22,
0x49,0x92,0xd0,0x67,0x3a,0x5f,0xe6,0xfe,0x20,0xcc,0x0f,0xda,0x28,0xfe,0x0b,0xd2,
0x26,0x5e,0x0b,0x5d,0xa5,0x02,0xfa,0x2f,0x00,0x3a,0x00,0x5c,0xdb,0xe5,0x3a,0x01,
0x6e,0x53,0x03,0x00,0xf2,0x06,0x56,0x68,0xc4,0x6e,0x44,0xdb,0x7d,0xc6,0x07,0x0b,
0xa4,0x08,0x64,0x08,0x64,0x0a,0x64,0x0a,0x64,0x0c,0x66,0x0c,0xed,0x8d,0x76,0xaa,
0xf0,0xb5,0xff,0xbd,0xc8,0xb0,0xdf,0x04,0x20,0x74,0xf5,0x53,0xd1,0xe8,0x6f,0xd8,
0xbf,0xf8,0x3d,0x37,0x92,0x7e,0x03,0xb5,0xbf,0x04,0x15,0xd4,0x2d,0x57,0x5f,0x07,
0xa9,0x14,0x36,0x51,0x03,0xf7,0xe5,0x10,0x2b,0x4f,0xb7,0x0f,0xfc,0xb9,0x97,0x07,
0xcf,0x3b,0x23,0xfc,0x21,0xcd,0xe2,0x0e,0x01,0xb6,0x6f,0x0c,0xbb,0xae,0x8c,0x11,
0x2c,0x24,0x07,0x1e,0xb2,0xa6,0x0e,0x00,0x63,0x6f,0xc3,0x01,0x70,0xe1,0x05,0x7e,
0xe3,0x56,0xb8,0x04,0xc7,0xb7,0xb2,0xfe,0x50,0x63,0xeb,0xaf,0x61,0x7f,0xac,0x3b,
0xc6,0x75,0xa8,0x0b,0x43,0xee,0x5a,0x46,0x5b,0x22,0x6b,0xd9,0x04,0x26,0xa5,0x08,
0x96,0x08,0x41,0x69,0x8b,0xe8,0x4e,0xd7,0x79,0x46,0x6c,0x83,0x47,0x21,0x06,0x04,
0x59,0x0a,0x66,0x08,0x91,0x69,0x11,0x75,0x82,0x22,0xb4,0x04,0x3a,0xdb,0xfd,0x5a,
0xff,0x54,0x17,0x09,0x0d,0xbb,0xb9,0xeb,0x8f,0xd0,0x08,0x47,0x17,0xf9,0x7b,0x01,
0xe9,0x40,0xff,0x21,0x82,0xfa,0xf6,0x80,0x7e,0xab,0x44,0x70,0x10,0x0f,0x37,0xab,
0x04,0xae,0xd4,0x47,0xa4,0x21,0x7b,0x91,0x16,0x43,0x61,0x6b,0xe1,0x3f,0x6d,0xbf,
0x41,0x3b,0x9b,0x3b,0x0b,0x3b,0xee,0x62,0x3b,0x3a,0x07,0x68,0x05,0x0c,0x42,0xaf,
0x77,0xfe,0x26,0x3a,0x1d,0xfc,0x06,0x3e,0x4d,0x52,0xd7,0xc1,0x32,0xc0,0x1b,0xe4,
0xf2,0xf1,0xae,0x8d,0x75,0xff,0xcc,0x2c,0x0a,0x70,0xf7,0xd1,0x16,0xae,0xc2,0xf7,
0x46,0x81,0x8f,0xba,0x02,0xa4,0x49,0x0e,0x0d,0x17,0xa3,0x46,0x92,0x56,0x1d,0xfc,
0x4e,0x08,0x15,0xbb,0x8f,0x1e,0x09,0xac,0x3a,0x8b,0xc3,0x0f,0x6b,0x22,0xc9,0x77,
0x11,0xad,0x08,0x4d,0x11,0x08,0xdb,0x3a,0xe3,0x03,0x22,0xe0,0xe4,0x75,0xef,0x9b,
0x02,0x46,0x8d,0xc6,0x44,0xfe,0x8c,0x1d,0x8c,0x54,0xb1,0xcd,0xfc,0x35,0x96,0xd8,
0xdb,0x65,0x8b,0xf7,0x74,0x37,0x69,0x26,0xd2,0x6e,0x4e,0xf3,0xa6,0x85,0xcf,0xe0,
0xff,0x8a,0x5d,0x58,0x1e,0xc3,0xc9,0xbb,0x41,0xcc,0x94,0x28,0x2d,0xb4,0xad,0xf3,
0x20,0x28,0x20,0xcc,0x00,0x3c,0xf4,0x63,0x6a,0x64,0x8e,0x0d,0x0b,0x16,0x44,0x8b,
0xe8,0x65,0x1a,0x74,0x6d,0x3f,0xfe,0x56,0xb1,0x0e,0x91,0x78,0x16,0x92,0xe3,0xd8,
0x82,0x68,0x4d,0xeb,0xff,0x88,0xb9,0x7a,0x61,0xac,0x8a,0x80,0x1d,0xb7,0xc2,0x1c,
0xae,0xff,0x74,0xf6,0x3a,0xc5,0x72,0x06,0x3a,0xc1,0xff,0x77,0x02,0x2c,0x20,0x3a,
0xdd,0x72,0x07,0xf0,0x3a,0xd9,0x77,0x03,0x52,0x63,0xba,0xd3,0xdd,0xc9,0x93,0x62,
0x3e,0xe6,0x85,0x3a,0xd8,0xfc,0x92,0xfd,0x91,0xf7,0xd0,0x48,0x5f,0x84,0x59,0xbd,
0xaf,0x77,0xef,0x8b,0xc8,0xe3,0xb4,0x1d,0x5d,0x53,0x1a,0x7b,0x2b,0xd9,0x8b,0xcb,
0xe0,0x09,0xf7,0x32,0xe4,0x8a,0xfc,0x50,0xb2,0x36,0x96,0x2d,0xa2,0x6b,0x1b,0xcb,
0x32,0xdd,0x62,0x87,0xb9,0xcb,0xea,0xb6,0x03,0xaa,0xee,0x5f,0x81,0xec,0x88,0xaa,
0x00,0x41,0x52,0xc0,0x3b,0x3e,0x93,0x62,0x27,0xe4,0xd8,0xe9,0xdf,0x38,0x73,0x1f,
0x55,0xd1,0x00,0x17,0xdd,0x83,0x2c,0x06,0x0f,0x43,0x4b,0xfe,0xf4,0xaf,0xd8,0xf3,
0x81,0xdf,0x57,0x26,0x0e,0x3d,0xb6,0xb5,0x16,0xa8,0x1c,0xfd,0x86,0xa6,0x78,0x19,
0x89,0x24,0x1e,0x89,0x76,0xfa,0xe8,0x4f,0x89,0x1b,0x75,0x4d,0xff,0x36,0x5e,0xfa,
0x96,0x77,0xfa,0x02,0x6d,0x12,0xfd,0x3c,0x6a,0xdb,0xde,0x2e,0x04,0x0d,0x46,0x06,
0x58,0x86,0x88,0xd8,0xc6,0x86,0x78,0x2e,0xfd,0xd6,0x2b,0xd0,0x81,0xfa,0x0b,0xc5,
0x7c,0xf7,0x27,0x2b,0xf0,0x56,0x63,0x55,0x5b,0x3c,0x4a,0xd0,0x74,0xcf,0x12,0x40,
0x87,0xa5,0x3d,0x74,0x4c,0x2b,0xdd,0x31,0x8d,0xb6,0xa0,0x30,0x2f,0x69,0xbd,0xa9,
0x3a,0xab,0x30,0xf5,0x42,0xa9,0xf7,0x76,0x21,0x56,0x0c,0xba,0x3a,0x20,0x49,0x80,
0x0e,0xeb,0x90,0xc5,0x35,0xbd,0x03,0xc2,0x2b,0xc6,0x2b,0xf5,0x08,0x82,0xc0,0x48,
0x83,0xf2,0x0e,0x01,0x41,0xe4,0x1f,0xb4,0x40,0x04,0x5a,0x4d,0x04,0xd5,0xbc,0x10,
0x58,0x41,0xf0,0xff,0xd7,0x0c,0x27,0xb4,0x0c,0x02,0x26,0x87,0x35,0xc4,0x73,0x16,
0x22,0x78,0x01,0x26,0x73,0x14,0xed,0x42,0x47,0x4b,0x36,0xea,0x62,0x80,0x69,0x4d,
0x04,0xec,0x10,0x22,0x99,0x66,0x6e,0x4f,0x23,0x4d,0xcf,0xec,0x75,0x20,0x00,0x97,
0x00,0x42,0xff,0x6f,0x72,0x6c,0x61,0x6e,0x64,0x20,0x43,0xf6,0x2b,0x2b,0x20,0x2d,
0x05,0xff,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0xfe,0x74,0x20,0x31,0x39,0x39,0x31,
0x20,0xc3,0x1c,0xf4,0x49,0x6e,0x74,0x6c,0xbf,0x99,0x4e,0x75,0x6c,0x6c,0x20,0xed,
0x70,0x6f,0x69,0x0c,0xff,0x65,0x72,0x20,0x61,0x73,0x73,0x69,0x67,0xe5,0x6e,0x6d,
0x65,0xff,0x0d,0x0a,0x44,0x69,0x76,0x69,0x64,0x65,0xb6,0x20,0x15,0x72,0xd6,0x2f,
0x0d,0xf6,0x41,0x62,0x6e,0x06,0xee,0x6d,0x61,0x2a,0x6f,0x0e,0x67,0x72,0x61,0xdd,
0x6d,0x20,0x2e,0x6d,0x6f,0x34,0x61,0x74,0x69,0xda,0x6f,0x6e,0x1d,0xf6,0x73,0x01,
0x55,0xe5,0x66,0x0f,0x60,0x17,0x18,0x56,0x85,0x0f,0x17,0x2f,0xb6,0x3f,0x02,0x68,
0x6f,0x65,0x6c,0x70,0x00,0xdf,0x4f,0x70,0x61,0x20,0xf6,0x25,0x73,0x20,0x69,0x02,
0xb5,0x82,0xb6,0xc2,0x76,0x83,0xb7,0x96,0x2e,0x0a,0x61,0x18,0x5f,0x00,0x54,0x6f,
0xdb,0x6f,0x20,0xa9,0x6e,0xfb,0x79,0x20,0x66,0x69,0x6c,0xbf,0x7e,0x73,0x70,0x65,
0x63,0x69,0xdb,0x09,0x63,0xa9,0x1b,0x73,0x1f,0xbe,0x53,0x77,0x69,0x74,0x63,0xd6,
0x5b,0x34,0xf0,0x2f,0x41,0x20,0xfe,0x06,0x2f,0x42,0x20,0x63,0xdb,0x19,0x66,0x3c,
0x76,0x63,0x74,0x1d,0x05,0xfb,0x6d,0x75,0x73,0x74,0x22,0xad,0x6d,0x4b,0xe1,0x62,
0x65,0x66,0x04,0x6c,0x65,0x57,0x21,0xb7,0x4e,0x75,0x73,0x6f,0xec,0x75,0x72,0x63,
0x1f,0xec,0x73,0x20,0x3b,0x65,0x93,0xf6,0x25,0x64,0x14,0x3d,0x28,0x73,0x29,0xd6,
0x48,0x70,0x13,0x76,0x55,0x35,0xb4,0x6d,0x6d,0x6d,0x63,0xa1,0x30,0x74,0x61,0x66,
0x84,0x42,0x50,0x07,0x2e,0x3d,0x44,0xb6,0x17,0x74,0x0f,0x0d,0x20,0xbb,0x94,0x6c,
0x64,0x69,0x76,0x72,0x64,0xe9,0x77,0x70,0x29,0xda,0x74,0x2f,0xdb,0x54,0x77,0xa9,
0x6c,0x6e,0x75,0x30,0xc1,0x06,0x0c,0x5b,0x38,0x43,0x6b,0xb5,0x23,0xdd,0x66,0x79,
0x0e,0x1c,0xdb,0x3c,0x74,0x97,0x5b,0x2c,0x73,0x0b,0x4b,0x66,0x7f,0xdd,0x6b,0x69,
0x70,0x6e,0x7e,0x6e,0x67,0xc3,0x33,0x6d,0x20,0x3b,0xb6,0x14,0x20,0x00,0xd9,0x64,
0x6b,0x6f,0x34,0xdb,0x64,0x6f,0x0f,0x6e,0xb7,0x27,0x44,0x65,0x78,0x6d,0x54,0x74,
0x90,0x36,0x2f,0xd3,0x73,0x77,0x2a,0xf8,0x6e,0x65,0x77,0xed,0x3f,0x74,0x68,0xac,
0x7d,0x85,0x6d,0x41,0x2f,0x6d,0x99,0x64,0xee,0x32,0x4e,0x73,0x81,0x99,0x17,0x92,
0x30,0x11,0xb6,0xe2,0x06,0xc4,0x4b,0x28,0xc2,0x5e,0x5e,0x61,0x64,0x79,0xcc,0x78,
0x3e,0x54,0x44,0x6f,0xeb,0x53,0x65,0xcd,0x3b,0x6f,0xf7,0x98,0x2b,0x89,0x61,0x6a,
0x5b,0x50,0x63,0xd6,0x61,0x28,0xb6,0xe1,0x66,0x61,0x39,0x54,0xb6,0x56,0x2c,0x10,
0xf7,0x4e,0x5d,0x6f,0x05,0x6d,0x53,0x5d,0x59,0xe5,0x70,0x3f,0x00,0xe2,0x59,0x4e,
0x53,0xd8,0xf0,0x57,0x5b,0xac,0x6b,0x70,0xb7,0x2e,0x2e,0x48,0x46,0x50,0xb6,0x0b,
0xa0,0x61,0x6c,0x38,0xdb,0x47,0x20,0x0a,0xd5,0xdb,0x4e,0x27,0x44,0x5b,0x70,0x71,
0xb8,0x75,0x86,0x3f,0x72,0x68,0x03,0x97,0xff,0x03,0xd1,0x03,0x1b,0x04,0x24,0x04,
0x31,0xff,0x04,0x78,0x04,0x7a,0x04,0xb7,0x04,0x01,0xff,0x05,0x37,0x05,0x80,0x05,
0xcb,0x05,0x06,0xd0,0x06,0x42,0xbf,0x64,0x06,0xb1,0x06,0xf8,0x06,0xeb,0x34,0x07,
0x7d,0x6b,0x7b,0x07,0xa5,0x07,0x2d,0x5d,0xc6,0x56,0x6f,0x41,0x2e,0x20,0x33,0xe1,
0x2e,0x30,0x30,0x0b,0x9d,0xdd,0x69,0x73,0x93,0x72,0x47,0x4d,0x8e,0x15,0xb9,0x65,
0xd7,0xcf,0x0f,0xd6,0x73,0xc8,0xfd,0x34,0x9f,0x84,0x28,0x63,0x29,0x4f,0x88,0x36,
0xef,0x20,0x4d,0x2e,0x02,0xb4,0x50,0x44,0x36,0x9f,0x6b,0x79,0xdd,0x09,0x20,0x41,
0x33,0x8a,0x23,0x17,0x96,0xba,0x9e,0x76,0x31,0x28,0xc3,0x54,0x68,0xda,0x24,0x76,
0x37,0x0a,0x8d,0x08,0x6e,0x44,0x6f,0x66,0x11,0x18,0xb7,0x46,0x27,0x65,0x2d,0xef,
0x44,0x4f,0x53,0x1f,0xc7,0x6a,0x65,0xc1,0x23,0x4a,0x5a,0x10,0xdf,0x8b,0x4f,0x50,
0x59,0x2e,0xf1,0x54,0x58,0x54,0x20,0xc1,0xae,0xdb,0xb6,0x74,0x61,0x84,0xb1,0x83,
0xed,0x53,0x79,0x6e,0x0b,0xc2,0x78,0x3a,0xbb,0x2e,0xbe,0x4b,0x67,0x7c,0xd8,0x2f,
0x48,0x0c,0x76,0x5b,0x9f,0xc6,0x74,0x91,0xdd,0x5d,0x2e,0x76,0xc2,0x7c,0x73,0xe4,
0x8f,0xbd,0x46,0x76,0xb0,0x08,0x43,0x41,0x59,0x5d,0x20,0x37,0x5b,0x21,0x8f,0x30,
0x7b,0x19,0x15,0x0e,0x5d,0xd7,0x46,0x48,0xbe,0x3d,0x20,0xc9,0x00,0x73,0xab,0x0f,
0xa3,0x69,0x30,0xbd,0x41,0x55,0x58,0x2c,0xdb,0x95,0x4d,0x6e,0x05,0xed,0x4e,0x0a,
0xe6,0x4c,0x50,0x54,0xf0,0x4e,0x55,0x4c,0x2c,0xfd,0x30,0x50,0x52,0x4e,0x8b,0x3c,
0x6d,0x05,0x98,0x3c,0xc1,0x6a,0x67,0x40,0x2c,0x19,0x1e,0xba,0x2b,0x6c,0x39,0x18,
0xe9,0xfc,0x63,0x3a,0x28,0x4b,0x18,0x0b,0xd7,0x6c,0x8d,0x6f,0x82,0xc6,0x64,0x29,
0xcf,0x4b,0x4a,0x31,0x90,0xdc,0x85,0x3b,0x0b,0x35,0x2c,0x48,0x8b,0x6c,0x7c,0x59,
0x60,0xb1,0x35,0x62,0xca,0xc3,0xbc,0x4c,0xff,0x19,0x53,0x38,0x9c,0xc1,0x9a,0x6f,
0x07,0x41,0x53,0x43,0xdb,0x49,0x49,0x73,0x43,0x81,0x74,0x3f,0x76,0x2d,0x5a,0xdd,
0x8e,0xdf,0x84,0x63,0xe3,0x47,0xe9,0x5b,0x2d,0x92,0x2d,0x3b,0x7e,0x36,0x00,0x5b,
0x48,0xe4,0x42,0xa6,0x62,0xed,0x8e,0x72,0x79,0xa9,0x49,0xa8,0x56,0x25,0x60,0x64,
0x56,0xd6,0x38,0x64,0xdb,0xe7,0x6e,0x67,0x66,0x60,0xc0,0x4a,0x38,0x43,0xc3,0xae,
0x58,0xb2,0xd6,0x69,0x06,0xb3,0xd5,0x59,0x97,0xb0,0x66,0xdc,0x45,0xc0,0x3a,0x1e,
0x4b,0x20,0x6b,0x36,0x19,0x70,0x93,0xa7,0x08,0x3d,0x69,0xe7,0x53,0xba,0xed,0x6f,
0x76,0x11,0x8e,0x77,0x83,0x8f,0x65,0x51,0xb0,0x6d,0x76,0x0e,0x52,0x68,0x70,0x35,
0x33,0xa9,0x5c,0x98,0x37,0xa6,0xb0,0x41,0x94,0x9b,0x9e,0x3d,0xb6,0x72,0x73,0x3e,
0x01,0xd9,0x53,0x20,0xed,0x73,0x79,0x3a,0x68,0x5f,0x71,0x73,0xb0,0xd0,0x64,0xb6,
0x76,0x6e,0x43,0x6c,0x2f,0x01,0xdc,0x56,0x20,0x91,0x05,0x3a,0xaf,0x79,0x4e,0x84,
0x74,0xbe,0x26,0x77,0x19,0x3c,0xed,0xaa,0x47,0x03,0x13,0xb4,0x1e,0x6c,0x23,0x74,
0x19,0xa0,0xb0,0x46,0x0e,0x57,0xeb,0x2e,0x72,0x27,0x5a,0x48,0xf5,0x42,0x90,0x67,
0x6c,0x3b,0x01,0x0b,0xde,0x7a,0x6a,0x57,0xce,0x7b,0x68,0x98,0x90,0x28,0xde,0xd6,
0x62,0x0f,0x86,0xb7,0x18,0x7b,0xdc,0x65,0x9e,0xdd,0x3b,0x62,0x79,0xad,0x85,0x5c,
0x90,0x6e,0x36,0x48,0xe9,0x45,0x78,0xa3,0x6e,0x70,0xd5,0xb2,0x3a,0x53,0xe1,0x25,
0xf7,0x3d,0x41,0x2b,0xf9,0x05,0x42,0x20,0xec,0x43,0x70,0xb7,0x1d,0x6d,0x2a,0x2e,
0x86,0x5d,0xe2,0x3a,0xc6,0x6d,0x79,0x50,0xdb,0x72,0x37,0x72,0x83,0x62,0x1a,0xb7,
0x61,0x62,0xa5,0x2d,0xcb,0x5e,0xf3,0x04,0x50,0xf6,0x72,0x2b,0x16,0xd8,0x77,0x19,
0x13,0x45,0x78,0xff,0x70,0x15,0xec,0x97,0x11,0x89,0xf2,0x63,0x6c,0x6f,0x73,0x15,
0xfe,0x50,0x08,0x54,0x08,0x59,0x08,0x85,0xe3,0xff,0x63,0x08,0x68,0x08,0x6c,0x08,
0x71,0x08,0x42,0x7e,0xfa,0x7b,0x08,0x7f,0x08,0xd4,0xe7,0xd4,0xbb,0x00,0xd7,0xba,
0x31,0x04,0xcf,0x32,0x33,0x3c,0x34,0xda,0x4e,0x00,0x6b,0xc7,0x31,0x04,0xe7,0x32,
0x6a,0x17,0x6a,0xd0,0x00,0x65,0xcc,0x33,0xef,0xd3,0x6d,0x2a,0x39,0xb1,0x5c,0x05,
0xb0,0x2e,0x0d,0x62,0x53,0x40,0x30,0xed,0x20,0x15,0x5e,0x1e,0xd1,0x7b,0x22,0xb5,
0x95,0x88,0xa0,0x8c,0xe0,0xb3,0x78,0x76,0x3d,0xe0,0x30,0x0c,0x55,0x61,0xed,0xe6,
0xe1,0x03,0x97,0xb6,0x2a,0x5c,0xca,0x3d,0x0d,0xd6,0x3c,0x5c,0x8a,0x6e,0x06,0x7b,
0x8a,0x0e,0x02,0x36,0x72,0x16,0x2c,0x68,0xae,0x5c,0x12,0x8d,0xc7,0x04,0x09,0xbe,
0x30,0xcb,0xc7,0xb6,0x5f,0x79,0x20,0x0c,0xcb,0x06,0x8f,0x0b,0x63,0x79,0x1e,0x31,
0x1d,0x5f,0xb5,0x00,0x49,0xbb,0x5d,0x75,0x66,0x50,0xaf,0x69,0x1f,0x1b,0x59,0x61,
0xa6,0x70,0xfd,0x4c,0x54,0xe7,0x4a,0x00,0x48,0x20,0x73,0x21,0xc9,0x20,0x4e,0x01,
0x40,0x42,0xe4,0x02,0x99,0x40,0x39,0x14,0x19,0x04,0x00,0x64,0x40,0x64,0x18,0x64,
0x08,0x01,0x9b,0x40,0x20,0x00,0x25,0x51,0xef,0x0e,0x15,0x01,0x6e,0x13,0x09,0x02,
0x4b,0x46,0xed,0xb7,0x0f,0x0a,0x02,0x92,0x01,0x66,0xce,0x73,0xf1,0x0f,0x26,0xde,
0x6e,0x43,0x02,0x03,0x49,0x9b,0xee,0x42,0x02,0x92,0x04,0x68,0xfe,0xf6,0x99,0x01,
0x51,0x13,0x14,0xf3,0x00,0x01,0x60,0x02,0x7b,0x04,0xa0,0x02,0xa0,0x2a,0x28,0x6a,
0x40,0x41,0x77,0x85,0x13,0x50,0x8b,0x04,0xe1,0x6d,0x08,0x00,0xff,0x14,0x15,0x05,
0x13,0xff,0x16,0x05,0x11,0xc8,0x02,0xff,0x1f,0x05,0x05,0xff,0x24,0x3d,0x0f,0xff,
0x23,0xb3,0x22,0x0f,0xb6,0x2e,0xff,0xdd,0x3c,0x05,0x0f,0xf2,0x30,0x13,0x1d,0x23,
0x9b,0x04,0x0f,0x45,0xba,0xb8,0x4d,0x50,0x5b,0x7e,0x24,0x00,0x5d,0x63,0x10,0x06,
0xeb,0xab,0x67,0xae,0x29,0x9f,0xda,0x14,0x01,0x66,0x3e,0xa8,0x02,0xdf,0x0a,0x03,
0x04,0x14,0x09,0xb0,0x05,0x00,0xe4,0x14,0xbf,0x0f,0x17,0x0f,0x08,0x77,0x06,0x07,
0x14,0x16,0x64,0x12,0xd9,0x0d,0x1d,0x7e,0x10,0x0a,0x0f,0x0f,0xd9,0x1f,0x0a,0x7e,
0x06,0x14,0x12,0x0b,0x0e,0x5e,0x11,0x14,0x0c,0x4b,0x6b,0xfd,0xe5,0x23,0xaf,0x01,
0xad,0xf1,0x50,0x41,0x51,0x00,0x2a,0x1d,0xb9,0xe3,0x2a,0x71,0x5a,0xce,0x6e,0x58,
0x8f,0x3a,0x15,0x86,0x6c,0xf9,0x61,0x0e,0x1e,0xac,0xfa,0xd0,0xe2,0x28,0x64,0x4b,
0x98,0xdf,0x98,0x86,0x4b,0x2a,0x64,0x56,0xd4,0x14,0xc8,0x0d,0xf6,0xf1,0x21,0xf6,
0x01,0x23,0x8e,0x77,0x07,0x18,0xdf,0xef,0xfa,0x20,0x05,0xde,0x0b,0x2a,0x7f,0xc7,
0x03,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x80,0xff,0xa4,0x00,0xff,0x75,0x03,
0xe8,0x5d,0x00,0x72,0xf6,0x41,0x8c,0xc0,0xe8,0x48,0x00,0xe3,0x59,0x73,0xf9,0x49,
0x49,0x74,0x0c,0xc1,0xe1,0x04,0x89,0xcd,0x8a,0x1c,0x46,0xf6,0xd3,0x31,0xc9,0xe8,
0x31,0x00,0x11,0xc9,0x75,0x08,0x41,0xe8,0x29,0x00,0x73,0xfb,0x41,0x41,0x81,0xfd,
0xd1,0x00,0x83,0xd9,0xfe,0x29,0xe8,0x72,0x0e,0x8e,0xd8,0x8d,0x01,0x28,0xfc,0x96,
0xf3,0xa4,0x96,0x8e,0xda,0xeb,0xb5,0xc1,0xe0,0x04,0x6a,0x00,0x1f,0x01,0xd8,0x01,
0xf8,0xeb,0xea,0x00,0xff,0x75,0x03,0xe8,0x06,0x00,0x11,0xc9,0x00,0xff,0x75,0x05,
0x8a,0x3c,0x46,0x10,0xff,0xc3,0x5d,0x06,0x1f,0x8d,0xb5,0xf5,0xff,0xad,0x5b,0x91,
0xad,0x92,0xad,0x97,0xad,0x01,0xc3,0x8e,0xc3,0x31,0xc0,0x01,0xc7,0x26,0x01,0x2d,
0xac,0x48,0x74,0x03,0x40,0x75,0xf4,0x81,0xc7,0xfe,0x00,0xe2,0xf3,0x07,0x06,0x1f,
0x8d,0x86,0xeb,0x04,0x8e,0xd0,0xbc,0x80,0x00,0xea,0x00,0x00,0x00,0x00,0xeb,0x04,
0x80,0x00,0x28,0x00,0x1e};

	static Bit8u some_data_buffers[2607] = {
	 0x81, 0xFC, 0x27, 0x0E, 0x77, 0x02, 0xCD, 0x20, 0xB9, 0x2F, 0x0A, 0xBE, 0x2F, 0x0B, 0xBF, 0xC7, 
	 0x0D, 0xBB, 0x00, 0x80, 0xFD, 0xF3, 0xA4, 0xFC, 0x87, 0xF7, 0x83, 0xEE, 0xC6, 0x19, 0xED, 0x57, 
	 0x57, 0xE9, 0x4F, 0x0C, 0x55, 0x50, 0x58, 0x21, 0x0D, 0x01, 0x04, 0x0A, 0x73, 0x99, 0x28, 0x45, 
	 0x05, 0x51, 0xE2, 0x52, 0x62, 0x0C, 0xA0, 0x09, 0x06, 0x50, 0x42, 0xFE, 0xE9, 0x0B, 0x84, 0x00, 
	 0x00, 0x35, 0x00, 0xFF, 0xEE, 0x06, 0x03, 0x2E, 0x8B, 0x26, 0x13, 0x01, 0x56, 0x57, 0xB9, 0xFF, 
	 0xFF, 0x0A, 0x00, 0xF3, 0xA5, 0x5F, 0x5E, 0x06, 0x1F, 0x89, 0x75, 0x02, 0x8B, 0xF7, 0x2E, 0x03, 
	 0x3E, 0xFB, 0xFF, 0x05, 0x01, 0x2E, 0xFF, 0x0E, 0x0B, 0x01, 0x74, 0x04, 0x89, 0x3C, 0xEB, 0xDB, 
	 0x24, 0xFE, 0x7F, 0x0E, 0x17, 0x01, 0xE3, 0x06, 0x8E, 0xC1, 0xB4, 0x49, 0xCD, 0x21, 0xC7, 0x04, 
	 0xFF, 0xDF, 0x35, 0x89, 0x36, 0x02, 0x00, 0x0E, 0x1F, 0x8B, 0x16, 0x15, 0x01, 0xA0, 0x07, 0xD6, 
	 0xFE, 0x01, 0x0A, 0x06, 0x08, 0x01, 0xB4, 0x31, 0x18, 0x4A, 0xFF, 0x3F, 0xE8, 0x01, 0x78, 0x2E, 
	 0xC4, 0x3E, 0x0D, 0x01, 0x26, 0x8C, 0x5D, 0x02, 0x26, 0x6E, 0xFF, 0x89, 0x1D, 0xEB, 0xD9, 0xE3, 
	 0x23, 0x8E, 0xC0, 0x4F, 0x06, 0x11, 0x5B, 0xEB, 0x11, 0x1E, 0x34, 0x12, 0x1E, 0xBF, 0x6D, 0x3D, 
	 0xBF, 0x41, 0x8D, 0x31, 0x51, 0xB9, 0x0C, 0xDF, 0x6E, 0x72, 0xA4, 0x59, 0x71, 0x33, 0xDB, 0xE2, 
	 0xDD, 0x6F, 0xB7, 0xC3, 0x04, 0xB4, 0x3E, 0x41, 0x43, 0x83, 0xFB, 0xFF, 0xFF, 0x05, 0x72, 0xF6, 
	 0xC3, 0x49, 0x6C, 0x6C, 0x65, 0x67, 0x61, 0x6C, 0x20, 0x42, 0x55, 0x46, 0x46, 0xFF, 0xFF, 0x45, 
	 0x52, 0x53, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6D, 0x65, 0x74, 0x65, 0x72, 0x3A, 0x20, 0x24, 0x2D, 
	 0xD8, 0x0D, 0x0A, 0x15, 0x0B, 0xFF, 0xFF, 0x50, 0x72, 0x65, 0x73, 0x73, 0x20, 0x3C, 0x45, 0x53, 
	 0x43, 0x3E, 0x20, 0x74, 0x6F, 0x20, 0x75, 0x27, 0xFB, 0x6E, 0x6C, 0x6F, 0x61, 0x64, 0x34, 0x6F, 
	 0x72, 0xED, 0xF6, 0x20, 0x61, 0x6E, 0x79, 0x06, 0x74, 0x68, 0x37, 0xBB, 0xF6, 0x20, 0x6B, 0x65, 
	 0x79, 0x38, 0x23, 0x63, 0x6F, 0xB5, 0xFF, 0x6E, 0x74, 0x69, 0x6E, 0x75, 0x65, 0x20, 0x77, 0x69, 
	 0x17, 0x6B, 0x87, 0x2A, 0x2E, 0x00, 0x56, 0x77, 0x58, 0x36, 0x73, 0x19, 0xB7, 0x5B, 0x63, 0x32, 
	 0x73, 0x3A, 0x2F, 0x24, 0x20, 0xFD, 0x6F, 0x00, 0x4E, 0x4F, 0x50, 0x41, 0x55, 0x53, 0x45, 0x4F, 
	 0x4E, 0x6D, 0xBF, 0x1B, 0x52, 0x4F, 0x52, 0x09, 0x44, 0x42, 0x6E, 0xED, 0xAE, 0x51, 0x90, 0x75, 
	 0x73, 0x65, 0x5A, 0x6D, 0xCB, 0x6E, 0x20, 0x72, 0x67, 0x0D, 0x76, 0xCC, 0x27, 0x25, 0x09, 0x50, 
	 0x17, 0xAF, 0x3D, 0x77, 0x68, 0x69, 0xBF, 0xB4, 0xED, 0xB6, 0x73, 0x6A, 0x67, 0x72, 0x6D, 0x6D, 
	 0xFD, 0xBB, 0x88, 0x64, 0x73, 0x25, 0x48, 0x45, 0x4C, 0x50, 0x6B, 0xBF, 0x43, 0x69, 0x73, 0x70, 
	 0x6C, 0x61, 0x99, 0x80, 0x6E, 0x5B, 0x08, 0x20, 0x69, 0x6C, 0x70, 0xFE, 0xDE, 0x09, 0x65, 0x78, 
	 0x74, 0x1E, 0x3F, 0x09, 0x4C, 0xB6, 0xD6, 0x12, 0x5D, 0xF9, 0x6C, 0xB3, 0xC9, 0x35, 0x00, 0xE4, 
	 0xB7, 0x7B, 0xC9, 0xC3, 0x20, 0x66, 0xD5, 0xED, 0x5C, 0x6E, 0x2D, 0x5D, 0x67, 0x65, 0xB6, 0xC1, 
	 0xB7, 0xC0, 0xB6, 0x0C, 0x01, 0x85, 0xFD, 0x00, 0x01, 0x01, 0x19, 0x04, 0xAA, 0xF6, 0xBF, 0xB9, 
	 0x45, 0x00, 0xDF, 0x02, 0x15, 0x03, 0x15, 0xDF, 0x2E, 0x28, 0xCA, 0x04, 0x7E, 0x00, 0xB0, 0xFB, 
	 0x08, 0x0D, 0xE6, 0x06, 0x3F, 0x0E, 0x0B, 0x05, 0x17, 0xBE, 0xFB, 0xC6, 0x07, 0x00, 0xC3, 0xE6, 
	 0x36, 0xDA, 0xFF, 0xF6, 0x02, 0x2E, 0xC7, 0x06, 0x04, 0xE3, 0x02, 0xE8, 0x03, 0xA0, 0x2E, 0x8F, 
	 0x73, 0x73, 0x09, 0x14, 0x8B, 0x16, 0xC2, 0x7F, 0x89, 0x16, 0xDC, 0x02, 0x52, 0x2E, 0x80, 0x3E, 
	 0xD9, 0xB7, 0xFF, 0xEE, 0x75, 0x26, 0x1B, 0x73, 0x1F, 0x85, 0xD2, 0x74, 0x1D, 0x81, 0xFA, 0xF6, 
	 0xF6, 0x17, 0x04, 0x75, 0x12, 0x0E, 0x18, 0x73, 0x10, 0x0A, 0xFF, 0x36, 0x07, 0x41, 0x16, 0xE1, 
	 0x02, 0xEB, 0x03, 0xE8, 0x04, 0xA5, 0xFB, 0x17, 0xEB, 0xD2, 0x5A, 0xC3, 0x2F, 0xDF, 0xF6, 0xDB, 
	 0x74, 0x06, 0x5C, 0x06, 0xDE, 0x02, 0x01, 0xC3, 0x27, 0x32, 0xD8, 0x2D, 0x41, 0x0C, 0x76, 0xE3, 
	 0x94, 0x32, 0x0A, 0x38, 0x06, 0x0C, 0x7C, 0xFF, 0x74, 0x05, 0x2E, 0xA0, 0xD8, 0x02, 0xF9, 0x2B, 
	 0xDE, 0xFF, 0xCE, 0x3A, 0xD4, 0xC3, 0x50, 0x53, 0x57, 0x06, 0x0E, 0x07, 0x95, 0xED, 0xFC, 0x33, 
	 0xD2, 0x7B, 0x3E, 0xDF, 0xBE, 0x11, 0xA3, 0x72, 0x59, 0x56, 0x05, 0x5D, 0xAE, 0x75, 0x07, 0xDD, 
	 0x2F, 0x85, 0x74, 0x2E, 0xEB, 0xF3, 0x06, 0x75, 0x7D, 0xFB, 0x09, 0x26, 0x8A, 0x45, 0xFF, 0x08, 
	 0x74, 0x74, 0x1E, 0x5E, 0xBD, 0xF0, 0x09, 0x3C, 0x3A, 0xDB, 0x84, 0xC0, 0x37, 0xBE, 0x3F, 0x47, 
	 0xEB, 0xF1, 0x83, 0x96, 0x26, 0x80, 0x6E, 0xB7, 0x3D, 0x65, 0xCB, 0xBA, 0x92, 0xEB, 0x1F, 0xB6, 
	 0xD6, 0xFC, 0x69, 0x39, 0xFD, 0x7F, 0x5B, 0xBD, 0x87, 0x8B, 0x1D, 0xBA, 0x18, 0x04, 0xF8, 0xFB, 
	 0x6F, 0xA4, 0x55, 0x02, 0x07, 0x5B, 0x73, 0x08, 0x8B, 0xF3, 0x0D, 0xFB, 0xBF, 0xF9, 0xEB, 0x01, 
	 0xF8, 0x07, 0x5F, 0x5B, 0x58, 0xC3, 0x24, 0x24, 0x82, 0xED, 0xA4, 0xE0, 0x29, 0x02, 0xDE, 0xB6, 
	 0x9B, 0xA2, 0x68, 0x88, 0x56, 0x52, 0x1E, 0x1B, 0x37, 0xDB, 0xBA, 0xAD, 0xD3, 0x09, 0xFF, 0x2E, 
	 0x1F, 0xAC, 0x6D, 0x08, 0x8A, 0xD0, 0xB4, 0x6F, 0xB7, 0x02, 0x0C, 0xEB, 0xF2, 0x05, 0xB2, 0x0D, 
	 0xCD, 0x5B, 0x9A, 0x21, 0x0A, 0x5A, 0x25, 0xDB, 0x98, 0x22, 0x5E, 0x47, 0xAC, 0xFF, 0x85, 0x3C, 
	 0xED, 0x06, 0x3C, 0x7A, 0x77, 0x02, 0x2C, 0x20, 0xC3, 0xDF, 0xF8, 0x20, 0x2F, 0x2C, 0x3B, 0x09, 
	 0x3D, 0x00, 0x3A, 0x3D, 0x2D, 0xFD, 0xBF, 0x51, 0xD2, 0xBF, 0x6B, 0x04, 0xB9, 0x08, 0x00, 0xF2, 
	 0xAE, 0xEC, 0xBB, 0x70, 0x59, 0xC3, 0x4C, 0x10, 0x15, 0x90, 0xE5, 0x73, 0x03, 0xFB, 0x5F, 0x63, 
	 0x75, 0xFA, 0x4E, 0xC3, 0x8A, 0x04, 0x08, 0xDF, 0xF8, 0x0F, 0x3C, 0x0D, 0x0D, 0x3C, 0x3B, 0x74, 
	 0x09, 0xFE, 0x8D, 0x3C, 0xB1, 0x05, 0x46, 0xEB, 0xEA, 0xF8, 0xC3, 0xF9, 0x5F, 0xE8, 0x5F, 0x3D, 
	 0x33, 0x3C, 0x3A, 0x74, 0x01, 0x43, 0x9E, 0x4E, 0xE0, 0x47, 0x70, 0x81, 0x66, 0x00, 0xBA, 0xFB, 
	 0xB1, 0xC9, 0xAD, 0x32, 0xE4, 0xCD, 0x16, 0x50, 0xA1, 0xD7, 0x5E, 0xAB, 0xA1, 0x05, 0xA1, 0xF0, 
	 0x58, 0x3C, 0x1B, 0x77, 0x89, 0x74, 0xA5, 0xD9, 0x05, 0xD8, 0x05, 0xBB, 0xF8, 0x1F, 0x40, 0x77, 
	 0x2B, 0xE6, 0x57, 0x56, 0x55, 0xE8, 0xC2, 0xE7, 0x20, 0x02, 0x8B, 0x36, 0xEB, 0x61, 0xE9, 0x8B, 
	 0xEE, 0x86, 0xAC, 0x4F, 0x2F, 0xBC, 0x2B, 0xE8, 0x05, 0xA8, 0x5A, 0x75, 0xF4, 0xB0, 0xF7, 0xB9, 
	 0x28, 0x08, 0x10, 0x15, 0x0D, 0x6E, 0x73, 0x0C, 0xB0, 0x29, 0xB0, 0x20, 0x04, 0xB1, 0xC8, 0xEB, 
	 0xE6, 0x10, 0x7B, 0xFB, 0x83, 0xC6, 0x04, 0x80, 0x3C, 0x4D, 0x0B, 0x3B, 0x2E, 0x3F, 0xDF, 0x7D, 
	 0x75, 0x2E, 0xBE, 0xE3, 0x44, 0xB9, 0x1B, 0x00, 0x3B, 0xD9, 0xF7, 0xF7, 0x72, 0x15, 0xB9, 0x35, 
	 0x06, 0x0E, 0xB0, 0x0D, 0x36, 0xDF, 0xCC, 0x0A, 0x5C, 0xEB, 0xA1, 0x2B, 0xCB, 0xFB, 0xD8, 0x76, 
	 0x9D, 0x43, 0xE2, 0xFB, 0xEB, 0x94, 0x1A, 0xB3, 0x2F, 0x1F, 0x5D, 0x5E, 0xA5, 0x13, 0x6E, 0x94, 
	 0x50, 0x52, 0x6C, 0x5F, 0xF6, 0x5A, 0x58, 0x43, 0xC3, 0x20, 0xC3, 0x83, 0xF9, 0x18, 0xFB, 0x50, 
	 0x77, 0x07, 0xE3, 0x05, 0x39, 0xC3, 0xAD, 0xD6, 0xBD, 0x43, 0x92, 0x6F, 0xBB, 0xCE, 0x0D, 0xBF, 
	 0xC3, 0x21, 0xCE, 0xB0, 0xBA, 0x16, 0x3B, 0x05, 0x02, 0xDC, 0xFE, 0xB4, 0xC3, 0x8B, 0x4D, 0x02, 
	 0x41, 0x67, 0x72, 0x05, 0xB5, 0xEF, 0x1F, 0xD8, 0x78, 0xE1, 0x8B, 0x72, 0xC9, 0x12, 0x5C, 0xDD, 
	 0xBD, 0x11, 0x3C, 0x09, 0x75, 0x3A, 0xEA, 0xEB, 0xEE, 0xDF, 0xFE, 0xC6, 0xE9, 0xF1, 0x69, 0x06, 
	 0xC1, 0x0A, 0x75, 0x01, 0x46, 0x25, 0xFB, 0x8B, 0x0D, 0x83, 0xC1, 0x02, 0x38, 0xF8, 0xBB, 0x02, 
	 0xE1, 0x42, 0x3C, 0xE8, 0x06, 0x55, 0xB0, 0xDD, 0x41, 0x83, 0xC3, 0x18, 0xD9, 0xF9, 0xAE, 0xB1, 
	 0xC1, 0x0B, 0xD1, 0xEB, 0x8B, 0xCB, 0xEF, 0x5A, 0x09, 0x22, 0xEB, 0xAD, 0x33, 0xC9, 0x74, 0x1B, 
	 0x2D, 0xAC, 0x52, 0x07, 0x1C, 0x7F, 0x85, 0x41, 0xEB, 0xF4, 0x0A, 0x7D, 0x37, 0xC7, 0x51, 0x56, 
	 0x93, 0xC9, 0x2E, 0xF6, 0xBA, 0xCD, 0x53, 0x2A, 0xFC, 0xD9, 0xB0, 0xBB, 0x9C, 0xBA, 0x01, 0x00, 
	 0x8B, 0x75, 0x6B, 0x6C, 0xC8, 0xF6, 0x52, 0x57, 0xFD, 0x61, 0x35, 0x38, 0xF8, 0x5E, 0x59, 0x5B, 
	 0xE4, 0x8B, 0x34, 0x33, 0xC8, 0x67, 0x2E, 0xBC, 0x1D, 0xEF, 0xBA, 0x2E, 0x24, 0x2B, 0x74, 0x1F, 
	 0x83, 0xFA, 0xEE, 0x85, 0x16, 0x57, 0x56, 0xBE, 0xB9, 0x1D, 0x78, 0x6B, 0x37, 0x40, 0x9D, 0xB4, 
	 0x00, 0x36, 0x57, 0xEF, 0x54, 0x09, 0x68, 0x61, 0xEC, 0x10, 0xEB, 0xDC, 0x1B, 0xBF, 0xE1, 0x3A, 
	 0x56, 0xD7, 0x8B, 0xFB, 0x8B, 0x05, 0xB9, 0x4B, 0x7C, 0xFB, 0x00, 0x2B, 0xC8, 0x73, 0x02, 0xA5, 
	 0xD1, 0xE9, 0x15, 0x8A, 0x5B, 0x33, 0x2E, 0x27, 0x7C, 0x06, 0x99, 0x6F, 0x05, 0xBB, 0xBE, 0x35, 
	 0x02, 0x39, 0xB3, 0x0B, 0x08, 0x46, 0x93, 0xD0, 0x42, 0x1F, 0x7F, 0x20, 0xAB, 0xF5, 0x62, 0x75, 
	 0x66, 0x66, 0xD7, 0x73, 0x0E, 0xBC, 0x64, 0x64, 0x65, 0x64, 0x05, 0xDA, 0xB6, 0xF1, 0x77, 0x04, 
	 0x28, 0xCB, 0xD5, 0xCB, 0xB1, 0xD6, 0xBA, 0x7D, 0x48, 0x4D, 0x41, 0x29, 0x0D, 0x62, 0x65, 0x08, 
	 0xEC, 0x89, 0x65, 0x24, 0x34, 0xA0, 0x75, 0x63, 0x9F, 0xB3, 0x76, 0x16, 0x15, 0x34, 0x97, 0xB7, 
	 0x20, 0x2B, 0x73, 0x69, 0x64, 0x44, 0x45, 0xBD, 0x6F, 0xD6, 0x76, 0x69, 0x65, 0x77, 0x44, 0xE7, 
	 0x86, 0x55, 0x4C, 0x0E, 0x18, 0x32, 0x38, 0x72, 0xCD, 0x15, 0xBB, 0x33, 0x2F, 0xE8, 0xB6, 0x4F, 
	 0x11, 0x76, 0x24, 0x69, 0xCB, 0x1A, 0x59, 0x34, 0x25, 0xD9, 0x02, 0xE9, 0x43, 0x26, 0x7B, 0xDB, 
	 0x66, 0x23, 0x64, 0x24, 0x4C, 0x09, 0x0C, 0xA2, 0xE0, 0xB0, 0x4B, 0x64, 0x0E, 0x4C, 0x57, 0x2C, 
	 0x60, 0xFB, 0x81, 0x63, 0x9F, 0x61, 0x10, 0x5B, 0x8C, 0x73, 0xB4, 0x0E, 0x2E, 0xF1, 0x6D, 0x62, 
	 0x05, 0xEC, 0xC0, 0x6F, 0x66, 0x65, 0x40, 0x83, 0x0F, 0x0D, 0x53, 0x79, 0x10, 0x2B, 0x70, 0x61, 
	 0x78, 0xEC, 0x47, 0x83, 0x01, 0x5B, 0x6E, 0x03, 0x1B, 0x5D, 0x12, 0xB8, 0x07, 0x2D, 0xB9, 0x60, 
	 0x19, 0x88, 0x59, 0xDB, 0x26, 0x68, 0xC7, 0x5B, 0xB5, 0xF6, 0x63, 0x75, 0x72, 0x69, 0x44, 0x6D, 
	 0xBB, 0x75, 0x6D, 0x6F, 0xC5, 0x74, 0x51, 0x52, 0x06, 0xB4, 0x7E, 0x07, 0xF9, 0x81, 0x09, 0x53, 
	 0x16, 0xD6, 0x0D, 0x8D, 0x75, 0xC9, 0x86, 0x20, 0x3D, 0x33, 0x95, 0x21, 0x2B, 0x2C, 0xD8, 0x49, 
	 0xD7, 0x26, 0x6D, 0x0B, 0x07, 0x79, 0xF6, 0xFE, 0x14, 0x0D, 0x00, 0x51, 0x44, 0x86, 0x85, 0x22, 
	 0xD6, 0x50, 0x04, 0xF4, 0x5F, 0x5D, 0xD2, 0xF7, 0xF3, 0x52, 0xD4, 0x0A, 0x84, 0xE4, 0xFC, 0xBF, 
	 0xF5, 0xE3, 0x09, 0x80, 0xC4, 0x30, 0x8A, 0xD4, 0xE8, 0x08, 0xF5, 0x41, 0xB6, 0x6B, 0xB3, 0x0E, 
	 0x08, 0x04, 0x0D, 0x05, 0xCE, 0xD0, 0xB9, 0xED, 0x8D, 0x51, 0x0B, 0x3C, 0x2A, 0xC9, 0x0B, 0xAE, 
	 0xF5, 0xFC, 0x8B, 0xC2, 0xBB, 0xBE, 0x07, 0x5A, 0xEE, 0x80, 0xC2, 0x30, 0x19, 0x9F, 0xC3, 0xC1, 
	 0xD2, 0x3D, 0x24, 0x70, 0xDC, 0x7E, 0x52, 0xBA, 0x4E, 0x07, 0xEB, 0x04, 0x05, 0x3B, 0x07, 0xD6, 
	 0x68, 0x62, 0xB5, 0x07, 0xF1, 0xEB, 0x3D, 0x09, 0x3D, 0xA1, 0x03, 0x78, 0x2F, 0xF8, 0x09, 0x22, 
	 0x5A, 0x0A, 0x4B, 0xEC, 0x83, 0xD5, 0x09, 0xC5, 0x1E, 0x66, 0x8B, 0x06, 0x06, 0x1E, 0xF0, 0xFF, 
	 0xC4, 0x1F, 0x26, 0x8B, 0x07, 0xB1, 0x04, 0xD3, 0xE8, 0x0C, 0xA8, 0x47, 0xDF, 0x2F, 0x80, 0x73, 
	 0x07, 0xBA, 0x40, 0x07, 0x25, 0xBA, 0x8E, 0xB1, 0x46, 0x37, 0x5A, 0xDD, 0xC1, 0x8E, 0x53, 0xAC, 
	 0xA1, 0x09, 0x3B, 0xB6, 0xC1, 0x06, 0x43, 0xBA, 0x2A, 0x1F, 0xC5, 0x16, 0x09, 0x4D, 0x5D, 0xBC, 
	 0x49, 0x9E, 0x2E, 0xA1, 0x86, 0xF7, 0xD6, 0x97, 0x26, 0xBB, 0x0F, 0x00, 0x03, 0x02, 0xC1, 0xF6, 
	 0xD2, 0x00, 0x43, 0xC7, 0x05, 0xB7, 0xB8, 0xB3, 0x2E, 0xA3, 0x77, 0x1F, 0x5B, 0xC7, 0x8B, 0xC3, 
	 0xC2, 0xF1, 0xFE, 0x65, 0xD7, 0x09, 0x05, 0xB8, 0x1B, 0x10, 0xCD, 0x15, 0xC3, 0x9D, 0xC9, 0x0D, 
	 0x1C, 0xAC, 0xB1, 0x43, 0xD6, 0xF9, 0x8E, 0x0B, 0xF7, 0x73, 0x22, 0x88, 0x5C, 0xFE, 0x7F, 0xFF, 
	 0x74, 0x0F, 0x41, 0x81, 0xF9, 0xD0, 0x07, 0x72, 0xF1, 0xBA, 0xB5, 0x07, 0x17, 0xD8, 0x1E, 0xE4, 
	 0x58, 0xE3, 0xF6, 0x1A, 0xDF, 0x89, 0x0E, 0x77, 0xE4, 0xF8, 0x66, 0xFA, 0xAA, 0xC4, 0x36, 0x21, 
	 0x7F, 0x3B, 0x73, 0xDE, 0xB6, 0x3D, 0x3B, 0xFB, 0x75, 0xF2, 0x57, 0xFC, 0xB7, 0x56, 0xC9, 0x51, 
	 0x8C, 0xC6, 0x4E, 0x8E, 0xDE, 0x33, 0xF6, 0xA1, 0x0D, 0xB5, 0x60, 0x00, 0x2A, 0x89, 0x65, 0x08, 
	 0xA6, 0x00, 0x75, 0x71, 0xB9, 0x06, 0xBE, 0xAD, 0x50, 0xA8, 0x8A, 0x18, 0x2F, 0x2D, 0xC1, 0x07, 
	 0x3E, 0x5F, 0xEB, 0xB4, 0x5B, 0x6C, 0x07, 0x58, 0xDE, 0x45, 0x2E, 0xB7, 0x0A, 0x03, 0x5D, 0x08, 
	 0x4D, 0x0C, 0xF6, 0x2D, 0xF6, 0xEB, 0xE8, 0x5D, 0x2B, 0xCA, 0xBF, 0xAD, 0x3B, 0x12, 0x83, 0x02, 
	 0x77, 0xBD, 0xE1, 0x01, 0x43, 0x89, 0x11, 0x8C, 0x06, 0x0F, 0x01, 0xF0, 0xBE, 0x5B, 0x47, 0xFE, 
	 0x05, 0x10, 0xBC, 0xCD, 0xFD, 0x2A, 0x03, 0x05, 0x04, 0xD2, 0xE9, 0xBB, 0xF4, 0x8B, 0xC8, 0x03, 
	 0xC8, 0xF9, 0x70, 0x2E, 0x91, 0xB6, 0x50, 0x46, 0x05, 0xF0, 0xEE, 0x87, 0x34, 0xAD, 0xE5, 0x11, 
	 0x9C, 0xA2, 0x81, 0xF2, 0xFF, 0x2B, 0xB0, 0x54, 0x07, 0xA0, 0xD4, 0x35, 0xB8, 0x26, 0xEB, 0x0C, 
	 0x0A, 0x0E, 0x9E, 0x0A, 0x00, 0xEB, 0x0D, 0x37, 0xF8, 0xE8, 0x0A, 0xBD, 0x8B, 0xFE, 0x37, 0x2C, 
	 0x30, 0xED, 0x5B, 0xD3, 0x77, 0x20, 0xBB, 0x07, 0x2C, 0xB5, 0xAD, 0x0D, 0x21, 0x18, 0x56, 0xD0, 
	 0xC0, 0x1D, 0x47, 0x7B, 0xDB, 0x94, 0x29, 0x06, 0x12, 0x73, 0x06, 0xC7, 0x05, 0xB5, 0x82, 0x2A, 
	 0xE1, 0x26, 0x0A, 0xD8, 0xA3, 0x68, 0x6F, 0xF3, 0xBE, 0x81, 0x00, 0x11, 0x05, 0x96, 0xB1, 0xD8, 
	 0x57, 0x56, 0xFB, 0x03, 0x77, 0xC3, 0xB4, 0x30, 0xA1, 0xFD, 0xFF, 0xAD, 0xF3, 0xB8, 0x03, 0x1E, 
	 0xEB, 0x07, 0x3C, 0x05, 0x76, 0xB6, 0xC5, 0x03, 0xB8, 0x17, 0xA3, 0x95, 0x9B, 0xE1, 0xC3, 0x52, 
	 0x77, 0x7B, 0x73, 0x3B, 0x6E, 0x0E, 0xFF, 0xFF, 0x19, 0x52, 0xB9, 0xDB, 0x6E, 0xAD, 0xF7, 0xE1, 
	 0x12, 0x36, 0xA5, 0x7F, 0x63, 0x5A, 0x0F, 0x2B, 0xD0, 0x74, 0x32, 0x8B, 0xCA, 0xFD, 0x1B, 0x25, 
	 0x53, 0xE8, 0x0B, 0x2F, 0x93, 0xB4, 0x48, 0xB6, 0xBD, 0x40, 0x73, 0x12, 0x93, 0x0A, 0x3C, 0xBF, 
	 0x3F, 0xEC, 0xE3, 0x1C, 0x11, 0x72, 0x12, 0x2E, 0x01, 0xD4, 0xB6, 0x0E, 0xAD, 0x5B, 0x39, 0x7E, 
	 0x73, 0x10, 0x32, 0x2B, 0xD1, 0x75, 0xCE, 0xC3, 0x89, 0x17, 0xB1, 0xBC, 0xE2, 0x0D, 0xE0, 0xE1, 
	 0x7F, 0xDB, 0xB9, 0x45, 0x44, 0xBA, 0x51, 0x53, 0xB8, 0x01, 0x1B, 0xAD, 0xB0, 0x85, 0xDB, 0xAC, 
	 0xCB, 0xB8, 0xB5, 0xD7, 0x28, 0x37, 0x17, 0x83, 0xC1, 0x6D, 0x0C, 0x03, 0x75, 0x0E, 0x2B, 0xDA, 
	 0xAD, 0xA0, 0x03, 0xBA, 0x8F, 0x8E, 0xFB, 0x25, 0x0D, 0x2F, 0x3C, 0x02, 0x72, 0x2B, 0x96, 0xA1, 
	 0x50, 0x63, 0x7B, 0x1E, 0x1E, 0xBE, 0xEF, 0x08, 0x7D, 0xA4, 0xB6, 0xD4, 0xF5, 0x74, 0x15, 0x32, 
	 0xD7, 0xB6, 0xB6, 0x0C, 0x34, 0xDA, 0x1C, 0x05, 0x8C, 0x2E, 0xDA, 0x25, 0xF0, 0xB4, 0x4C, 0x50, 
	 0xB1, 0x3D, 0x3B, 0x59, 0x4C, 0x31, 0xFE, 0x40, 0x47, 0xBA, 0x56, 0x07, 0x0F, 0xB6, 0xFF, 0x75, 
	 0xEA, 0x33, 0xC0, 0x87, 0x06, 0x2C, 0x00, 0x8E, 0x21, 0x49, 0x78, 0x69, 0x0D, 0x8C, 0xCA, 0xC5, 
	 0x20, 0x6C, 0x89, 0xC5, 0x1F, 0x80, 0x9A, 0xE1, 0x09, 0x2E, 0x2A, 0xAF, 0xA0, 0x19, 0x25, 0x08, 
	 0xFD, 0x56, 0x3E, 0x1C, 0x83, 0xC2, 0x07, 0x2B, 0xC2, 0xE6, 0xC8, 0xD0, 0xF6, 0x12, 0x60, 0xFC, 
	 0x3B, 0xC1, 0x76, 0x01, 0x91, 0x45, 0x8D, 0xC2, 0x24, 0xA6, 0x8B, 0x5B, 0x6B, 0x03, 0xAE, 0x19, 
	 0x16, 0x2B, 0x34, 0xC2, 0x1E, 0x25, 0xE3, 0x6D, 0x4B, 0x69, 0x99, 0x8C, 0xC8, 0x95, 0xDF, 0xDA, 
	 0x2D, 0x1C, 0xE9, 0x01, 0x62, 0x50, 0x18, 0x68, 0x6D, 0xE5, 0xDA, 0x23, 0x2B, 0x8B, 0xD0, 0x58, 
	 0x24, 0x3B, 0xDE, 0x3E, 0x92, 0x2E, 0x3B, 0xDC, 0x77, 0x03, 0xD8, 0x52, 0x84, 0xDD, 0x40, 0xF7, 
	 0xDC, 0x2B, 0x0D, 0x45, 0xD1, 0xDE, 0x78, 0x2E, 0x8C, 0x4D, 0x0E, 0x58, 0x87, 0x37, 0xB8, 0x6D, 
	 0xDF, 0x3F, 0x8C, 0xC9, 0x03, 0xC1, 0xA2, 0x87, 0x1B, 0x2C, 0x25, 0x8E, 0xB0, 0xFF, 0x78, 0x73, 
	 0x54, 0x4A, 0x17, 0x2B, 0x00, 0xE4, 0x5E, 0xC8, 0x12, 0x0D, 0x3D, 0x05, 0x64, 0x2D, 0xC6, 0x00, 
	 0x8D, 0xD6, 0xFF, 0x0D, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x2C, 0xDB, 0xFF, 0x28, 
	 0x63, 0x29, 0x20, 0x31, 0x39, 0x38, 0x38, 0x2D, 0x04, 0x39, 0xAB, 0xF5, 0x33, 0x0D, 0x51, 0x75, 
	 0x73, 0x70, 0xBE, 0x80, 0x79, 0x63, 0x6B, 0x20, 0x4F, 0x5A, 0xB7, 0x10, 0x69, 0x63, 0x22, 0xDC, 
	 0xB6, 0xDF, 0x73, 0x11, 0x6D, 0x73, 0xBA, 0x5A, 0x96, 0x38, 0x2E, 0xD0, 0xB7, 0x9C, 0x00, 0x38, 
	 0x00, 0x13, 0x50, 0xBB, 0xF2, 0x0C, 0xD8, 0x6D, 0x61, 0xE0, 0xFC, 0xED, 0x28, 0xB4, 0x2F, 0x31, 
	 0xD3, 0xB1, 0x51, 0x74, 0x73, 0x07, 0xF6, 0x7F, 0x66, 0x51, 0x50, 0x92, 0xF7, 0xE3, 0x91, 0x58, 
	 0x03, 0x5B, 0xE1, 0x03, 0xD1, 0xE5, 0xC6, 0x99, 0xBA, 0x0A, 0xA5, 0x08, 0x50, 0xFF, 0x86, 0x85, 
	 0x32, 0xED, 0x8A, 0xC8, 0x58, 0x80, 0xE9, 0x8D, 0xDB, 0xC6, 0x76, 0xF9, 0x66, 0x11, 0x33, 0x24, 
	 0x9B, 0xDA, 0x72, 0x07, 0xAB, 0x8E, 0x73, 0xE3, 0xED, 0x1D, 0x1E, 0x99, 0xF9, 0x4E, 0x5B, 0x2D, 
	 0x00, 0x80, 0x90, 0x00, 0x00, 0x02, 0x00, 0x00, 0x40, 0xFF, 0xA4, 0xE8, 0x34, 0x00, 0x72, 0xFA, 
	 0x41, 0xE8, 0x29, 0x00, 0xE3, 0x35, 0x73, 0xF9, 0x83, 0xE9, 0x03, 0x72, 0x06, 0x88, 0xCC, 0xAC, 
	 0xF7, 0xD0, 0x95, 0x31, 0xC9, 0xE8, 0x15, 0x00, 0x11, 0xC9, 0x75, 0x08, 0x41, 0xE8, 0x0D, 0x00, 
	 0x73, 0xFB, 0x41, 0x41, 0x41, 0x8D, 0x03, 0x96, 0xF3, 0xA4, 0x96, 0xEB, 0xCE, 0xE8, 0x02, 0x00, 
	 0x11, 0xC9, 0x01, 0xDB, 0x75, 0x04, 0xAD, 0x11, 0xC0, 0x93, 0xC3, 0x5E, 0xB9, 0x74, 0x00, 0xAC, 
	 0x2C, 0xE8, 0x3C, 0x01, 0x77, 0xF9, 0xC1, 0x04, 0x08, 0x29, 0x34, 0xAD, 0xE2, 0xF1, 0xC3 };

	VFILE_RegisterBuiltinFileBlob(bfb_CWSDPMI_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_DOS32A_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_DOS4GW_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_HEXMEM16_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_HEXMEM32_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_DEBUG_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_TREE_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_MOVE_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_MEM_COM);
	VFILE_RegisterBuiltinFileBlob(bfb_FIND_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_DOSIDLE_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_LASTDRIV_COM);
	VFILE_RegisterBuiltinFileBlob(bfb_FCBS_COM);
	VFILE_RegisterBuiltinFileBlob(bfb_XCOPY_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_APPEND_EXE);
	VFILE_RegisterBuiltinFileBlob(bfb_EDIT_COM);
	VFILE_RegisterBuiltinFileBlob(bfb_DEVICE_COM);

	VFILE_Register("BUFFERS.COM",some_data_buffers,2607);
	VFILE_Register("COPY.EXE",some_data_copy,12693);
//	VFILE_Register("FILES.COM",some_data_files,2808);
	VFILE_Register("28.COM",some_data_28,8);
	VFILE_Register("50.COM",some_data_50,8);

	DOS_PSP psp(psp_seg);
	psp.MakeNew(0);
	dos.psp(psp_seg);
   
	/* The start of the filetable in the psp must look like this:
	 * 01 01 01 00 02
	 * In order to achieve this: First open 2 files. Close the first and
	 * duplicate the second (so the entries get 01) */
	Bit16u dummy=0;
	DOS_OpenFile("CON",OPEN_READWRITE,&dummy);	/* STDIN  */
	DOS_OpenFile("CON",OPEN_READWRITE,&dummy);	/* STDOUT */
	DOS_CloseFile(0);							/* Close STDIN */
	DOS_ForceDuplicateEntry(1,0);				/* "new" STDIN */
	DOS_ForceDuplicateEntry(1,2);				/* STDERR */
	DOS_OpenFile("CON",OPEN_READWRITE,&dummy);	/* STDAUX */
	if (!DOS_OpenFile("PRN",OPEN_READWRITE,&dummy)) DOS_OpenFile("CON",OPEN_READWRITE,&dummy);	/* STDPRN */

	psp.SetParent(psp_seg);
	/* Set the environment */
	psp.SetEnvironment(env_seg);
	/* Set the command line for the shell start up */
	CommandTail tail;
	tail.count=(Bit8u)strlen(init_line);
	strcpy(tail.buffer,init_line);
	MEM_BlockWrite(PhysMake(psp_seg,128),&tail,128);
	
	/* Setup internal DOS Variables */
	dos.dta(RealMake(psp_seg,0x80));
	dos.psp(psp_seg);
}

/* Pfff... starting and running the shell from a configuration section INIT
 * What the hell were you guys thinking? --J.C. */
void SHELL_Run() {
	LOG(LOG_MISC,LOG_DEBUG)("Running DOS shell now");

	if (first_shell != NULL) E_Exit("Attempt to start shell when shell already running");
	SHELL_ProgramStart(&first_shell);

	try {
		first_shell->Run();
		delete first_shell;
		first_shell = 0;//Make clear that it shouldn't be used anymore
	}
	catch (...) {
		delete first_shell;
		first_shell = 0;//Make clear that it shouldn't be used anymore
		throw;
	}
}

